    self,
{{!-- https://www.notion.so/konfigthis/Improve-in-line-type-information-for-Python-SDK-Pydantic-Types-from-last-sprint-3964bce6904246ad8e95118225e94883?pvs=4#81e549ed9c1e4bb3a510baccbbaaa838 --}}
{{#if bodyParam}}
    {{#if @root.keepAllParametersOptional}}
        {{#if bodyParam.isObject}}
    {{> body_arg isOptional=true}}
        {{else}}
            {{#if bodyParam.required}}
    {{!-- this is the case of a non-object type required schema which we can
    enforce even while maintaining backwards compatability --}}
    {{> body_arg isOptional=false}}
            {{else}}
    {{> body_arg isOptional=true}}
            {{/if}}
        {{/if}}
        {{#if interface}}
    {{> flattened_args allOptional=true}}
        {{/if}}
    {{else}}
        {{#if bodyParam.isObject}}
            {{#if interface}}
    {{> flattened_args allOptional=false}}
            {{else}}
    {{> body_arg isOptional=true}}
            {{/if}}
        {{else}}
            {{#if bodyParam.required}}
                {{!-- reference: 3964bce6904246ad8e95118225e94883 --}}
                {{#if bodyParam.isComposedObject}}
    {{> body_arg isOptional=true}}
                    {{#if interface}}
    {{> flattened_args allOptional=false}}
                    {{/if}}
                {{else}}
    {{> body_arg isOptional=false}}
                    {{#if interface}}
    {{> flattened_args allOptional=false}}
                    {{/if}}
                {{/if}}
            {{else}}
                {{#if interface}}
    {{> flattened_args allOptional=false}}
                {{/if}}
    {{> body_arg isOptional=true}}
            {{/if}}
        {{/if}}
    {{/if}}
{{else}}
    {{#if interface}}
    {{> flattened_args allOptional=@root.keepAllParametersOptional}}
    {{/if}}
{{/if}}
{{#if @root.keepAllParametersOptional}}
    {{> endpoint_args_params}}
{{/if}}
{{#unless interface}}
    {{> endpoint_args_params}}
{{/unless}}
{{#if isOapg}}
    skip_deserialization: bool = {{#if operations.additionalProperties.setSkipSerializationToTrueByDefault}}True{{else}}False{{/if}},
    timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
    {{#if produces}}
    accept_content_types: typing.Tuple[str] = _all_accept_content_types,
    {{/if}}
    {{#if bodyParam}}
        {{#with bodyParam}}
            {{#each getContent}}
                {{#if @first}}
    content_type: str = '{{{@key}}}',
                {{/if}}
            {{/each}}
        {{/with}}
    {{/if}}
{{/if}}
){{#unless omitReturnType}} -> typing.Union[
    {{#each responses}}
        {{#if isDefault}}
    ApiResponseForDefault{{#if async}}Async{{/if}},
        {{else}}
            {{#if is2xx}}
    ApiResponseFor{{code}}{{#if async}}Async{{/if}},
            {{/if}}
        {{/if}}
    {{/each}}
    api_client.ApiResponseWithoutDeserialization{{#if async}}Async{{/if}},
]{{/unless}}:
