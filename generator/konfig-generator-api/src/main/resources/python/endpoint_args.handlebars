    self,
{{#if isOapg}}
    skip_deserialization: bool = {{#if operations.additionalProperties.setSkipSerializationToTrueByDefault}}True{{else}}False{{/if}},
    timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
{{#if produces}}
    accept_content_types: typing.Tuple[str] = _all_accept_content_types,
{{/if}}
{{#if bodyParam}}
    {{#with bodyParam}}
        {{#each getContent}}
            {{#if @first}}
    content_type: str = '{{{@key}}}',
            {{/if}}
        {{/each}}
    {{/with}}
{{/if}}
{{/if}}
{{#if bodyParam}}
    {{#if bodyParam.required}}
        {{#with bodyParam}}
        {{#eq ../contentType "null"}}
    body: typing.Union[{{#each getContent}}{{#with this.schema}}{{baseName}},{{> model_templates/schema_python_types }}{{/with}}{{/each}} None, dict, list, schemas.Primitive] = None,
        {{else}}
    body: typing.Union[{{#each getContent}}{{#eq @key ../../contentType }}{{#with this.schema}}{{baseName}},{{> model_templates/schema_python_types }}{{/with}}{{/eq}}{{/each}} None, dict, list, schemas.Primitive] = None,
        {{/eq}}
        {{/with}}
    {{else}}
        {{#with bodyParam}}
        {{#eq ../contentType "null"}}
    body: typing.Union[{{#each getContent}}{{#with this.schema}}{{baseName}}, {{> model_templates/schema_python_types }}{{/with}}{{/each}} None, dict, list, schemas.Primitive] = None,
        {{else}}
    body: typing.Union[{{#each getContent}}{{#eq @key ../../contentType }}{{#with this.schema}}{{baseName}}, {{> model_templates/schema_python_types }}{{/with}}{{/eq}}{{/each}} None, dict, list, schemas.Primitive] = none,
        {{/eq}}
        {{/with}}
    {{/if}}
    {{#eq interface "True"}}
        {{#each allParamsWithRequestBodyProperties}}
    {{paramName}}: typing.Optional[{{dataType}}] = None,
        {{/each}}
    {{/eq}}
{{else}}
    {{#eq interface "True"}}
        {{#each requiredParamsWithRequestBodyProperties}}
    {{paramName}}: {{dataType}},
        {{/each}}
        {{#each optionalParamsWithRequestBodyProperties}}
    {{paramName}}: typing.Optional[{{dataType}}] = None,
        {{/each}}
    {{/eq}}
{{/if}}
{{#if queryParams}}
    query_params: typing.Union[RequestQueryParams, dict] = {},
{{/if}}
{{#if headerParams}}
    header_params: typing.Union[RequestHeaderParams, dict] = {},
{{/if}}
{{#if pathParams}}
    path_params: typing.Union[RequestPathParams, dict] = {},
{{/if}}
{{#if cookieParams}}
    cookie_params: typing.Union[RequestCookieParams, dict] = {},
{{/if}}
) -> typing.Union[
    {{#each responses}}
        {{#if isDefault}}
    ApiResponseForDefault,
        {{else}}
            {{#if is2xx}}
    ApiResponseFor{{code}},
            {{/if}}
        {{/if}}
    {{/each}}
    api_client.ApiResponseWithoutDeserialization,
]:
