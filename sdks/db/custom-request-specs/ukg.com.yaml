openapi: 3.0.0
info:
  version: v1
  title: User Defined Fields
  description: This API is for UTA customers only.
paths:
  /personnel/v1/audit-details:
    get:
      tags:
        - AuditDetails
      summary: Get Audit Details Data
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have \"View\" role for the
        \"Personnel Integration\" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}) .
      parameters:
        - name: startDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: tableName
          in: query
          required: true
          schema:
            type: string
        - name: fieldName
          in: query
          required: true
          schema:
            type: string
        - name: action
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditDetails'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /configuration/v1/businessruleimport-tool/fileupload:
    post:
      tags:
        - BusinessRuleImportTool
      summary: Takes an XML transaction and feeds it into the Business Rule Import Tool
      operationId: BusinessRuleImportTool_BusinessRuleImportFileUpload
      requestBody:
        $ref: '#/components/requestBodies/BusinessRuleImportRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/problem+json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRuleFileUpload'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessRuleFileUpload'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BusinessRuleFileUpload'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessRuleFileUpload'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessRuleFileUpload'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /configuration/v1/businessruleimport-tool/filestatus/{fileId}:
    get:
      tags:
        - BusinessRuleImportTool
      summary: Retrieves the status of an Business Rule Import Tool transaction
      operationId: BusinessRuleImportTool_GetFileUploadStatus
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileStatusModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FileStatusModel'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/FileStatusModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/FileStatusModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/FileStatusModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /configuration/v1/businessruleimport-tool/transactionstatus/{stagingId}:
    get:
      tags:
        - BusinessRuleImportTool
      summary: Retrieves the status of an Business Rule Import Tool transaction
      operationId: BusinessRuleImportTool_GetStagingStatus
      parameters:
        - name: stagingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStagingStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStagingStatus'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStagingStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStagingStatus'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStagingStatus'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /configuration/v1/businessruleimport-tool/transaction:
    post:
      tags:
        - BusinessRuleImportTool
      summary: >-
        Takes an XML transaction and feeds it into the Business Rule Import Tool
        (Staging)
      operationId: BusinessRuleImportTool_ImportsBusinessRuleStagingData
      requestBody:
        $ref: '#/components/requestBodies/BusinessRuleImportRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStaging'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStaging'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStaging'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStaging'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStaging'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /{tenant-alias}/api/candidates/{candidate-id}/background-checks:
    post:
      tags:
        - Candidate Request
      summary: Background Check Request
      description: Add Background Check to Candidate
      parameters:
        - name: candidate-id
          in: path
          required: true
          description: ''
          schema:
            type: string
        - name: tenant-alias
          in: path
          required: true
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backgroundChecks'
        description: New background check to be added
      responses:
        '201':
          description: Response object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backgroundChecks'
        '400':
          description: >-
            “Bad Request”. Indicates request failure due to bad/invalid data.
            Also includes respective validation message(s).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
  /{tenant-alias}/api/candidates/{candidate-id}/background-checks/{background-check-id}:
    put:
      tags:
        - Candidate Request
      summary: Background Check Status
      description: Update Candidate Background Check
      parameters:
        - name: candidate-id
          in: path
          required: true
          description: ''
          schema:
            type: string
        - name: background-check-id
          in: path
          required: true
          description: ''
          schema:
            type: string
        - name: tenant-alias
          in: path
          required: true
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backgroundChecks'
        description: Background check status to be updated
      responses:
        '201':
          description: Response object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backgroundChecks'
        '400':
          description: >-
            “Bad Request”. Indicates request failure due to bad/invalid data.
            Also includes respective validation message(s).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
  /{tenant-alias}/api/background-check-order-requests:
    get:
      tags:
        - Order Requests
      summary: Background Check Details
      description: >-
        Background Check Order Request with Candidate, Application, and
        Opportunity info
      parameters:
        - name: token
          in: query
          required: true
          description: >-
            A temporary Background Check Request tokena ssociated with the
            background check request that has been previously provided in the
            Background Check Request Redirect URL
          schema:
            type: string
        - name: tenant-alias
          in: path
          required: true
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: Response object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
        '400':
          description: >-
            “Bad Request”. Indicates request failure due to bad/invalid data.
            Also includes respective validation message(s).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
  /configuration/v1/code-tables:
    get:
      tags:
        - CodeTables
      summary: Get Code Tables information
      description: >-
        UKG Pro codes table lookup, will contain list of all tables with HATEOAS
        links to make a subsequent call to get all the codes for that table. If
        no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodeTablesGET'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodeTablesGET'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodeTablesGET'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodeTablesGET'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodeTablesGET'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
        - CodeTables
      summary: Post Code Tables information
      description: >-
        Creates a new UKG Pro Code table configuration, Array of objects is
        permitted for multi-records support. Permissions - UKG Pro service
        account must have "Add" role for the "Company Configuration Integration"
        Web Service. Headers - US-Customer-Api-Key, Authorization (base64
        encoded {username}:{password}). There is a white list of code tables
        that we allow to be written, only these codes can be created: Allergy,
        Awardtype, Careerprovider, Childsupporttype, Cobrastatus,
        Coursecategory, Coursedeliverymet, Coursesubcategory, Disability,
        Educlevel, Educmajor, Emptype, Jobfamily, Licensetype, Loantype,
        Maritalstatus, Military, Militaryera, Otherphone, Prefix, Proficiency,
        Project, Property, School, Skills, Suffix, Termtype, Wellness.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CodeTablesPOST'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CodeTablesPOST'
          application/problem+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CodeTablesPOST'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CodeTablesPOST'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CodeTablesPOST'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CodeTablesPOST'
        required: true
      responses:
        '207':
          description: Multi-Status
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/integration/kronos/business-structure-status:
    get:
      tags:
        - BusinessStructureStatus
      summary: >-
        Gets a list of Employees for which there is a change in business
        structure
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}) .
      parameters:
        - name: modifiedAfterDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: companyId
          in: query
          required: true
          schema:
            type: string
            pattern: ^[*a-zA-Z0-9]*$
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[*a-zA-Z0-9]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
            application/problem+json:
              schema:
                type: array
                items:
                  type: string
            application/xml:
              schema:
                type: array
                items:
                  type: string
            text/xml:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
            text/json:
              schema:
                type: object
                items:
                  type: object
            application/problem+json:
              schema:
                type: object
                items:
                  type: object
            application/xml:
              schema:
                type: object
                items:
                  type: object
            text/xml:
              schema:
                type: object
                items:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
            text/json:
              schema:
                type: object
                items:
                  type: object
            application/problem+json:
              schema:
                type: object
                items:
                  type: object
            application/xml:
              schema:
                type: object
                items:
                  type: object
            text/xml:
              schema:
                type: object
                items:
                  type: object
  /configuration/v1/company-details:
    get:
      tags:
        - CompanyDetails
      summary: Get Company Details
      description: >-
        Get all master company and component company details. If no pagination
        parameters specified, the default/max is applied. Permissions - UKG Pro
        service account must have "View" role for the "Company Configuration
        Integration" Web Service. Headers - US-Customer-Api-Key, Authorization
        (base64 encoded {username}:{password}).
      operationId: CompanyDetails_GetCompanyDetails
      parameters:
        - name: companyId
          in: query
          required: false
          description: 5 character value represents a UKG Pro CompanyID
          schema:
            type: string
        - name: masterCompanyId
          in: query
          required: false
          description: 5 character value represents a UKG Pro Master CompanyID
          schema:
            type: string
        - name: companyCode
          in: query
          required: false
          description: 5 character value represents a UKG Pro Company Code
          schema:
            type: string
        - name: isMasterCompany
          in: query
          required: false
          description: >-
            true/false values represent if this company is a UKG Pro Master
            Company
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDetails'
        '404':
          description: NotFound
        '429':
          description: '429'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/emp-deductions:
    get:
      tags:
        - EmpDeductions
      summary: Get employee deductions
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Api endpoints. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})


        Correct syntax when using parameters are as follows: 

        <ul> 

        <li>Get Employee deductions for companyid
          <ul> 
          <li>Example: /personnel/v1/companies/{companyId}/emp-deductions?DedCode={DedCode}</li> 
          </ul> 
          </li>
        <li>Get Employee deductions for companyid and employeeid 
          <ul> 
          <li>Example: /personnel/v1/companies/{companyId}/employees/{employeeId}/emp-deductions?DedCode={DedCode}}</li>
          </ul> 
          </li>
        <li>Get Employee deductions per page
          <ul>
          <li>Example: personnel/v1/emp-deductions?DedCode={DedCode}&page=1&per_page=100</li> 
          </ul>
          </li>
        </ul>
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: dedCode
          in: query
          required: true
          schema:
            type: string
        - name: benStatus
          in: query
          required: false
          schema:
            type: string
        - name: benefitOption
          in: query
          required: false
          schema:
            type: string
        - name: endDateTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpDeductions'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpDeductions'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpDeductions'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpDeductions'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpDeductions'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/compensation-details:
    get:
      tags:
        - CompensationDetails
      summary: Get all compensation details
      description: >
        Get all compensation details. 

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Compensation Details" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /compensation-details?dateInJob=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /compensation-details?dateInJob=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /compensation-details?dateInJob=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /compensation-details?dateInJob={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[\s*a-zA-Z0-9,\[\]]*$
        - name: primaryJobCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: jobGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: jobTitle
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: payGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: fullTimeOrPartTimeCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: salaryOrHourlyCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: primaryShiftCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: primaryShiftGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: dateInJob
          in: query
          description: >-
            Used to find date in job less than, greater than, equal to, or
            between passed date(s)
          required: false
          schema:
            type: string
        - name: dateLastPaid
          in: query
          description: >-
            Used to find date last paid less than, greater than, equal to, or
            between passed date(s)
          required: false
          schema:
            type: string
        - name: datePaidThru
          in: query
          description: >-
            Used to find date paid through less than, greater than, equal to, or
            between passed date(s)
          required: false
          schema:
            type: string
        - name: isAutoAllocated
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isAutoPaid
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isSeasonalWorker
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isHighlyCompensated
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isMultipleJob
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: performanceReviewRating
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: performanceReviewType
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
        '404':
          description: NotFound
        '429':
          description: '429'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/companies/{companyId}/compensation-details:
    get:
      tags:
        - CompensationDetails
      summary: Get all compensation details by company
      description: >
        Get all compensation details by company. 

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Compensation Details" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /companies/{companyId}/compensation-details?dateInJob=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /companies/{companyId}/compensation-details?dateInJob=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /companies/{companyId}/compensation-details?dateInJob=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /companies/{companyId}/compensation-details?dateInJob={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[\s*a-zA-Z0-9,\[\]]*$
        - name: primaryJobCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: jobGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: jobTitle
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: payGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: fullTimeOrPartTimeCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: salaryOrHourlyCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: primaryShiftCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: primaryShiftGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: dateInJob
          in: query
          description: >-
            Used to find date in job less than, greater than, equal to, or
            between passed date(s)
          required: false
          schema:
            type: string
        - name: dateLastPaid
          in: query
          description: >-
            Used to find date last paid less than, greater than, equal to, or
            between passed date(s)
          required: false
          schema:
            type: string
        - name: datePaidThru
          in: query
          description: >-
            Used to find date paid through less than, greater than, equal to, or
            between passed date(s)
          required: false
          schema:
            type: string
        - name: isAutoAllocated
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isAutoPaid
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isSeasonalWorker
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isHighlyCompensated
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isMultipleJob
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: performanceReviewRating
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: performanceReviewType
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
        '404':
          description: NotFound
        '429':
          description: '429'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/companies/{companyId}/employees/{employeeId}/compensation-details:
    get:
      tags:
        - CompensationDetails
      summary: Get all compensation details by company and employee
      description: >
        Get all compensation details by company and employee. 

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Compensation Details" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /companies/{companyId}/employees/{employeeId}/compensation-details?dateInJob=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /companies/{companyId}/employees/{employeeId}/compensation-details?dateInJob=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/compensation-details?dateInJob=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/compensation-details?dateInJob={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[\s*a-zA-Z0-9,\[\]]*$
        - name: primaryJobCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: jobGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: jobTitle
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: payGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: fullTimeOrPartTimeCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: salaryOrHourlyCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: primaryShiftCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: primaryShiftGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: dateInJob
          in: query
          description: >-
            Used to find date in job less than, greater than, equal to, or
            between passed date(s)
          required: false
          schema:
            type: string
        - name: dateLastPaid
          in: query
          description: >-
            Used to find date last paid less than, greater than, equal to, or
            between passed date(s)
          required: false
          schema:
            type: string
        - name: datePaidThru
          in: query
          description: >-
            Used to find date paid through less than, greater than, equal to, or
            between passed date(s)
          required: false
          schema:
            type: string
        - name: isAutoAllocated
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isAutoPaid
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isSeasonalWorker
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isHighlyCompensated
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isMultipleJob
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: performanceReviewRating
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: performanceReviewType
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpCompensationDetails'
        '404':
          description: NotFound
        '429':
          description: '429'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/compensation-details/{employeeId}:
    get:
      tags:
        - CompensationDetails
      summary: Get all compensation details by employee
      description: >
        Get all compensation details by employee. 

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Compensation Details" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /compensation-details/{employeeId}?dateInJob=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /compensation-details/{employeeId}?dateInJob=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /compensation-details/{employeeId}?dateInJob=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /compensation-details/{employeeId}?dateInJob={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpCompensationDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpCompensationDetails'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpCompensationDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpCompensationDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpCompensationDetails'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/dep-deductions:
    get:
      tags:
        - DependentDeductions
      summary: Get Dependent Deductions
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      operationId: DependentDeductions_Get
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: contactId
          in: query
          required: false
          schema:
            type: string
        - name: deductionCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: currentCOID
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DependentDeductions'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DependentDeductions'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DependentDeductions'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DependentDeductions'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DependentDeductions'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /payroll/v1/earnings-history-base-elements:
    get:
      tags:
        - EarningsHistory
      summary: Get Earnings History Base Elements
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Payroll Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      operationId: EarningsHistory_GetInsRate
      parameters:
        - name: companyID
          in: query
          required: false
          schema:
            type: string
        - name: earningCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeID
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: employeeNumber
          in: query
          required: false
          schema:
            type: string
            pattern: ^[0-9]*$
        - name: payDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: periodControl
          in: query
          required: false
          schema:
            type: string
            pattern: ^[0-9]*$
        - name: startPerControl
          in: query
          required: false
          schema:
            type: string
            pattern: ^[0-9]*$
        - name: endPerControl
          in: query
          required: false
          schema:
            type: string
            pattern: ^[0-9]*$
        - name: includeInDeferredCompensation
          in: query
          required: false
          schema:
            type: boolean
        - name: includeInDeferredCompensationHours
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsHistoryBaseElements'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsHistoryBaseElements'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsHistoryBaseElements'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsHistoryBaseElements'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsHistoryBaseElements'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/employee-changes:
    get:
      tags:
        - Changes By Date
      description: >-
        Gets all of the employee information since the last API call (3 hour
        minimum). A time span can be defined by the query parameters, but to get
        near real time updates on when the employee has changed, you should call
        this service 8 times per day and no more frequent than three hours
        between calls. It should also be understood that you must compare the
        results for an employee with the results from a previous call to see
        what property or properties have changed. Permissions - Ultipro service
        account must have "View" role for the EmployeeExport Web Service.
        Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password})
      operationId: EmployeeChanges_Get_All
      summary: Changes By Date
      parameters:
        - name: startDate
          in: query
          description: Used to lookup employee changes within time span
          required: false
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Used to lookup employee changes within time span
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: Pagination, which page you want to see
          required: false
          schema:
            type: number
        - name: per_page
          in: query
          description: Pagination, how many records per page you want to see
          required: false
          schema:
            type: number
            minLength: 1
            maxLength: 200
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeChangesResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeChangesResponse'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeChangesResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeChangesResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeChangesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /personnel/v1/employee-changes/{employeeId}:
    get:
      tags:
        - Employee Changes
      description: >-
        Gets all of the employee information since the last API call (minimum 3
        hours), for a specific employeeId. The data is windowed in 3 hour
        increments. To get near real time updates on when the employee has
        changed, you should call this service 8 times per day and no more
        frequent than three hours between calls. It should also be understood
        that you must compare the results for an employee with the results from
        a previous call to see what property or properties have changed. The
        Permissions - Ultipro service account must have "View" role for the
        EmployeeExport Web Service. Headers - US-Customer-Api-Key, Authorization
        (base64 encoded {username}:{password})
      summary: Changes By Employee ID
      operationId: EmployeeChanges_Get
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeChangesResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeChangesResponse'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeChangesResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeChangesResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeChangesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /configuration/v1/earnings:
    get:
      tags:
        - Earnings
      summary: Get a list of all earnings configurations
      description: >-
        Get details of all earnings configuration setup at company level.
        </br>If no pagination parameters specified, the default/max is applied.
        It is a public API that user can access once they have a valid username
        and password. Headers - US-Customer-Api-Key, Authorization (base64
        encoded {username}:{password}).
      parameters:
        - name: calculationRule
          in: query
          required: false
          schema:
            type: string
        - name: taxCategory
          in: query
          required: false
          schema:
            type: string
        - name: useDeductionOffset
          in: query
          required: false
          schema:
            type: string
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
        - name: includeInShiftDiffrential
          in: query
          required: false
          schema:
            type: string
        - name: includeInManualCheck
          in: query
          required: false
          schema:
            type: string
        - name: earningCode
          in: query
          required: false
          schema:
            type: string
        - name: includeInAccruals
          in: query
          required: false
          schema:
            type: string
        - name: includeInDeferredCompensation
          in: query
          required: false
          schema:
            type: boolean
        - name: includeInDeferredCompensationHours
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /configuration/v1/earnings/{calculationRule}/{taxCategory}/{useDeductionOffset}/{countryCode}/{includeInShiftDiffrential}/{includeInManualCheck}:
    get:
      tags:
        - Earnings
      summary: >-
        Get list of earnings configurations filtered by Parameter including
        pagination params
      description: >-
        Get all the earning configuration filtered by the parameter(s) passed.
        </br>If no pagination parameters specified, the default/max is applied.
        It is a public API that user can access once they have a valid username
        and password. Headers - US-Customer-Api-Key, Authorization (base64
        encoded {username}:{password}).
      parameters:
        - name: calculationRule
          in: path
          required: true
          schema:
            type: string
        - name: taxCategory
          in: path
          required: true
          schema:
            type: string
        - name: useDeductionOffset
          in: path
          required: true
          schema:
            type: string
        - name: countryCode
          in: path
          required: true
          schema:
            type: string
        - name: includeInShiftDiffrential
          in: path
          required: true
          schema:
            type: string
        - name: includeInManualCheck
          in: path
          required: true
          schema:
            type: string
        - name: earningCode
          in: query
          required: false
          schema:
            type: string
        - name: includeInAccruals
          in: query
          required: false
          schema:
            type: string
        - name: includeInDeferredCompensation
          in: query
          required: false
          schema:
            type: boolean
        - name: includeInDeferredCompensationHours
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /configuration/v1/earnings/{earningCode}:
    get:
      tags:
        - Earnings
      summary: Get a specific earning configuration
      description: >-
        Get details of the earning configuration requested. </br>If no
        pagination parameters specified, the default/max is applied. It is a
        public API that user can access once they have a valid username and
        password. Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - name: earningCode
          in: path
          required: true
          schema:
            type: string
        - name: calculationRule
          in: query
          required: false
          schema:
            type: string
        - name: taxCategory
          in: query
          required: false
          schema:
            type: string
        - name: useDeductionOffset
          in: query
          required: false
          schema:
            type: string
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
        - name: includeInShiftDiffrential
          in: query
          required: false
          schema:
            type: string
        - name: includeInManualCheck
          in: query
          required: false
          schema:
            type: string
        - name: earningCode
          in: query
          required: false
          schema:
            type: string
        - name: includeInAccruals
          in: query
          required: false
          schema:
            type: string
        - name: includeInDeferredCompensation
          in: query
          required: false
          schema:
            type: boolean
        - name: includeInDeferredCompensationHours
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsDto'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/employee-contract-details:
    get:
      tags:
        - EmployeeContract
      summary: Get all employment contract details
      description: >
        Get all employment contract details. 

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /employee-contract-details?dateTimeCreated=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /employee-contract-details?dateTimeCreated=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /employee-contract-details?dateTimeCreated=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /employee-contract-details?dateTimeCreated={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      operationId: EmployeeContract_Get
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: contractNumber
          in: query
          required: false
          schema:
            type: string
        - name: contractTypeCode
          in: query
          required: false
          schema:
            type: string
        - name: effectiveDate
          in: query
          description: >-
            Used to find contracts effective date less than, greater than, equal
            to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: dateTimeCreated
          in: query
          description: >-
            Used to find contract record created date less than, greater than,
            equal to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: rowLastChanged
          in: query
          description: >-
            Used to find contract record changed date less than, greater than,
            equal to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeContract'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeContract'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeContract'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeContract'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeContract'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/employee-cobra-details:
    get:
      tags:
        - EmployeeCobraDetails
      summary: Get Employee Cobra Details
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      operationId: EmployeeCobraDetails_Get
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: cobraIsActive
          in: query
          required: false
          schema:
            type: boolean
        - name: cobraStatus
          in: query
          required: false
          schema:
            type: string
        - name: dateOfCobraEvent
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeCobraDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeCobraDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeCobraDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeCobraDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeCobraDetails'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/contacts:
    get:
      tags:
        - Contact
      summary: Get all details for a person assigned to an employee as a contact
      description: >
        Get all details for a person assigned to an employee as a contact. 

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /contacts?statusAsOfDate=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /contacts?statusAsOfDate=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /contacts?statusAsOfDate=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /contacts?statusAsOfDate={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: isActive
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: relationshipCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: contactId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: cobraIsActive
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: cobraStatus
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: isBeneficiary
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: isDependent
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: dateOfCobraEvent
          in: query
          description: >-
            Used to find date of COBRA event less than, greater than, equal to,
            or between passed date(s)
          required: false
          schema:
            type: string
        - name: statusAsOfDate
          in: query
          description: >-
            Used to find contact status as of date less than, greater than,equal
            to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
            text/json:
              schema:
                $ref: '#/components/schemas/Contact'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Contact'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contact'
            text/xml:
              schema:
                $ref: '#/components/schemas/Contact'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/contacts/{contactId}:
    get:
      tags:
        - Contact
      summary: Get all details for a single person assigned to an employee as a contact
      description: >
        Get all details for a single person assigned to an employee as a
        contact. 

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /contacts/{contactId}?statusAsOfDate=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /contacts/{contactId}?statusAsOfDate=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /contacts/{contactId}?statusAsOfDate=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /contacts/{contactId}?statusAsOfDate={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: isActive
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: relationshipCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: contactId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: cobraIsActive
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: cobraStatus
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: isBeneficiary
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: isDependent
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: dateOfCobraEvent
          in: query
          description: >-
            Used to find date of COBRA event less than, greater than, equal to,
            or between passed date(s)
          required: false
          schema:
            type: string
        - name: statusAsOfDate
          in: query
          description: >-
            Used to find contact status as of date less than, greater than,
            equal to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
            text/json:
              schema:
                $ref: '#/components/schemas/Contact'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Contact'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contact'
            text/xml:
              schema:
                $ref: '#/components/schemas/Contact'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/emp-deductions-benefit-option-change-date:
    get:
      tags:
        - EmpDedBenOptionDate
      summary: Get Employee Deduction Benefit Option Change Date
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      operationId: EmpDedBenOptionDate_Get
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: deductionCode
          in: query
          required: false
          schema:
            type: string
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/EmployeeDeductionBenefitOptionChangeDate
            text/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/EmployeeDeductionBenefitOptionChangeDate
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/EmployeeDeductionBenefitOptionChangeDate
            application/xml:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/EmployeeDeductionBenefitOptionChangeDate
            text/xml:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/EmployeeDeductionBenefitOptionChangeDate
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /payroll/v1/direct-deposit:
    get:
      tags:
        - DirectDeposit
      summary: Get list of direct deposit details for US and Canadian employees
      description: >
        Get list of direct deposit details for US and Canadian employees.  

        If no pagination parameters specified, the default/max is applied.
        Permissions - UltiPro service account must have "View" role for the
        "Employee Direct Deposit" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /direct-deposit?dateTimeChanged=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /direct-deposit?dateTimeChanged=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /direct-deposit?dateTimeChanged=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /direct-deposit?dateTimeChanged={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      parameters:
        - name: accountIsInactive
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeBankRoutingNumber
          in: query
          required: false
          schema:
            type: string
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
        - name: dateTimeChanged
          in: query
          description: >-
            Used to find direct deposit record changed date less than, greater
            than, equal to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DirectDepositModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DirectDepositModel'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DirectDepositModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DirectDepositModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DirectDepositModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /payroll/v1/companies/{companyId}/direct-deposit:
    get:
      tags:
        - DirectDeposit
      summary: >-
        Get list of direct deposit details for US and Canadian employees by
        company
      description: >
        Get list of direct deposit details for US and Canadian employees by
        company.  

        If no pagination parameters specified, the default/max is applied.
        Permissions - UltiPro service account must have "View" role for the
        "Employee Direct Deposit" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: accountIsInactive
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeBankRoutingNumber
          in: query
          required: false
          schema:
            type: string
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
        - name: dateTimeChanged
          in: query
          description: >-
            Used to find direct deposit record changed date less than, greater
            than, equal to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DirectDepositModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DirectDepositModel'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DirectDepositModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DirectDepositModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DirectDepositModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/deduction-history-effective-change-dates:
    get:
      tags:
        - Employee Deduction History Effective Date
      summary: Deductions History Effective Change Date
      description: |
        If no pagination parameters specified, the default/max is applied. 
         Permissions - UKG Pro service account must have "View" role for the "Personnel Integration" Api endpoints. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}).</br>
          fieldName is a required parameter that takes one of the following:
           <ul>
           <li>changeReason</li>
           <li>benefitStartDate</li>
           <li>benefitStopDate</li>
           <li>benefitOption</li>
           <li>employeeAmount</li>
           <li>employeeBenefitAmount</li>
           <li>employeeGoalAmount</li>
           <li>eoiDesiredAmount</li>
           <li>eoiDesiredCalcRateOrPercent</li>
           <li>declinedByCarrier</li>
           <li>declinedByCarrierReason</li>
           <li>waiveReason</li>
           <li>deductionStartDate</li>
           <li>deductionStopDate</li>
           </ul>
           sessionDate is an optional parameter that defaults to today's date if null.</br>
          deductionCode is a required parameter that takes a list of codes [ded1,ded2].</br>
          CompanyId is an optional parameter that takes a list of IDs [coid1,coid2].</br>
           

         Correct syntax when using parameters are as follows: 
         <ul> 
           <li>Get deductions history change date by single deduction code 
           <ul> 
           <li>Example: /personnel/v1/deduction-history-effective-change-dates?fieldName={fieldName}&deductionCode={dedCode}</li> 
           </ul> 
           </li>
         <li>Get deductions history change date by multiple deduction code 
           <ul> 
           <li>Example: /personnel/v1/deduction-history-effective-change-dates?fieldName={fieldName}&deductionCode={dedCode1,dedCode2}</li>
           </ul> 
           </li>
           <li>Get deductions history change date multiple deduction code with multiple company 
           <ul> 
           <li>Example: /personnel/v1/deduction-history-effective-change-dates?fieldName={fieldName}&deductionCode={dedCode1,dedCode2}&companyId={companyId1,companyId1}</li>
           </ul> 
           </li>
           <li>Get deductions history change date by sessionDate,deduction code and company 
           <ul> 
           <li>Example: /personnel/v1/deduction-history-effective-change-dates?fieldName={fieldName}&sessionDate={sessionDate}deductionCode={deductionCode}&companyId={companyId}</li>
           </ul> 
           </li>
         <li>Get deductions history change date per page
           <ul>
           <li>Example: /personnel/v1/deduction-history-effective-change-dates?fieldName={fieldName}&page=1&per_page=100</li> 
           </ul>
           </li>
         </ul>
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: sessionDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: fieldName
          in: query
          required: true
          schema:
            type: string
        - name: deductionCode
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpDedHistoryEffectiveChangeDate'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpDedHistoryEffectiveChangeDate'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpDedHistoryEffectiveChangeDate'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpDedHistoryEffectiveChangeDate'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpDedHistoryEffectiveChangeDate'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/employee-demographic-details:
    get:
      tags:
        - Employee Demographic Details
      summary: Get Employee Demographic Details
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[*a-zA-Z0-9]*$
        - name: companyId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[*a-zA-Z0-9]*$
        - name: lastName
          in: query
          required: false
          schema:
            type: string
            pattern: ^[*a-zA-Z]*$
        - name: emailAddress
          in: query
          required: false
          schema:
            type: string
        - name: addressState
          in: query
          required: false
          schema:
            type: string
            pattern: ^[*a-zA-Z]*$
        - name: addressCountry
          in: query
          required: false
          schema:
            type: string
            pattern: ^[*a-zA-Z]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDemographicDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDemographicDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDemographicDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDemographicDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDemographicDetails'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '429':
          description: '429'
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/employee-education:
    get:
      summary: Get all education details
      description: >
        Get all education details. If no pagination parameters specified, the
        default/max is applied. Permissions - UKG Pro service account must have
        "View" role for the "Personnel Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      tags:
        - EmployeeEducation
      operationId: EmployeeEducation_Get
      parameters:
        - name: systemId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: country
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeEducationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeEducationModel'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeEducationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeEducationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeEducationModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/employee-extended-elements:
    get:
      tags:
        - EmployeeExtendedElements
      summary: Get Employee Extended Elements
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      operationId: EmployeeExtendedElements_Get
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeExtendedElements'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeExtendedElements'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeExtendedElements'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeExtendedElements'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeExtendedElements'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/employee-employment-details:
    get:
      summary: Get Employee Employment Details
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})

        <ul> <li>Company ID parameter can take in multiple deduction codes

        separated by coma. ex: [ABC, DEF]</li> <li>Primary Job Code parameter

        can take in multiple pay frequencies separated by coma. ex: [ABC,

        DEF]</li> <li>Primary Work Location Code parameter can take in multiple

        pay frequencies separated by coma. ex: [ABC, DEF]</li> <li>Primary

        Project Code parameter can take in multiple pay frequencies separated by

        coma. ex: [ABC, DEF]</li> <li>Deduction Group Code parameter can take in

        multiple pay frequencies separated by coma. ex: [ABC, DEF]</li>

        <li>Earning Group Code parameter can take in multiple pay frequencies

        separated by coma. ex: [ABC, DEF]</li> <li>Employee Type Code parameter

        can take in multiple pay frequencies separated by coma. ex: [ABC,

        DEF]</li> <li>Employee Status Code parameter can take in multiple pay

        frequencies separated by coma. ex: [ABC, DEF]</li> <li>Pay Group

        parameter can take in multiple pay frequencies separated by coma. ex:

        [ABC, DEF]</li> </ul>
      tags:
        - EmployeeEmploymentDetails
      parameters:
        - name: companyID
          in: query
          required: false
          schema:
            type: string
        - name: employeeID
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: primaryJobCode
          in: query
          required: false
          schema:
            type: string
        - name: jobTitle
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: fullTimeOrPartTimeCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: primaryWorkLocationCode
          in: query
          required: false
          schema:
            type: string
        - name: primaryProjectCode
          in: query
          required: false
          schema:
            type: string
        - name: deductionGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: earningGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeTypeCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeStatusCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeNumber
          in: query
          required: false
          schema:
            type: string
            pattern: ^[0-9]*$
        - name: supervisorId
          in: query
          required: false
          schema:
            type: string
        - name: originalHireDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: lastHireDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: dateOfTermination
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: dateOfRetirement
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: dateLastPayDatePaid
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: isHomeCompany
          in: query
          required: false
          schema:
            type: string
            pattern: ^[yY]{1}$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeEmploymentDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeEmploymentDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeEmploymentDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeEmploymentDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeEmploymentDetails'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/employee-job-history-details:
    get:
      summary: Get all employee job history details
      description: >
        Get all employee job history details. If no pagination parameters
        specified, the default/max is applied. Permissions - UKG Pro service
        account must have "View" role for the "Employee Job History Details" Web
        Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /employee-job-history-details?dateTimeCreated=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /employee-job-history-details?dateTimeCreated=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /employee-job-history-details?dateTimeCreated=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /employee-job-history-details?dateTimeCreated={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      tags:
        - EmployeeJobHistoryDetail
      operationId: EmployeeJobHistoryDetail_Get
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: isOrgChange
          in: query
          required: false
          schema:
            type: string
        - name: isJobChange
          in: query
          required: false
          schema:
            type: string
        - name: isRateChange
          in: query
          required: false
          schema:
            type: string
        - name: isPromotion
          in: query
          required: false
          schema:
            type: string
        - name: systemId
          in: query
          required: false
          schema:
            type: string
        - name: jobEffectiveDate
          in: query
          description: >-
            Used to find job history effective date less than, greater than,
            equal to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: dateTimeCreated
          in: query
          description: >-
            Used to find job history created less than, greater than, equal to,
            or between passed date(s)
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/employee-job-history-details/{systemId}:
    get:
      summary: Get a single job history detail record
      description: >
        Get a single job history detail record. 

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Job History Details" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /employee-job-history-details/systemID/[systemID]?dateTimeCreated=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /employee-job-history-details/systemID/[systemID]?dateTimeCreated=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /employee-job-history-details/systemID/[systemID]?dateTimeCreated=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /employee-job-history-details/systemID/[systemID]?dateTimeCreated={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      tags:
        - EmployeeJobHistoryDetail
      parameters:
        - name: systemId
          in: path
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: isOrgChange
          in: query
          required: false
          schema:
            type: string
        - name: isJobChange
          in: query
          required: false
          schema:
            type: string
        - name: isRateChange
          in: query
          required: false
          schema:
            type: string
        - name: isPromotion
          in: query
          required: false
          schema:
            type: string
        - name: systemId
          in: query
          required: false
          schema:
            type: string
        - name: jobEffectiveDate
          in: query
          description: >-
            Used to find job history effective date less than, greater than,
            equal to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: dateTimeCreated
          in: query
          description: >-
            Used to find job history created less than, greater than, equal to,
            or between passed date(s)
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/employee-ids:
    post:
      tags:
        - Employee ID Lookup
      description: >-
        Look up Employee ID/Company ID. This operation is a POST due the
        sensitive nature of the lookup properties not appropriate for URI. This
        service also supports multiple records to be looked up in the body of
        the request (array of Identifier objects). Permissions - Ultipro service
        account must have the "View" and "Add" roles for the "Personnel
        Integration" Web Service. Headers - US-Customer-Api-Key, Authorization
        (base64 encoded {username}:{password})
      summary: Employee ID Lookup
      operationId: EmployeeIds
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Identifiers'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Identifiers'
          application/problem+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Identifiers'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Identifiers'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Identifiers'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Identifiers'
        required: true
      responses:
        '207':
          description: Multi-Status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeIdsResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeIdsResponse'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeIdsResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeIdsResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeIdsResponse'
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /personnel/v1/empl-multiple-jobs:
    get:
      tags:
        - EmployeeMultipleJobsOPP
      summary: Get employee multiple jobs details
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})

         Correct syntax when using parameters are as follows: 
        <ul>

        <li>Get Multiple jobs for employee ID

        <ul>

        <li>Example:
        /personnel/v1/empl-multiple-jobs?employeeId={employeeId}</li>

        </ul>

        </li>

        <li>Get Multiple jobs for company ID

        <ul>

        <li>Example: /personnel/v1/empl-multiple-jobs?companyId={companyId}</li>

        </ul>

        </li>

        <li>Get Multiple jobs for employee ID and company Id

        <ul>

        <li>Example:
        /personnel/v1/empl-multiple-jobs?employeeId={employeeId}&companyId={companyId}</li>

        </ul>

        </li>

        <li>Get Multiple jobs per page

        <ul>

        <li>Example: /personnel/v1/empl-multiple-jobs?page=1&per_page=10000</li>

        </ul>

        </li>

        </ul>
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: jobCode
          in: query
          required: false
          schema:
            type: string
        - name: isPrimaryJob
          in: query
          required: false
          schema:
            type: string
        - name: jobIsInActive
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultipleJobs'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultipleJobs'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultipleJobs'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultipleJobs'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultipleJobs'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/employee-multi-phone-numbers:
    get:
      tags:
        - EmployeeMultiPhoneNumbers
      summary: Get employee multiple phone numbers
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})
      operationId: EmployeeMultiPhoneNumbers_Get
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[*a-zA-Z0-9]*$
        - name: systemId
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultiPhoneNumbers'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultiPhoneNumbers'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultiPhoneNumbers'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultiPhoneNumbers'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultiPhoneNumbers'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/empl-multiple-positions:
    get:
      tags:
        - EmpMultiplePositions
      summary: Get Employee Multiple Positions
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})
      operationId: EmpMultiplePositions_Get
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: jobCode
          in: query
          required: false
          schema:
            type: string
        - name: positionCode
          in: query
          required: false
          schema:
            type: string
        - name: isPrimary
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultiplePositions'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultiplePositions'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultiplePositions'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultiplePositions'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeMultiplePositions'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/national-documents:
    get:
      summary: All employee national document details
      description: >
        All employee national document details. If no pagination parameters
        specified, the default/max is applied. Permissions - UKG Pro service
        account must have "View" role for the "Personnel Integration" Web
        Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      tags:
        - NationalDocument
      operationId: NationalDocument_Get
      parameters:
        - name: contactId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: nationalDocumentIssuingCountryCode
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalDocumentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/NationalDocumentModel'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NationalDocumentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/NationalDocumentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/NationalDocumentModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/integration/kronos/employee-profiles:
    get:
      tags:
        - KronosEmployeeProfiles
      summary: Get list of employees profile
      description: |-
        If no pagination parameters specified, the default/max is applied.
          
          Permissions - UKG Pro service account must have "View" role for the "Personnel Integration" Api endpoints. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). <br><br>/personnel/v1/integration/kronos/employee-profiles can take following optional parameter:<br><ul><li>Product: Required parameter </li> <li>companyId: Can take in multiple IDs separated by comma. ex: {id1}, {id2}</li><li>employeeId: Can take in multiple IDs separated by comma. ex: {id1}, {id2}</li><li>includeHistoryIfChangeDetected</li><li>effectiveDate</li><li>changeWindow</li><li>per_Page</li><li>page</li><br>Correct syntax when using parameters are as follows:<ul><li>Get kronos employee profiles with required product parameter<ul>   <li>Example: personnel/v1/integration/kronos/employee-profiles?product={productCode}</ul></li><li>Get kronos employee profiles by companyId and employeeId<ul><li>Example: personnel/v1/integration/kronos/employee-profiles?product={productCode}&companyId={COID1}&employeeId={EEID1}, {EEID2}&effectiveDate={date}</li></ul></li><li>Get employee profiles by includeHistoryIfChangeDetected<ul><li>Example: personnel/v1/integration/kronos/employee-profiles?product={productCode}&companyId={COID1}&employeeId={EEID1}&effectiveDate={date}&includeHistoryIfChangeDetected=true</li></ul></li><li>Get kronos employee profiles by perPage and page<ul><li>Example: personnel/v1/integration/kronos/employee-profiles?product={productCode}&page=1&per_Page={pageSize}</li></ul></ul>
      parameters:
        - name: product
          in: query
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: changeWindow
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: includeHistoryIfChangeDetected
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeProfiles'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeProfiles'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeProfiles'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeProfiles'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeProfiles'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/employee-security-user-details:
    get:
      tags:
        - Employee Security User Details
      summary: Get employee security user details
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: userName
          in: query
          required: false
          schema:
            type: string
        - name: employeeID
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeSecurityUserDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeSecurityUserDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeSecurityUserDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeSecurityUserDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeSecurityUserDetails'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/integration/kronos/employee-status:
    get:
      tags:
        - KronosEmployeeStatus
      summary: Get Employee Status
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      operationId: KronosEmployeeStatus_Get
      parameters:
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeIds
          in: query
          required: false
          schema:
            type: string
        - name: inactiveTermWindow
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: inactiveDisabledWindow
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeStatus'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeStatus'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeStatus'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeStatus'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeStatus'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /payroll/v1/companies/pay-statements-summary:
    post:
      tags:
        - CompanyPayStatement
      summary: >-
        Get employee(s) pay statement(s) summary for a company or pay group for
        a given date range.
      description: >-
        This method returns zero or more pay statement summaries for a given
        start date and end date. The pay summary information gives you a quick
        view of the total earnings, deductions and taxes. You may also pass in a
        PayGroup or CompanyIdentifer to further filter the list of pay summaries
        returned. <br />If no pagination parameters specified, the default is
        applied. Permissions - UKG Pro service account must have "View" role for
        the "Employee Pay Statements" Web Service. Headers -
        US-Customer-Api-Key, US-Client-id, Authorization
        ({username}:{password}).
      requestBody:
        $ref: '#/components/requestBodies/CompanyPayStatementFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyPayStatementModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyPayStatementModel'
        '400':
          description: BadRequest
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /payroll/v1/companies/pay-statements:
    post:
      tags:
        - CompanyPayStatement
      summary: >-
        Get employee(s) pay statement(s) for a company or pay group for a given
        date range.
      description: >-
        This method returns zero or more full pay statement documents for a
        given start date and end date. You may also pass in a PayGroup or
        CompanyIdentifer to further filter the list of pay summaries returned.
        <br />If no pagination parameters specified, the default is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Employee Pay Statements" Web Service. Headers - US-Customer-Api-Key,
        US-Client-id, Authorization ({username}:{password}).
      requestBody:
        $ref: '#/components/requestBodies/CompanyPayStatementFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayStatementModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayStatementModel'
        '400':
          description: BadRequest
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /payroll/v1/employees/pay-statements:
    post:
      tags:
        - EmployeePayStatement
      summary: >-
        Get employee pay statement(s) based on the passed employee identifier
        for a given date range.
      description: >-
        This method returns zero or more pay statements for a specific employee
        identified by the passed-in employee identifier. The pay statement
        returned is based on the start date and the end date passed in. <br />If
        no pagination parameters specified, the default is applied. Permissions
        - UKG Pro service account must have "View" role for the "Employee Pay
        Statements" Web Service. Headers - US-Customer-Api-Key, US-Client-id,
        Authorization ({username}:{password}).
      requestBody:
        $ref: '#/components/requestBodies/EmployeePayStatementRangeFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayStatementModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayStatementModel'
        '400':
          description: BadRequest
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /payroll/v1/employees/pay-statement/last:
    post:
      tags:
        - EmployeePayStatement
      summary: Get employee last pay statement based on the passed employee identifier.
      description: >-
        This method allows you to retrieve an individual pay statement by
        providing an employee identifier. This is helpful if you are designing
        an application that is aware of the employees to retrieve. <br />If no
        pagination parameters specified, the default is applied. Permissions -
        UKG Pro service account must have "View" role for the "Employee Pay
        Statements" Web Service. Headers - US-Customer-Api-Key, US-Client-id,
        Authorization ({username}:{password})
      requestBody:
        $ref: '#/components/requestBodies/EmployeePayStatementRangeFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayStatementModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayStatementModel'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeePayStatementModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeePayStatementModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeePayStatementModel'
        '400':
          description: BadRequest
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /payroll/v1/employees/pay-statement/{PayIdentifier}:
    get:
      tags:
        - EmployeePayStatement
      summary: Get employee pay statement based on the given pay identifier.
      description: >-
        This method returns zero or one pay statements based on the given pay
        identifier. The pay identifier is a string value that represents a
        unique pay statement.<br /> If no pagination parameters specified, the
        default is applied. Permissions - UKG Pro service account must have
        "View" role for the "Employee Pay Statements" Web Service. Headers -
        US-Customer-Api-Key, US-Client-id, Authorization
        ({username}:{password}).
      parameters:
        - name: PayIdentifier
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayStatementModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayStatementModel'
        '400':
          description: BadRequest
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/employee-supervisor-details:
    get:
      tags:
        - EmployeeSupervisorDetails
      summary: Get Employee Supervisor Details
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})
      operationId: EmployeeSupervisorDetails_Get
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: supervisorCompanyId
          in: query
          required: false
          schema:
            type: string
        - name: supervisorEmployeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: supervisorCompanyCode
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeSupervisorDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeSupervisorDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeSupervisorDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeSupervisorDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeSupervisorDetails'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/employment-details:
    get:
      tags:
        - EmploymentDetails
      summary: Get Employment Details
      description: >
        Get all employment record details. 

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /employment-details?dateTimeCreated=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /employment-details?dateTimeCreated=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /employment-details?dateTimeCreated=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /employment-details?dateTimeCreated={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: primaryJobCode
          in: query
          required: false
          schema:
            type: string
        - name: jobTitle
          in: query
          required: false
          schema:
            type: string
        - name: fullTimeOrPartTimeCode
          in: query
          required: false
          schema:
            type: string
        - name: primaryWorkLocationCode
          in: query
          required: false
          schema:
            type: string
        - name: primaryProjectCode
          in: query
          required: false
          schema:
            type: string
        - name: deductionGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: earningGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeTypeCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeStatusCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeNumber
          in: query
          required: false
          schema:
            type: string
        - name: supervisorID
          in: query
          required: false
          schema:
            type: string
        - name: originalHireDate
          in: query
          required: false
          schema:
            type: string
        - name: lastHireDate
          in: query
          required: false
          schema:
            type: string
        - name: dateOfTermination
          in: query
          required: false
          schema:
            type: string
        - name: dateOfRetirement
          in: query
          required: false
          schema:
            type: string
        - name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
        - name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
        - name: dateLastPayDatePaid
          in: query
          required: false
          schema:
            type: string
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: isHomeCompany
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
        '404':
          description: NotFound
        '429':
          description: '429'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/companies/{companyId}/employment-details:
    get:
      tags:
        - EmploymentDetails
      summary: Get Employment Details
      description: >
        Get all employment record details by company. 

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /companies/{companyId}/employment-details?dateTimeCreated=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /companies/{companyId}/employment-details?dateTimeCreated=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /companies/{companyId}/employment-details?dateTimeCreated=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /companies/{companyId}/employment-details?dateTimeCreated={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: primaryJobCode
          in: query
          required: false
          schema:
            type: string
        - name: jobTitle
          in: query
          required: false
          schema:
            type: string
        - name: fullTimeOrPartTimeCode
          in: query
          required: false
          schema:
            type: string
        - name: primaryWorkLocationCode
          in: query
          required: false
          schema:
            type: string
        - name: primaryProjectCode
          in: query
          required: false
          schema:
            type: string
        - name: deductionGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: earningGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeTypeCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeStatusCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeNumber
          in: query
          required: false
          schema:
            type: string
        - name: supervisorID
          in: query
          required: false
          schema:
            type: string
        - name: originalHireDate
          in: query
          required: false
          schema:
            type: string
        - name: lastHireDate
          in: query
          required: false
          schema:
            type: string
        - name: dateOfTermination
          in: query
          required: false
          schema:
            type: string
        - name: dateOfRetirement
          in: query
          required: false
          schema:
            type: string
        - name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
        - name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
        - name: dateLastPayDatePaid
          in: query
          required: false
          schema:
            type: string
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: isHomeCompany
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
        '404':
          description: NotFound
        '429':
          description: '429'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/companies/{companyId}/employees/{employeeId}/employment-details:
    get:
      tags:
        - EmploymentDetails
      summary: Get Employment Details
      description: >
        Get a single employment detail by company. 

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /companies/{companyId}/employees/{employeeId}/employment-details?dateTimeCreated=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /companies/{companyId}/employees/{employeeId}/employment-details?dateTimeCreated=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/employment-details?dateTimeCreated=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/employment-details?dateTimeCreated={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: primaryJobCode
          in: query
          required: false
          schema:
            type: string
        - name: jobTitle
          in: query
          required: false
          schema:
            type: string
        - name: fullTimeOrPartTimeCode
          in: query
          required: false
          schema:
            type: string
        - name: primaryWorkLocationCode
          in: query
          required: false
          schema:
            type: string
        - name: primaryProjectCode
          in: query
          required: false
          schema:
            type: string
        - name: deductionGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: earningGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeTypeCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeStatusCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeNumber
          in: query
          required: false
          schema:
            type: string
        - name: supervisorID
          in: query
          required: false
          schema:
            type: string
        - name: originalHireDate
          in: query
          required: false
          schema:
            type: string
        - name: lastHireDate
          in: query
          required: false
          schema:
            type: string
        - name: dateOfTermination
          in: query
          required: false
          schema:
            type: string
        - name: dateOfRetirement
          in: query
          required: false
          schema:
            type: string
        - name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
        - name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
        - name: dateLastPayDatePaid
          in: query
          required: false
          schema:
            type: string
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: isHomeCompany
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpEmploymentDetails'
        '404':
          description: NotFound
        '429':
          description: '429'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /payroll/v2/general-ledger:
    get:
      tags:
        - GeneralLedgerRunDetailsV2
      summary: >-
        Returns a list of details for a general ledger run, filterable by runId
        and blockId
      operationId: GeneralLedgerRunDetailsV2_Get
      parameters:
        - name: runId
          in: query
          required: false
          schema:
            type: string
        - name: blockId
          in: query
          required: false
          schema:
            type: string
        - name: mostRecent
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLedgerRunDetailsV2'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLedgerRunDetailsV2'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLedgerRunDetailsV2'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLedgerRunDetailsV2'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLedgerRunDetailsV2'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /payroll/v2/general-ledger/{runId}:
    get:
      tags:
        - GeneralLedgerRunDetailsV2
      summary: >-
        Returns a list of details for a general ledger run, filterable by runId
        and blockId
      operationId: GeneralLedgerRunDetailsV2_GetByRunId
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
        - name: runId
          in: query
          required: false
          schema:
            type: string
        - name: blockId
          in: query
          required: false
          schema:
            type: string
        - name: mostRecent
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLedgerRunDetailsV2'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLedgerRunDetailsV2'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLedgerRunDetailsV2'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLedgerRunDetailsV2'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralLedgerRunDetailsV2'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/employee-global-banks:
    get:
      tags:
        - EmployeeGlobalBank
      summary: Get all direct deposit details for global employees
      description: >
        Get all direct deposit details for global employees.  

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Global Employee Direct Deposit" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /employee-global-banks?dateModified=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /employee-global-banks?dateModified=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /employee-global-banks?dateModified=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /employee-global-banks?dateModified={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      operationId: EmployeeGlobalBank_Get
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: employeeCountry
          in: query
          required: false
          schema:
            type: string
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: dateModified
          in: query
          description: >-
            Used to find global employee's direct deposit modified date less
            than, greater than, equal to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeGlobalBanksModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeGlobalBanksModel'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeGlobalBanksModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeGlobalBanksModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeGlobalBanksModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/employee-pay-deduction-elements:
    get:
      tags:
        - EmployeePayDeductionElement
      summary: Get Global Employee Payments and Deductions Service
      description: >
        Get all global employee payments and deductions.  

        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /employee-pay-deduction-elements?modifiedDate=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /employee-pay-deduction-elements?modifiedDate=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /employee-pay-deduction-elements?modifiedDate=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /employee-pay-deduction-elements?modifiedDate={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      operationId: EmployeePayDeductionElement_Get
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: country
          in: query
          required: false
          schema:
            type: string
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: payDeductionName
          in: query
          required: false
          schema:
            type: string
        - name: periodStartName
          in: query
          required: false
          schema:
            type: string
        - name: paymentOrDeductionIndicator
          in: query
          required: false
          schema:
            type: string
        - name: modifiedDate
          in: query
          description: >-
            Used to find a payment or deduction modified less than, greater
            than, equal to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          description: >-
            Used to find a payment or deduction where the pay period start is
            less than, greater than, equal to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: endDate
          in: query
          description: >-
            Used to find a payment or deduction where the pay period end is less
            than, greater than, equal to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayDeductionElementsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayDeductionElementsModel'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeePayDeductionElementsModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeePayDeductionElementsModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeePayDeductionElementsModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/import-tool:
    post:
      tags:
        - ImportTool
      summary: Takes an XML transaction and feeds it into the Import Tool
      description: >-
        Submits an encoded XML transaction to the Import Tool. Transaction
        results can be viewed on the Administration > Integration Studio >
        Import Tool > Results page. Reference the Import Tool XML and
        Configuration Settings Guide for transaction details. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}). UltiPro service account must have the View and
        Add roles for the Personnel Integration Web Service. This POST call has
        a requirement of PersonnelResourceAuthorize(ApiOperation.Create)
      operationId: ImportTool_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.ImportRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStaging
            text/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStaging
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStaging
            application/xml:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStaging
            text/xml:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStaging
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/problem+json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /personnel/v1/import-tool/status/{stagingId}:
    get:
      tags:
        - ImportTool
      summary: Retrieves the status of an import tool transaction
      description: >-
        Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}). UltiPro service account must have View role for
        the Personnel Integration Web Service. This GET call has a requirement
        of PersonnelResourceAuthorize(ApiOperation.Read)
      operationId: ImportTool_GetStatus
      parameters:
        - name: stagingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStagingStatus
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStagingStatus
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStagingStatus
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStagingStatus
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStagingStatus
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/employee-global-localization-elements:
    get:
      tags:
        - EmpGlobalLocalizationElement
      summary: Get all global employee localization fields added to UKG Pro
      description: >
        Get all global employee localization fields added to UKG Pro through
        platform configuration with the prefix of 'GBLPay'.  

        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /employee-global-localization-elements?created=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /employee-global-localization-elements?created=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /employee-global-localization-elements?created=01-01-1900</li> 
          </ul>
          </li>
        <li>between ({minimum date,maximum date}) 
          <ul>
          <li>Example: /employee-global-localization-elements?created={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      operationId: EmpGlobalLocalizationElement_Get
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: created
          in: query
          description: >-
            Used to find employee localization fields created less than, greater
            than, equal to, or between passed date(s)
          required: false
          schema:
            type: string
            format: date-time
        - name: effective
          in: query
          description: >-
            Used to find employee localization fields effective less than,
            greater than, equal to, or between passed date(s)
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpGlobalLocalizationElementModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpGlobalLocalizationElementModel'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpGlobalLocalizationElementModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpGlobalLocalizationElementModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpGlobalLocalizationElementModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /configuration/v1/insurance-rate:
    get:
      tags:
        - InsRate
      summary: Get Insurance Rate
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      operationId: InsRate_GetInsRate
      parameters:
        - name: deductionCode
          in: query
          required: false
          schema:
            type: string
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: payFrequency
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InsuranceRate'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InsuranceRate'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InsuranceRate'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InsuranceRate'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InsuranceRate'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /tenants/{tenantIdentifier}/new-hires/{id}:
    get:
      summary: Gets a single New Hire by Id
      description: Gets a single New Hire by Id
      parameters:
        - name: tenantIdentifier
          in: path
          description: >-
            Unique identifier of the tenant to interact with. Can be either the
            tenant alias or tenant ID.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Unique identifier for the New Hire
          required: true
          schema:
            type: string
      tags:
        - New Hires
      responses:
        '200':
          description: New Hire retrieved
          headers:
            Location:
              description: Location of resource
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier of the new hire
                  contactInformation:
                    type: object
                    description: Contact information of the new hire
                    properties:
                      name:
                        type: object
                        description: Name of the new hire
                        properties:
                          prefix:
                            type: object
                            description: Prefix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          first:
                            type: string
                            description: First name
                          middle:
                            type: string
                            description: Middle name
                          last:
                            type: string
                            description: Last name
                          formerLast:
                            type: string
                            description: Former last name
                          suffix:
                            type: object
                            description: Suffix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          preferredFirst:
                            type: string
                            description: Preferred first name
                        example:
                          name:
                            prefix:
                              id: d9079570-57f0-4530-b889-a07c95acb846
                              name:
                                enUS: Mr.
                            first: Hugo
                            middle: Alexander
                            last: Mastrantonioni
                            formerLast: Johnson
                            suffix:
                              id: 99ace441-e900-4a4c-9731-c97ea8451482
                              name:
                                enUS: III
                            preferredFirst: Hugh
                      emailAddress:
                        type: string
                        description: Email address of the new hire
                      primaryPhone:
                        type: string
                        description: Primary phone number of the new hire
                      secondaryPhone:
                        type: string
                        description: Secondary phone number of the new hire
                      address:
                        type: object
                        description: Address of the new hire
                        properties:
                          line1:
                            type: string
                            description: Line 1 of the address
                          line2:
                            type: string
                            description: Line 2 of the address
                          city:
                            type: string
                            description: City of the address
                          postalCode:
                            type: string
                            description: Zip/postal code of the address
                          county:
                            type: string
                            description: County of the address
                          stateCode:
                            type: string
                            description: State code of the address
                          countryCode:
                            type: string
                            description: Country code of the address
                          country:
                            type: object
                            description: Country code of the address
                            properties:
                              code:
                                type: string
                                description: Code of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              country:
                                code: USA
                                name:
                                  enUS: United States
                        example:
                          line1: Line 1
                          line2: Line 2
                          city: Weston
                          postalCode: '33326'
                          county: Broward
                          stateCode: FL
                          countryCode: USA
                          country:
                            code: USA
                            name:
                              enUs: United States
                    example:
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Hugo
                        middle: Alexander
                        last: Mastrantonioni
                        formerLast: Johnson
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: III
                        preferredFirst: Hugh
                      emailAddress: ultionboarding14+4@gmail.com
                      primaryPhone: '3056985433'
                      secondaryPhone: '3056986533'
                      address:
                        line1: 123 Main St
                        line2: 412 Blue Rd
                        city: Rosemead
                        zipCode: A1A2B2
                        county: County of Brant
                        stateCode: 'ON'
                        countryCode: USA
                        country:
                          code: CAN
                          name:
                            enUS: Canada
                  job:
                    type: object
                    description: Job of the new hire
                    properties:
                      id:
                        type: string
                        description: Unique identifier of the job
                      name:
                        type: string
                        description: The name of the job
                        additionalProperties:
                          type: string
                          description: >-
                            The text of the translatable translated in the
                            language specified
                      code:
                        type: string
                        description: Code of the job
                      requisitionId:
                        type: string
                        description: RequisitionId of the job
                      selectedFLSAStatus:
                        type: integer
                        description: Selected FLSA status for the job
                        enum:
                          - Not specified = 0
                          - Exempt = 1
                          - NonExempt = 2
                      componentCompany:
                        type: object
                        description: Component company of the job
                        properties:
                          id:
                            type: string
                            description: Id of the component company
                          name:
                            type: string
                            description: Name of the component company
                        example:
                          id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                          name: Wayne Enterprises
                      workLocation:
                        type: object
                        description: Work location of the job
                        properties:
                          id:
                            type: string
                            description: Id of the work location
                          name:
                            type: string
                            description: Name of the work location
                        example:
                          id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                          name: Wayne Enterprises
                      supervisor:
                        type: object
                        description: Supervisor of the job
                        properties:
                          id:
                            type: string
                            description: Id of the supervisor
                          name:
                            type: object
                            description: Name of the supervisor
                            properties:
                              prefix:
                                type: object
                                description: Prefix of the new hire in translatable format
                                properties:
                                  id:
                                    type: string
                                    description: Id of the translatable
                                  name:
                                    type: string
                                    description: The language that the translatable is in
                                    additionalProperties:
                                      type: string
                                      description: The name
                                example:
                                  workLocation:
                                    id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                    name:
                                      enUS: Toronto Headquarters
                              first:
                                type: string
                                description: First name
                              middle:
                                type: string
                                description: Middle name
                              last:
                                type: string
                                description: Last name
                              formerLast:
                                type: string
                                description: Former last name
                              suffix:
                                type: object
                                description: Suffix of the new hire in translatable format
                                properties:
                                  id:
                                    type: string
                                    description: Id of the translatable
                                  name:
                                    type: string
                                    description: The language that the translatable is in
                                    additionalProperties:
                                      type: string
                                      description: The name
                                example:
                                  workLocation:
                                    id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                    name:
                                      enUS: Toronto Headquarters
                              preferredFirst:
                                type: string
                                description: Preferred first name
                            example:
                              name:
                                prefix:
                                  id: d9079570-57f0-4530-b889-a07c95acb846
                                  name:
                                    enUS: Mr.
                                first: Hugo
                                middle: Alexander
                                last: Mastrantonioni
                                formerLast: Johnson
                                suffix:
                                  id: 99ace441-e900-4a4c-9731-c97ea8451482
                                  name:
                                    enUS: III
                                preferredFirst: Hugh
                          email:
                            type: string
                            description: The email of the supervisor
                          externalUserId:
                            type: string
                            description: The external user id of the supervisor
                        example:
                          supervisor:
                            id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7a
                            name:
                              prefix:
                                id: d9079570-57f0-4530-b889-a07c95acb846
                                name:
                                  enUS: Mr.
                              first: Hugo
                              middle: Alexander
                              last: Mastrantonioni
                              suffix:
                                id: 99ace441-e900-4a4c-9731-c97ea8451482
                                name:
                                  enUS: III
                              preferredFirst: Hugh
                            email: first@last.com
                            externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
                      employeeType:
                        type: object
                        description: Employee type for the job
                        properties:
                          id:
                            type: string
                            description: Id of the translatable
                          name:
                            type: string
                            description: The language that the translatable is in
                            additionalProperties:
                              type: string
                              description: The name
                        example:
                          workLocation:
                            id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                            name:
                              enUS: Toronto Headquarters
                    example:
                      id: 55a3111e-3f5b-55b0-ac31-55dba5e5aa5b
                      code: HCOPS
                      name:
                        enUS: Lead Tech
                        esES: Tecnico Principal
                      requisitionId: DEV10113
                      selectedFLSAStatus: 1
                      componentCompany:
                        id: f8bbaf0c-d801-5b55-1ef5-1ea55e5155c5
                        name: Acme Industries
                      workLocation:
                        id: b1ee5055-51be-5a5d-aa01-5ef5d55531f5
                        name: Acme Lab One
                      supervisor:
                        id: 51e5f31b-5155-5aef-51f0-f1b853bb5f8a
                        name:
                          prefix:
                            id: 08505515-581e-50a1-5f5e-515d5b35f5ff
                            name:
                              enUS: Mr.
                          first: Jeff
                          middle: Blue
                          last: Winner
                          suffix:
                            id: 5558f505-8c15-5cd5-5aa3-dd555eas1555
                            name:
                              enUS: III
                          preferredFirst: Joe
                        email: first@last.com
                        externalUserId: BF3DAEBD-5555-50BB-5AB1-C5833F51F5D0
                      employeeType:
                        id: 1ccb51fd-515b-5cbb-abb1-ced135551ae5
                        name:
                          enUS: Comp Mgt 5-Reg
                  organizationLevels:
                    type: array
                    items:
                      type: object
                      description: Organization level
                      properties:
                        id:
                          type: string
                          description: Identifier of the organization level
                        level:
                          type: integer
                          description: Level of the organization level
                          enum:
                            - Level 1 = 1
                            - Level 2 = 2
                            - Level 3 = 3
                            - Level 4 = 4
                        code:
                          type: string
                          description: >-
                            Unique code of a organization that the new hire is
                            associated with
                        description:
                          type: string
                          description: >-
                            Description of a organization that the new hire is
                            associated with.
                      example:
                        'id:': 3990d626-4130-48c8-b87e-cd219e6cd405
                        level: 1
                        code: PROD
                        description: Product development team
                  compensation:
                    type: object
                    description: Compensation of the new hire
                    properties:
                      isFullTime:
                        type: boolean
                        description: Whether the new hire is full time
                      isSalaried:
                        type: boolean
                        description: Whether the new hire is salaried
                      workHours:
                        type: number
                        description: Work hours of the new hire
                      weeklyHours:
                        type: number
                        description: Weekly hours of the new hire
                      currencyType:
                        type: string
                        description: Currency type of the new hire's pay
                      currency:
                        type: object
                        description: Currency of the new hire
                        properties:
                          code:
                            type: string
                            description: Code of the translatable
                          name:
                            type: string
                            description: The language that the translatable is in
                            additionalProperties:
                              type: string
                              description: The name
                        example:
                          country:
                            code: USA
                            name:
                              enUS: United States
                      payRate:
                        type: number
                        description: Pay rate of the new hire
                      ratePer:
                        type: object
                        description: Pay period of the new hire
                        properties:
                          code:
                            type: string
                            description: Code of the translatable
                          name:
                            type: string
                            description: The language that the translatable is in
                            additionalProperties:
                              type: string
                              description: The name
                        example:
                          country:
                            code: USA
                            name:
                              enUS: United States
                    example:
                      isFullTime: true
                      isSalaried: false
                      workHours: 40
                      weeklyHours: 168
                      currencyType: USD
                      currency:
                        code: USD
                        name:
                          enUS: US Dollar
                      payRate: 20
                      ratePer:
                        code: H
                        name:
                          enUS: Hour
                  onboardingOwner:
                    type: object
                    description: Onboarding owner for the new hire
                    properties:
                      id:
                        type: string
                        description: Id of the onboarding owner
                      externalUserId:
                        type: string
                        description: External user identifier of the onboarding owner
                      email:
                        type: string
                        description: Email of the onboarding owner
                      name:
                        type: object
                        description: Name of the onboarding owner
                        properties:
                          prefix:
                            type: object
                            description: Prefix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          first:
                            type: string
                            description: First name
                          middle:
                            type: string
                            description: Middle name
                          last:
                            type: string
                            description: Last name
                          formerLast:
                            type: string
                            description: Former last name
                          suffix:
                            type: object
                            description: Suffix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          preferredFirst:
                            type: string
                            description: Preferred first name
                        example:
                          name:
                            prefix:
                              id: d9079570-57f0-4530-b889-a07c95acb846
                              name:
                                enUS: Mr.
                            first: Hugo
                            middle: Alexander
                            last: Mastrantonioni
                            formerLast: Johnson
                            suffix:
                              id: 99ace441-e900-4a4c-9731-c97ea8451482
                              name:
                                enUS: III
                            preferredFirst: Hugh
                    example:
                      id: 2d42c7a5-52de-402e-92af-493b5b7f0682
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Hugo
                        middle: Alexander
                        last: Mastrantonioni
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: III
                        preferredFirst: Hugh
                      email: Hugo@got.us
                      externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
                  hireDate:
                    type: string
                    description: Hire date of the new hire
                    format: date-time
                  orientationDate:
                    type: string
                    description: Orientation date of the new hire
                    format: date-time
                  startDate:
                    type: string
                    description: Start date of the new hire
                    format: date-time
                  pastStartDateReason:
                    type: string
                    description: >-
                      Reason why the new hire start date is 4 or more business
                      days in the past
                  mentor:
                    type: object
                    description: Mentor of the new hire
                    properties:
                      id:
                        type: string
                        description: Id of the mentor
                      externalUserId:
                        type: string
                        description: External user identifier of the mentor
                      email:
                        type: string
                        description: Email of the mentor
                      name:
                        type: object
                        description: Name of the mentor
                        properties:
                          prefix:
                            type: object
                            description: Prefix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          first:
                            type: string
                            description: First name
                          middle:
                            type: string
                            description: Middle name
                          last:
                            type: string
                            description: Last name
                          formerLast:
                            type: string
                            description: Former last name
                          suffix:
                            type: object
                            description: Suffix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          preferredFirst:
                            type: string
                            description: Preferred first name
                        example:
                          name:
                            prefix:
                              id: d9079570-57f0-4530-b889-a07c95acb846
                              name:
                                enUS: Mr.
                            first: Hugo
                            middle: Alexander
                            last: Mastrantonioni
                            formerLast: Johnson
                            suffix:
                              id: 99ace441-e900-4a4c-9731-c97ea8451482
                              name:
                                enUS: III
                            preferredFirst: Hugh
                      description:
                        type: string
                        description: Description of the mentor
                    example:
                      id: 2d42c7a5-52de-402e-92af-493b5b7f0682
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Hugo
                        middle: Alexander
                        last: Mastrantonioni
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: III
                        preferredFirst: Hugh
                      email: talisa@got.us
                      externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
                      description: >-
                        Suzie is THE person who knows the product best. She
                        loves helping new team members.
                  personalMessage:
                    type: string
                    description: Personalized welcome message for the new hire
                  provisioning:
                    type: object
                    description: Provisioning for the new hire
                    properties:
                      provisioningItems:
                        type: array
                        description: >-
                          The list of provisioning items selected for this New
                          Hire
                        items:
                          type: object
                          description: >-
                            An individual provisioning item that is assigned to
                            a new hire
                          properties:
                            id:
                              type: string
                              description: Id of the provisioning item
                            name:
                              type: string
                              description: Category of the provisioning item
                            recipient:
                              type: string
                              description: Recipient of the provisioning item
                            selectedOption:
                              type: object
                              description: Selected option for the provisioning item
                              properties:
                                id:
                                  type: string
                                  description: Unique identifier of the Option
                                description:
                                  type: string
                                  description: Description of the Option
                              example:
                                id: d5b79e4e-da8c-4017-9dc0-df30cb48fbf4
                                description: Apple iPad
                            comments:
                              type: string
                              description: Comment on the provisioning item
                          example:
                            NewHireProvisioningItemReadModel:
                              id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                              name: Corporate Credit Card
                              recipient: accounting@company.com
                              selectedOption:
                                id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                                description: Amax Card
                              comments: Platinum level
                      summaryEmailRecipients:
                        type: array
                        description: >-
                          These emails receive updates about this new hire's
                          provisioning items
                        items:
                          type: string
                          description: >-
                            An individual email that receives updates on the new
                            hire's provisioning items
                    example:
                      provisioning:
                        provisioningItems:
                          - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                            name: Corporate Credit Card
                            recipient: accounting@company.com
                            selectedOption:
                              id: 6790f864-b0ff-4b1b-a3ac-23033c671c44
                              description: Deluxe card
                            comments: A credit card
                          - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bd
                            name: Network Account
                            recipient: helpdesk@company.com
                            selectedOption:
                              id: a38d541b-16f7-46b6-b48a-892cb3831784
                              description: Security Level 2 Account
                            comments: Allow access to data
                          - id: add33aee-ebff-4d50-8f45-9d7ab820c053
                            name: Phone Type
                            recipient: helpdesk@company.com
                            selectedOption:
                              id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                              description: Galaxy S5
                            comments: Black
                        summaryEmailRecipients:
                          - fred@bluebill.com
                          - jred@bluebill.com
                          - ned@bluebill.com
                  onboardingStatus:
                    type: string
                    description: The status of the new hire in onboarding
                  identityUserId:
                    type: string
                    description: Identity user identifier of the new hire
                  externalUserId:
                    type: string
                    description: External user identifier of the new hire
                  employeeNumber:
                    type: string
                    description: Employee number of the new hire
                  sentToProcessHireDate:
                    type: string
                    description: Date that the new hire was processed
                    format: date-time
                  launchedOn:
                    type: string
                    description: Launch date of the new hire
                    format: date-time
                  createdAt:
                    type: string
                    description: Creation date of the new hire
                    format: date-time
                  updatedAt:
                    type: string
                    description: Last updated date of the new hire
                    format: date-time
                example:
                  contactInformation:
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846
                        name:
                          enUS: Mr.
                      first: Hugo
                      middle: Alexander
                      last: Mastrantonioni
                      formerLast: Johnson
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482
                        name:
                          enUS: III
                      preferredFirst: Hugh
                    emailAddress: hugo2296@gmail.com
                    primaryPhone: '3056985433'
                    secondaryPhone: '3056986533'
                    address:
                      line1: 123 Main St
                      line2: APT. 101
                      city: Toronto
                      postalCode: M1R0E9
                      county: County of Canada
                      stateCode: 'ON'
                      countryCode: CAN
                      country:
                        code: CAN
                        name:
                          enUS: Canada
                  job:
                    id: 96a5833e-5f4b-46b0-ac58-41dba1e4aa1b
                    code: DJOB
                    name:
                      enUS: Lead Tech
                      esES: Tecnico Principal
                    requisitionId: DEV30335
                    selectedFLSAStatus: 2
                    supervisor:
                      id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7a
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Joe
                        middle: Jose
                        last: Santo
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: Jr
                        preferredFirst: Joseph
                      email: jsanto@example.com
                      externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
                    componentCompany:
                      id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                      name: Wayne Enterprises
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                      name: Toronto Headquarters
                    employeeType:
                      id: 8ccb43fd-686b-4cbb-abb3-ced359148ae1
                      name:
                        enUS: Comp Mgt 1-Reg
                  compensation:
                    isFullTime: true
                    isSalaried: true
                    workHours: 40
                    weeklyHours: 168
                    currencyType: CAD
                    currency:
                      code: CAD
                      name:
                        enUS: Canadian Dollar
                    payRate: 50000
                    ratePer:
                      code: 'Y'
                      name:
                        enUS: Year
                  mentor:
                    id: 56f378ee-90d4-44ec-9ab7-83f2437d1fe6
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846
                        name:
                          enUS: Mr.
                      first: Oden
                      middle: Joe
                      last: Leonerd
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482
                        name:
                          enUS: III
                      preferredFirst: Kevin
                    email: oden_leon@gmail.com
                    description: >-
                      Oden will be your mentor and is THE person to get you up
                      to speed on the product. She loves helping new team
                      members.
                    externalUserId: 145A494C-DAFD-4454-881C-6700C85512C8
                  onboardingOwner:
                    id: 2d42c7a5-52de-402e-92af-493b5b7f0682
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846
                        name:
                          enUS: Mr.
                      first: Jared
                      middle: Joseph
                      last: Nalin
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482
                        name:
                          enUS: III
                      preferredFirst: Jared
                    email: jared_nalin@example.com
                    externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
                  onboardingStatus: Launched
                  sentToProcessHireDate:
                    utcInstant: '2018-06-07T17:44:25.358Z'
                    offset: '-04:00:00'
                  launchedOn:
                    utcInstant: '2018-06-07T17:44:25.358Z'
                    offset: '-04:00:00'
                  hireDate: '2018-06-23T00:00:00Z'
                  orientationDate: '2018-07-06T00:00:00Z'
                  startDate: '2018-06-30T00:00:00Z'
                  organizationLevels:
                    - id: b7a43db9-73c7-43d6-aaab-7b2bc20ed50f
                      level: 1
                      code: PROD
                      description: Product division
                    - id: 8e4507db-330b-466d-8786-9f55da5f6c31
                      level: 2
                      code: PR
                      description: Public relations
                    - id: 2bf4a848-2926-485f-aa47-4aa8db90921b
                      level: 3
                      code: STAT
                      description: Stanton branch
                    - id: 3c792567-7494-4f84-91ae-73c797c714ef
                      level: 4
                      code: SALES
                      description: Sales team
                  provisioning:
                    provisioningItems:
                      - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                        name: Corporate Credit Card
                        recipient: accounting@company.com
                        selectedOption:
                          id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                          description: Amax Card
                        comments: Requires a platinum Amax Card
                      - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bd
                        name: Network Account
                        recipient: helpdesk@company.com
                        selectedOption:
                          id: 3c792567-7494-4f84-91ae-73c797c714ef
                          description: Super Account
                        comments: Highest clearance
                      - id: add33aee-ebff-4d50-8f45-9d7ab820c053
                        name: Phone Type
                        recipient: helpdesk@company.com
                        selectedOption:
                          id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
                          description: Galaxy S5
                        comments: Requires a black phone
                    summaryEmailRecipients:
                      - first@last.com
                      - last@beuh.com
                      - Joe@erad.com
                  identityUserId: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
                  externalUserId: b7a4fd34-73c7-43d6-aaab-7b2bc20ed50f
                  employeeNumber: '1234567890'
                  personalMessage: >-
                    Hugo, I was very impressed with your passion. I am looking
                    forward to working with you and I know your expertise in
                    this space will help our team get to the next level.
                  pastStartDateReason: >-
                    An internal audit revealed that the new hire was not
                    initiated
                  id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
                  createdAt: '2018-05-29T19:30:35.95Z'
                  updatedAt: '2018-06-07T17:44:25.378Z'
            application/problem+json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier of the new hire
                  contactInformation:
                    type: object
                    description: Contact information of the new hire
                    properties:
                      name:
                        type: object
                        description: Name of the new hire
                        properties:
                          prefix:
                            type: object
                            description: Prefix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          first:
                            type: string
                            description: First name
                          middle:
                            type: string
                            description: Middle name
                          last:
                            type: string
                            description: Last name
                          formerLast:
                            type: string
                            description: Former last name
                          suffix:
                            type: object
                            description: Suffix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          preferredFirst:
                            type: string
                            description: Preferred first name
                        example:
                          name:
                            prefix:
                              id: d9079570-57f0-4530-b889-a07c95acb846
                              name:
                                enUS: Mr.
                            first: Hugo
                            middle: Alexander
                            last: Mastrantonioni
                            formerLast: Johnson
                            suffix:
                              id: 99ace441-e900-4a4c-9731-c97ea8451482
                              name:
                                enUS: III
                            preferredFirst: Hugh
                      emailAddress:
                        type: string
                        description: Email address of the new hire
                      primaryPhone:
                        type: string
                        description: Primary phone number of the new hire
                      secondaryPhone:
                        type: string
                        description: Secondary phone number of the new hire
                      address:
                        type: object
                        description: Address of the new hire
                        properties:
                          line1:
                            type: string
                            description: Line 1 of the address
                          line2:
                            type: string
                            description: Line 2 of the address
                          city:
                            type: string
                            description: City of the address
                          postalCode:
                            type: string
                            description: Zip/postal code of the address
                          county:
                            type: string
                            description: County of the address
                          stateCode:
                            type: string
                            description: State code of the address
                          countryCode:
                            type: string
                            description: Country code of the address
                          country:
                            type: object
                            description: Country code of the address
                            properties:
                              code:
                                type: string
                                description: Code of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              country:
                                code: USA
                                name:
                                  enUS: United States
                        example:
                          line1: Line 1
                          line2: Line 2
                          city: Weston
                          postalCode: '33326'
                          county: Broward
                          stateCode: FL
                          countryCode: USA
                          country:
                            code: USA
                            name:
                              enUs: United States
                    example:
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Hugo
                        middle: Alexander
                        last: Mastrantonioni
                        formerLast: Johnson
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: III
                        preferredFirst: Hugh
                      emailAddress: ultionboarding14+4@gmail.com
                      primaryPhone: '3056985433'
                      secondaryPhone: '3056986533'
                      address:
                        line1: 123 Main St
                        line2: 412 Blue Rd
                        city: Rosemead
                        zipCode: A1A2B2
                        county: County of Brant
                        stateCode: 'ON'
                        countryCode: USA
                        country:
                          code: CAN
                          name:
                            enUS: Canada
                  job:
                    type: object
                    description: Job of the new hire
                    properties:
                      id:
                        type: string
                        description: Unique identifier of the job
                      name:
                        type: string
                        description: The name of the job
                        additionalProperties:
                          type: string
                          description: >-
                            The text of the translatable translated in the
                            language specified
                      code:
                        type: string
                        description: Code of the job
                      requisitionId:
                        type: string
                        description: RequisitionId of the job
                      selectedFLSAStatus:
                        type: integer
                        description: Selected FLSA status for the job
                        enum:
                          - Not specified = 0
                          - Exempt = 1
                          - NonExempt = 2
                      componentCompany:
                        type: object
                        description: Component company of the job
                        properties:
                          id:
                            type: string
                            description: Id of the component company
                          name:
                            type: string
                            description: Name of the component company
                        example:
                          id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                          name: Wayne Enterprises
                      workLocation:
                        type: object
                        description: Work location of the job
                        properties:
                          id:
                            type: string
                            description: Id of the work location
                          name:
                            type: string
                            description: Name of the work location
                        example:
                          id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                          name: Wayne Enterprises
                      supervisor:
                        type: object
                        description: Supervisor of the job
                        properties:
                          id:
                            type: string
                            description: Id of the supervisor
                          name:
                            type: object
                            description: Name of the supervisor
                            properties:
                              prefix:
                                type: object
                                description: Prefix of the new hire in translatable format
                                properties:
                                  id:
                                    type: string
                                    description: Id of the translatable
                                  name:
                                    type: string
                                    description: The language that the translatable is in
                                    additionalProperties:
                                      type: string
                                      description: The name
                                example:
                                  workLocation:
                                    id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                    name:
                                      enUS: Toronto Headquarters
                              first:
                                type: string
                                description: First name
                              middle:
                                type: string
                                description: Middle name
                              last:
                                type: string
                                description: Last name
                              formerLast:
                                type: string
                                description: Former last name
                              suffix:
                                type: object
                                description: Suffix of the new hire in translatable format
                                properties:
                                  id:
                                    type: string
                                    description: Id of the translatable
                                  name:
                                    type: string
                                    description: The language that the translatable is in
                                    additionalProperties:
                                      type: string
                                      description: The name
                                example:
                                  workLocation:
                                    id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                    name:
                                      enUS: Toronto Headquarters
                              preferredFirst:
                                type: string
                                description: Preferred first name
                            example:
                              name:
                                prefix:
                                  id: d9079570-57f0-4530-b889-a07c95acb846
                                  name:
                                    enUS: Mr.
                                first: Hugo
                                middle: Alexander
                                last: Mastrantonioni
                                formerLast: Johnson
                                suffix:
                                  id: 99ace441-e900-4a4c-9731-c97ea8451482
                                  name:
                                    enUS: III
                                preferredFirst: Hugh
                          email:
                            type: string
                            description: The email of the supervisor
                          externalUserId:
                            type: string
                            description: The external user id of the supervisor
                        example:
                          supervisor:
                            id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7a
                            name:
                              prefix:
                                id: d9079570-57f0-4530-b889-a07c95acb846
                                name:
                                  enUS: Mr.
                              first: Hugo
                              middle: Alexander
                              last: Mastrantonioni
                              suffix:
                                id: 99ace441-e900-4a4c-9731-c97ea8451482
                                name:
                                  enUS: III
                              preferredFirst: Hugh
                            email: first@last.com
                            externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
                      employeeType:
                        type: object
                        description: Employee type for the job
                        properties:
                          id:
                            type: string
                            description: Id of the translatable
                          name:
                            type: string
                            description: The language that the translatable is in
                            additionalProperties:
                              type: string
                              description: The name
                        example:
                          workLocation:
                            id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                            name:
                              enUS: Toronto Headquarters
                    example:
                      id: 55a3111e-3f5b-55b0-ac31-55dba5e5aa5b
                      code: HCOPS
                      name:
                        enUS: Lead Tech
                        esES: Tecnico Principal
                      requisitionId: DEV10113
                      selectedFLSAStatus: 1
                      componentCompany:
                        id: f8bbaf0c-d801-5b55-1ef5-1ea55e5155c5
                        name: Acme Industries
                      workLocation:
                        id: b1ee5055-51be-5a5d-aa01-5ef5d55531f5
                        name: Acme Lab One
                      supervisor:
                        id: 51e5f31b-5155-5aef-51f0-f1b853bb5f8a
                        name:
                          prefix:
                            id: 08505515-581e-50a1-5f5e-515d5b35f5ff
                            name:
                              enUS: Mr.
                          first: Jeff
                          middle: Blue
                          last: Winner
                          suffix:
                            id: 5558f505-8c15-5cd5-5aa3-dd555eas1555
                            name:
                              enUS: III
                          preferredFirst: Joe
                        email: first@last.com
                        externalUserId: BF3DAEBD-5555-50BB-5AB1-C5833F51F5D0
                      employeeType:
                        id: 1ccb51fd-515b-5cbb-abb1-ced135551ae5
                        name:
                          enUS: Comp Mgt 5-Reg
                  organizationLevels:
                    type: array
                    items:
                      type: object
                      description: Organization level
                      properties:
                        id:
                          type: string
                          description: Identifier of the organization level
                        level:
                          type: integer
                          description: Level of the organization level
                          enum:
                            - Level 1 = 1
                            - Level 2 = 2
                            - Level 3 = 3
                            - Level 4 = 4
                        code:
                          type: string
                          description: >-
                            Unique code of a organization that the new hire is
                            associated with
                        description:
                          type: string
                          description: >-
                            Description of a organization that the new hire is
                            associated with.
                      example:
                        'id:': 3990d626-4130-48c8-b87e-cd219e6cd405
                        level: 1
                        code: PROD
                        description: Product development team
                  compensation:
                    type: object
                    description: Compensation of the new hire
                    properties:
                      isFullTime:
                        type: boolean
                        description: Whether the new hire is full time
                      isSalaried:
                        type: boolean
                        description: Whether the new hire is salaried
                      workHours:
                        type: number
                        description: Work hours of the new hire
                      weeklyHours:
                        type: number
                        description: Weekly hours of the new hire
                      currencyType:
                        type: string
                        description: Currency type of the new hire's pay
                      currency:
                        type: object
                        description: Currency of the new hire
                        properties:
                          code:
                            type: string
                            description: Code of the translatable
                          name:
                            type: string
                            description: The language that the translatable is in
                            additionalProperties:
                              type: string
                              description: The name
                        example:
                          country:
                            code: USA
                            name:
                              enUS: United States
                      payRate:
                        type: number
                        description: Pay rate of the new hire
                      ratePer:
                        type: object
                        description: Pay period of the new hire
                        properties:
                          code:
                            type: string
                            description: Code of the translatable
                          name:
                            type: string
                            description: The language that the translatable is in
                            additionalProperties:
                              type: string
                              description: The name
                        example:
                          country:
                            code: USA
                            name:
                              enUS: United States
                    example:
                      isFullTime: true
                      isSalaried: false
                      workHours: 40
                      weeklyHours: 168
                      currencyType: USD
                      currency:
                        code: USD
                        name:
                          enUS: US Dollar
                      payRate: 20
                      ratePer:
                        code: H
                        name:
                          enUS: Hour
                  onboardingOwner:
                    type: object
                    description: Onboarding owner for the new hire
                    properties:
                      id:
                        type: string
                        description: Id of the onboarding owner
                      externalUserId:
                        type: string
                        description: External user identifier of the onboarding owner
                      email:
                        type: string
                        description: Email of the onboarding owner
                      name:
                        type: object
                        description: Name of the onboarding owner
                        properties:
                          prefix:
                            type: object
                            description: Prefix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          first:
                            type: string
                            description: First name
                          middle:
                            type: string
                            description: Middle name
                          last:
                            type: string
                            description: Last name
                          formerLast:
                            type: string
                            description: Former last name
                          suffix:
                            type: object
                            description: Suffix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          preferredFirst:
                            type: string
                            description: Preferred first name
                        example:
                          name:
                            prefix:
                              id: d9079570-57f0-4530-b889-a07c95acb846
                              name:
                                enUS: Mr.
                            first: Hugo
                            middle: Alexander
                            last: Mastrantonioni
                            formerLast: Johnson
                            suffix:
                              id: 99ace441-e900-4a4c-9731-c97ea8451482
                              name:
                                enUS: III
                            preferredFirst: Hugh
                    example:
                      id: 2d42c7a5-52de-402e-92af-493b5b7f0682
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Hugo
                        middle: Alexander
                        last: Mastrantonioni
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: III
                        preferredFirst: Hugh
                      email: Hugo@got.us
                      externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
                  hireDate:
                    type: string
                    description: Hire date of the new hire
                    format: date-time
                  orientationDate:
                    type: string
                    description: Orientation date of the new hire
                    format: date-time
                  startDate:
                    type: string
                    description: Start date of the new hire
                    format: date-time
                  pastStartDateReason:
                    type: string
                    description: >-
                      Reason why the new hire start date is 4 or more business
                      days in the past
                  mentor:
                    type: object
                    description: Mentor of the new hire
                    properties:
                      id:
                        type: string
                        description: Id of the mentor
                      externalUserId:
                        type: string
                        description: External user identifier of the mentor
                      email:
                        type: string
                        description: Email of the mentor
                      name:
                        type: object
                        description: Name of the mentor
                        properties:
                          prefix:
                            type: object
                            description: Prefix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          first:
                            type: string
                            description: First name
                          middle:
                            type: string
                            description: Middle name
                          last:
                            type: string
                            description: Last name
                          formerLast:
                            type: string
                            description: Former last name
                          suffix:
                            type: object
                            description: Suffix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          preferredFirst:
                            type: string
                            description: Preferred first name
                        example:
                          name:
                            prefix:
                              id: d9079570-57f0-4530-b889-a07c95acb846
                              name:
                                enUS: Mr.
                            first: Hugo
                            middle: Alexander
                            last: Mastrantonioni
                            formerLast: Johnson
                            suffix:
                              id: 99ace441-e900-4a4c-9731-c97ea8451482
                              name:
                                enUS: III
                            preferredFirst: Hugh
                      description:
                        type: string
                        description: Description of the mentor
                    example:
                      id: 2d42c7a5-52de-402e-92af-493b5b7f0682
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Hugo
                        middle: Alexander
                        last: Mastrantonioni
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: III
                        preferredFirst: Hugh
                      email: talisa@got.us
                      externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
                      description: >-
                        Suzie is THE person who knows the product best. She
                        loves helping new team members.
                  personalMessage:
                    type: string
                    description: Personalized welcome message for the new hire
                  provisioning:
                    type: object
                    description: Provisioning for the new hire
                    properties:
                      provisioningItems:
                        type: array
                        description: >-
                          The list of provisioning items selected for this New
                          Hire
                        items:
                          type: object
                          description: >-
                            An individual provisioning item that is assigned to
                            a new hire
                          properties:
                            id:
                              type: string
                              description: Id of the provisioning item
                            name:
                              type: string
                              description: Category of the provisioning item
                            recipient:
                              type: string
                              description: Recipient of the provisioning item
                            selectedOption:
                              type: object
                              description: Selected option for the provisioning item
                              properties:
                                id:
                                  type: string
                                  description: Unique identifier of the Option
                                description:
                                  type: string
                                  description: Description of the Option
                              example:
                                id: d5b79e4e-da8c-4017-9dc0-df30cb48fbf4
                                description: Apple iPad
                            comments:
                              type: string
                              description: Comment on the provisioning item
                          example:
                            NewHireProvisioningItemReadModel:
                              id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                              name: Corporate Credit Card
                              recipient: accounting@company.com
                              selectedOption:
                                id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                                description: Amax Card
                              comments: Platinum level
                      summaryEmailRecipients:
                        type: array
                        description: >-
                          These emails receive updates about this new hire's
                          provisioning items
                        items:
                          type: string
                          description: >-
                            An individual email that receives updates on the new
                            hire's provisioning items
                    example:
                      provisioning:
                        provisioningItems:
                          - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                            name: Corporate Credit Card
                            recipient: accounting@company.com
                            selectedOption:
                              id: 6790f864-b0ff-4b1b-a3ac-23033c671c44
                              description: Deluxe card
                            comments: A credit card
                          - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bd
                            name: Network Account
                            recipient: helpdesk@company.com
                            selectedOption:
                              id: a38d541b-16f7-46b6-b48a-892cb3831784
                              description: Security Level 2 Account
                            comments: Allow access to data
                          - id: add33aee-ebff-4d50-8f45-9d7ab820c053
                            name: Phone Type
                            recipient: helpdesk@company.com
                            selectedOption:
                              id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                              description: Galaxy S5
                            comments: Black
                        summaryEmailRecipients:
                          - fred@bluebill.com
                          - jred@bluebill.com
                          - ned@bluebill.com
                  onboardingStatus:
                    type: string
                    description: The status of the new hire in onboarding
                  identityUserId:
                    type: string
                    description: Identity user identifier of the new hire
                  externalUserId:
                    type: string
                    description: External user identifier of the new hire
                  employeeNumber:
                    type: string
                    description: Employee number of the new hire
                  sentToProcessHireDate:
                    type: string
                    description: Date that the new hire was processed
                    format: date-time
                  launchedOn:
                    type: string
                    description: Launch date of the new hire
                    format: date-time
                  createdAt:
                    type: string
                    description: Creation date of the new hire
                    format: date-time
                  updatedAt:
                    type: string
                    description: Last updated date of the new hire
                    format: date-time
                example:
                  contactInformation:
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846
                        name:
                          enUS: Mr.
                      first: Hugo
                      middle: Alexander
                      last: Mastrantonioni
                      formerLast: Johnson
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482
                        name:
                          enUS: III
                      preferredFirst: Hugh
                    emailAddress: hugo2296@gmail.com
                    primaryPhone: '3056985433'
                    secondaryPhone: '3056986533'
                    address:
                      line1: 123 Main St
                      line2: APT. 101
                      city: Toronto
                      postalCode: M1R0E9
                      county: County of Canada
                      stateCode: 'ON'
                      countryCode: CAN
                      country:
                        code: CAN
                        name:
                          enUS: Canada
                  job:
                    id: 96a5833e-5f4b-46b0-ac58-41dba1e4aa1b
                    code: DJOB
                    name:
                      enUS: Lead Tech
                      esES: Tecnico Principal
                    requisitionId: DEV30335
                    selectedFLSAStatus: 2
                    supervisor:
                      id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7a
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Joe
                        middle: Jose
                        last: Santo
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: Jr
                        preferredFirst: Joseph
                      email: jsanto@example.com
                      externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
                    componentCompany:
                      id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                      name: Wayne Enterprises
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                      name: Toronto Headquarters
                    employeeType:
                      id: 8ccb43fd-686b-4cbb-abb3-ced359148ae1
                      name:
                        enUS: Comp Mgt 1-Reg
                  compensation:
                    isFullTime: true
                    isSalaried: true
                    workHours: 40
                    weeklyHours: 168
                    currencyType: CAD
                    currency:
                      code: CAD
                      name:
                        enUS: Canadian Dollar
                    payRate: 50000
                    ratePer:
                      code: 'Y'
                      name:
                        enUS: Year
                  mentor:
                    id: 56f378ee-90d4-44ec-9ab7-83f2437d1fe6
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846
                        name:
                          enUS: Mr.
                      first: Oden
                      middle: Joe
                      last: Leonerd
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482
                        name:
                          enUS: III
                      preferredFirst: Kevin
                    email: oden_leon@gmail.com
                    description: >-
                      Oden will be your mentor and is THE person to get you up
                      to speed on the product. She loves helping new team
                      members.
                    externalUserId: 145A494C-DAFD-4454-881C-6700C85512C8
                  onboardingOwner:
                    id: 2d42c7a5-52de-402e-92af-493b5b7f0682
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846
                        name:
                          enUS: Mr.
                      first: Jared
                      middle: Joseph
                      last: Nalin
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482
                        name:
                          enUS: III
                      preferredFirst: Jared
                    email: jared_nalin@example.com
                    externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
                  onboardingStatus: Launched
                  sentToProcessHireDate:
                    utcInstant: '2018-06-07T17:44:25.358Z'
                    offset: '-04:00:00'
                  launchedOn:
                    utcInstant: '2018-06-07T17:44:25.358Z'
                    offset: '-04:00:00'
                  hireDate: '2018-06-23T00:00:00Z'
                  orientationDate: '2018-07-06T00:00:00Z'
                  startDate: '2018-06-30T00:00:00Z'
                  organizationLevels:
                    - id: b7a43db9-73c7-43d6-aaab-7b2bc20ed50f
                      level: 1
                      code: PROD
                      description: Product division
                    - id: 8e4507db-330b-466d-8786-9f55da5f6c31
                      level: 2
                      code: PR
                      description: Public relations
                    - id: 2bf4a848-2926-485f-aa47-4aa8db90921b
                      level: 3
                      code: STAT
                      description: Stanton branch
                    - id: 3c792567-7494-4f84-91ae-73c797c714ef
                      level: 4
                      code: SALES
                      description: Sales team
                  provisioning:
                    provisioningItems:
                      - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                        name: Corporate Credit Card
                        recipient: accounting@company.com
                        selectedOption:
                          id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                          description: Amax Card
                        comments: Requires a platinum Amax Card
                      - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bd
                        name: Network Account
                        recipient: helpdesk@company.com
                        selectedOption:
                          id: 3c792567-7494-4f84-91ae-73c797c714ef
                          description: Super Account
                        comments: Highest clearance
                      - id: add33aee-ebff-4d50-8f45-9d7ab820c053
                        name: Phone Type
                        recipient: helpdesk@company.com
                        selectedOption:
                          id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
                          description: Galaxy S5
                        comments: Requires a black phone
                    summaryEmailRecipients:
                      - first@last.com
                      - last@beuh.com
                      - Joe@erad.com
                  identityUserId: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
                  externalUserId: b7a4fd34-73c7-43d6-aaab-7b2bc20ed50f
                  employeeNumber: '1234567890'
                  personalMessage: >-
                    Hugo, I was very impressed with your passion. I am looking
                    forward to working with you and I know your expertise in
                    this space will help our team get to the next level.
                  pastStartDateReason: >-
                    An internal audit revealed that the new hire was not
                    initiated
                  id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
                  createdAt: '2018-05-29T19:30:35.95Z'
                  updatedAt: '2018-06-07T17:44:25.378Z'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      type:
                        type: string
                        description: URI reference that identifies the problem type
                      title:
                        type: string
                        description: Short, human-readable summary of the problem type
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties:
                          modelState:
                            description: >-
                              Properties failing validation and the errors
                              associated with each of these properties.
                            properties:
                              property1:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      description: Machine-readable error type
                                    message:
                                      type: string
                                      description: >-
                                        Short, human-readable message explaining
                                        the error
                              property2:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      description: Machine-readable error type
                                    message:
                                      type: string
                                      description: >-
                                        Short, human-readable message explaining
                                        the error
                          general:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                  description: Machine-readable error type
                                message:
                                  type: string
                                  description: >-
                                    Short, human-readable message explaining the
                                    error
            application/problem+json:
              schema:
                allOf:
                  - type: object
                    properties:
                      type:
                        type: string
                        description: URI reference that identifies the problem type
                      title:
                        type: string
                        description: Short, human-readable summary of the problem type
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties:
                          modelState:
                            description: >-
                              Properties failing validation and the errors
                              associated with each of these properties.
                            properties:
                              property1:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      description: Machine-readable error type
                                    message:
                                      type: string
                                      description: >-
                                        Short, human-readable message explaining
                                        the error
                              property2:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      description: Machine-readable error type
                                    message:
                                      type: string
                                      description: >-
                                        Short, human-readable message explaining
                                        the error
                          general:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                  description: Machine-readable error type
                                message:
                                  type: string
                                  description: >-
                                    Short, human-readable message explaining the
                                    error
              examples:
                response:
                  value:
                    type: >-
                      https://www.ultimatesoftware.com/error.onboarding.not-found-error
                    title: Resource not found error
                    general:
                      type: error.onboarding.new-hires.not-found-error
                      message: >-
                        A New Hire with the Id:
                        1e70300e-6653-40e5-8383-ee3341857357 was not found.
  /tenants/{tenantIdentifier}/new-hires:
    post:
      summary: Creates a single New Hire
      description: Creates a single New Hire
      parameters:
        - name: tenantIdentifier
          in: path
          description: >-
            Unique identifier of the tenant to interact with. Can be either the
            tenant alias or tenant ID.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contactInformation:
                  type: object
                  description: Contact information for the new hire
                  properties:
                    name:
                      type: object
                      description: Name of the new hire
                      properties:
                        prefix:
                          type: object
                          description: Prefix of the new hire
                          properties:
                            id:
                              type: string
                              description: Unique identifier of the prefix
                            code:
                              type: string
                              description: UltiPro prefix code
                          example:
                            prefix:
                              id: ba00d403-e240-4c16-b894-92036dbb4b0f
                              code: MS
                        first:
                          type: string
                          description: >-
                            First name of the new hire. maxLength: 50 for hires
                            in US/Canadian companies. 100 otherwise
                          maxLength: 100
                        middle:
                          type: string
                          description: Middle name of the new hire
                          maxLength: 50
                        last:
                          type: string
                          description: >-
                            Last name of the new hire. maxLength: 50 for hires
                            in US/Canadian companies. 100 otherwise
                          maxLength: 100
                        formerLast:
                          type: string
                          description: >-
                            Former last name of the new hire. maxLength: 30 for
                            hires in US/Canadian companies. 100 otherwise
                          maxLength: 100
                        suffix:
                          type: object
                          description: Suffix of the new hire
                          properties:
                            id:
                              type: string
                              description: Unique identifier of the suffix
                            code:
                              type: string
                              description: UltiPro suffix code
                          example:
                            prefix:
                              id: ba00d403-e240-4c16-b894-92036dbb4b0f
                              code: SR
                        preferredFirst:
                          type: string
                          description: >-
                            Preferred first name of the new hire. maxLength: 50
                            for hires in US/Canadian companies. 100 otherwise
                          maxLength: 100
                      required:
                        - first
                        - last
                      example:
                        name:
                          prefix:
                            code: MR
                          first: Firstname
                          middle: Middlename
                          last: Lastname
                          formerLast: Formerlastname
                          suffix:
                            id: ba00d403-e240-4c16-b894-92036dbb4b0f
                          preferredFirst: Preferred
                    emailAddress:
                      type: string
                      description: Email address of the new hire
                      maxLength: 254
                    primaryPhone:
                      type: string
                      description: >-
                        Primary phone number of the new hire. maxLength: 50 for
                        hires not in US/Canadian address country. If hire's
                        address country is US/Canada, a valid phone format is
                        expected
                      maxLength: 50
                    secondaryPhone:
                      type: string
                      description: >-
                        Secondary phone number of the new hire. maxLength: 50
                        for hires not in US/Canadian address country. If hire's
                        address country is US/Canada, a valid phone format is
                        expected
                      maxLength: 50
                    address:
                      type: object
                      description: Address of the new hire
                      properties:
                        line1:
                          type: string
                          description: >-
                            Line 1 of the address. maxLength: 100 for
                            US/Canadian address country, 255 otherwise
                          maxLength: 255
                        line2:
                          type: string
                          description: >-
                            Line 2 of the address. maxLength: 100 for
                            US/Canadian address country, 255 otherwise
                          maxLength: 255
                        city:
                          type: string
                          description: >-
                            City of the address. maxLength: 50 for US/Canadian
                            address country, 255 otherwise
                          maxLength: 255
                        postalCode:
                          type: string
                          description: >-
                            Zip/postal code of the address. maxLength: 50 for
                            hires not in US/Canadian address country. If hire's
                            address country is US/Canada, a valid postal code
                            format is expected
                          maxLength: 50
                        county:
                          type: string
                          description: >-
                            County name of the address. maxLength: 30 for
                            US/Canadian address country, 255 otherwise
                          maxLength: 255
                        stateCode:
                          type: string
                          description: State code of the address
                        countryCode:
                          type: string
                          description: ISO country code of the address
                      example:
                        line1: Line 1
                        line2: Line 2
                        city: Weston
                        postalCode: '33326'
                        county: Broward
                        stateCode: FL
                        countryCode: USA
                  required:
                    - emailAddress
                  example:
                    name:
                      prefix:
                        code: MR
                      first: Firstname
                      middle: Middlename
                      last: Lastname
                      formerLast: Formerlastname
                      suffix:
                        id: ba00d403-e240-4c16-b894-92036dbb4b0f
                    emailAddress: first@last.com
                    primaryPhone: 954-687-8909
                    secondaryPhone: '9545554567'
                    address:
                      line1: Line 1
                      line2: Line 2
                      city: Weston
                      zipCode: '33326'
                      county: Broward
                      stateCode: FL
                      countryCode: USA
                job:
                  type: object
                  description: Job information for the new hire
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the job
                    code:
                      type: string
                      description: UltiPro job code
                    requisitionId:
                      type: string
                      description: RequisitionId of the job
                      maxLength: 50
                    componentCompany:
                      type: object
                      description: Component company of the job
                      properties:
                        id:
                          type: string
                          description: Unique identifier of the component company
                        code:
                          type: string
                          description: UltiPro component company Id
                      example:
                        prefix:
                          id: ba00d403-e240-4c16-b894-92036dbb4b0f
                          code: SDXUT
                    workLocation:
                      type: object
                      description: Work location of the job
                      properties:
                        id:
                          type: string
                          description: Unique identifier of the work location
                        code:
                          type: string
                          description: UltiPro work location code
                      example:
                        prefix:
                          id: ba00d403-e240-4c16-b894-92036dbb4b0f
                          code: FLLPP
                    supervisor:
                      type: object
                      description: Supervisor of the job
                      properties:
                        id:
                          type: string
                          description: Onboarding employee Id
                        code:
                          type: string
                          description: Person Id from UltiPro
                      example:
                        prefix:
                          id: ba00d403-e240-4c16-b894-92036dbb4b0f
                          code: CA00D403-E240-4C16-B894-92036DBB4B0F
                    employeeType:
                      type: object
                      description: Employee type for the job
                      properties:
                        id:
                          type: string
                          description: Unique identifier of the employee type
                        code:
                          type: string
                          description: UltiPro employee type code
                      example:
                        prefix:
                          id: ba00d403-e240-4c16-b894-92036dbb4b0f
                          code: ET347
                    selectedFLSAStatus:
                      type: integer
                      description: Selected FLSA status for the job
                      enum:
                        - Not specified = 0
                        - Exempt = 1
                        - NonExempt = 2
                  example:
                    code: MGT
                    requisitionId: '1234'
                    selectedFLSAStatus: 1
                    componentCompany:
                      code: FZAJ2
                    workLocation:
                      code: QU4FL
                    supervisor:
                      code: 89F8FA04-7055-47D2-943B-D2A409FFA3BF
                    employeeType:
                      code: INT
                organizationLevels:
                  type: array
                  items:
                    type: object
                    description: Organization level
                    properties:
                      id:
                        type: string
                        description: Identifier of the organization level
                      level:
                        type: integer
                        description: Level of the organization level
                        enum:
                          - Level 1 = 1
                          - Level 2 = 2
                          - Level 3 = 3
                          - Level 4 = 4
                      code:
                        type: string
                        description: Code of the organization level
                    example:
                      id: 89e9f572-4c63-4630-8008-dd09c97ab64c
                      level: 1
                      code: ORG1
                compensation:
                  type: object
                  description: Compensation information for the new hire
                  properties:
                    isFullTime:
                      type: boolean
                      description: Whether the new hire is full time
                    isSalaried:
                      type: boolean
                      description: Whether the new hire is salaried
                    workHours:
                      type: number
                      description: Work hours of the new hire
                    weeklyHours:
                      type: number
                      description: >-
                        Weekly hours of the new hire. Only applicable for hires
                        not in US/Canadian companies
                      maximum: 168
                    currencyCode:
                      type: string
                      description: ISO currency code of the new hire
                    payRate:
                      type: number
                      description: Pay rate of the new hire
                    ratePer:
                      type: string
                      description: >-
                        Pay period of the new hire. Accepts "H" (Hour), "W"
                        (Week), "P" (Period), "Y" (Year)
                  example:
                    isFullTime: true
                    isSalaried: false
                    workHours: 40
                    weeklyHours: 168
                    currencyCode: USD
                    payRate: 20
                    ratePer: H
                onboardingOwnerId:
                  type: string
                  description: External user identifier of the onboarding owner
                hireDate:
                  type: string
                  description: Hire date of the new hire
                  format: date-time
                orientationDate:
                  type: string
                  description: Orientation date of the new hire
                  format: date-time
                startDate:
                  type: string
                  description: Start date of the new hire
                  format: date-time
                pastStartDateReason:
                  type: string
                  description: >-
                    Reason why the new hire start date is 4 or more business
                    days in the past
                  maxLength: 250
                mentor:
                  type: object
                  description: Mentor for the new hire
                  properties:
                    id:
                      type: string
                      description: Onboarding employee id
                    code:
                      type: string
                      description: Person Id from UltiPro
                    description:
                      type: string
                      maxLength: 85
                      description: Brief description of mentor
                  example:
                    prefix:
                      id: ba00d403-e240-4c16-b894-92036dbb4b0f
                      code: MR
                      description: >-
                        Suzie is THE person who knows the product best. She
                        loves helping new team members.
                personalMessage:
                  type: string
                  description: Personal message for the new hire
                  maxLength: 250
              example:
                contactInformation:
                  name:
                    prefix:
                      code: MR
                    first: Hugo
                    middle: Alexander
                    last: Mastrantonioni
                    formerLast: Johnson
                    preferredFirst: Hugh
                    suffix:
                      code: III
                  primaryPhone: '3056985433'
                  secondaryPhone: '3056986533'
                  address:
                    line1: 123 Main St
                    line2: APT. 101
                    city: Toronto
                    postalCode: M1R0E9
                    county: County of Canada
                    stateCode: 'ON'
                    countryCode: CAN
                  emailAddress: hugo2296@gmail.com
                onboardingOwnerId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
                hireDate: 2018/06/23
                startDate: 2018/06/30
                orientationDate: 2018/07/06
                pastStartDateReason: An internal audit revealed that the new hire was not initiated
                compensation:
                  fullTime: true
                  salaried: true
                  workHours: 40
                  weeklyHours: 0
                  currencyCode: CAD
                  payRate: 50000
                  ratePer: 'Y'
                job:
                  code: DJOB
                  requisitionId: DEV30335
                  selectedFLSAStatus: 2
                  componentCompany:
                    code: FZAJ2
                  workLocation:
                    code: QU4FL
                  supervisor:
                    code: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
                  employeeType:
                    code: CMPMGT
                organizationLevels:
                  - level: 1
                    code: PROD
                  - level: 2
                    code: PR
                  - level: 3
                    code: STAT
                  - level: 4
                    code: SALES
                mentor:
                  id: 2c9e2b00-f229-4930-9d82-e86e11d6440b
                  description: >-
                    Oden will be your mentor and is THE person to get you up to
                    speed on the product. She loves helping new team members.
                personalMessage: >-
                  Hugo, I was very impressed with your passion. I am looking
                  forward to working with you and I know your expertise in this
                  space will help our team get to the next level.
        description: New Hire object to be added
        required: true
      tags:
        - New Hires
      responses:
        '201':
          description: New Hire created
          headers:
            Location:
              description: Location of resource
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier of the new hire
                  contactInformation:
                    type: object
                    description: Contact information of the new hire
                    properties:
                      name:
                        type: object
                        description: Name of the new hire
                        properties:
                          prefix:
                            type: object
                            description: Prefix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          first:
                            type: string
                            description: First name
                          middle:
                            type: string
                            description: Middle name
                          last:
                            type: string
                            description: Last name
                          formerLast:
                            type: string
                            description: Former last name
                          suffix:
                            type: object
                            description: Suffix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          preferredFirst:
                            type: string
                            description: Preferred first name
                        example:
                          name:
                            prefix:
                              id: d9079570-57f0-4530-b889-a07c95acb846
                              name:
                                enUS: Mr.
                            first: Hugo
                            middle: Alexander
                            last: Mastrantonioni
                            formerLast: Johnson
                            suffix:
                              id: 99ace441-e900-4a4c-9731-c97ea8451482
                              name:
                                enUS: III
                            preferredFirst: Hugh
                      emailAddress:
                        type: string
                        description: Email address of the new hire
                      primaryPhone:
                        type: string
                        description: Primary phone number of the new hire
                      secondaryPhone:
                        type: string
                        description: Secondary phone number of the new hire
                      address:
                        type: object
                        description: Address of the new hire
                        properties:
                          line1:
                            type: string
                            description: Line 1 of the address
                          line2:
                            type: string
                            description: Line 2 of the address
                          city:
                            type: string
                            description: City of the address
                          postalCode:
                            type: string
                            description: Zip/postal code of the address
                          county:
                            type: string
                            description: County of the address
                          stateCode:
                            type: string
                            description: State code of the address
                          countryCode:
                            type: string
                            description: Country code of the address
                          country:
                            type: object
                            description: Country code of the address
                            properties:
                              code:
                                type: string
                                description: Code of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              country:
                                code: USA
                                name:
                                  enUS: United States
                        example:
                          line1: Line 1
                          line2: Line 2
                          city: Weston
                          postalCode: '33326'
                          county: Broward
                          stateCode: FL
                          countryCode: USA
                          country:
                            code: USA
                            name:
                              enUs: United States
                    example:
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Hugo
                        middle: Alexander
                        last: Mastrantonioni
                        formerLast: Johnson
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: III
                        preferredFirst: Hugh
                      emailAddress: ultionboarding14+4@gmail.com
                      primaryPhone: '3056985433'
                      secondaryPhone: '3056986533'
                      address:
                        line1: 123 Main St
                        line2: 412 Blue Rd
                        city: Rosemead
                        zipCode: A1A2B2
                        county: County of Brant
                        stateCode: 'ON'
                        countryCode: USA
                        country:
                          code: CAN
                          name:
                            enUS: Canada
                  job:
                    type: object
                    description: Job of the new hire
                    properties:
                      id:
                        type: string
                        description: Unique identifier of the job
                      name:
                        type: string
                        description: The name of the job
                        additionalProperties:
                          type: string
                          description: >-
                            The text of the translatable translated in the
                            language specified
                      code:
                        type: string
                        description: Code of the job
                      requisitionId:
                        type: string
                        description: RequisitionId of the job
                      selectedFLSAStatus:
                        type: integer
                        description: Selected FLSA status for the job
                        enum:
                          - Not specified = 0
                          - Exempt = 1
                          - NonExempt = 2
                      componentCompany:
                        type: object
                        description: Component company of the job
                        properties:
                          id:
                            type: string
                            description: Id of the component company
                          name:
                            type: string
                            description: Name of the component company
                        example:
                          id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                          name: Wayne Enterprises
                      workLocation:
                        type: object
                        description: Work location of the job
                        properties:
                          id:
                            type: string
                            description: Id of the work location
                          name:
                            type: string
                            description: Name of the work location
                        example:
                          id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                          name: Wayne Enterprises
                      supervisor:
                        type: object
                        description: Supervisor of the job
                        properties:
                          id:
                            type: string
                            description: Id of the supervisor
                          name:
                            type: object
                            description: Name of the supervisor
                            properties:
                              prefix:
                                type: object
                                description: Prefix of the new hire in translatable format
                                properties:
                                  id:
                                    type: string
                                    description: Id of the translatable
                                  name:
                                    type: string
                                    description: The language that the translatable is in
                                    additionalProperties:
                                      type: string
                                      description: The name
                                example:
                                  workLocation:
                                    id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                    name:
                                      enUS: Toronto Headquarters
                              first:
                                type: string
                                description: First name
                              middle:
                                type: string
                                description: Middle name
                              last:
                                type: string
                                description: Last name
                              formerLast:
                                type: string
                                description: Former last name
                              suffix:
                                type: object
                                description: Suffix of the new hire in translatable format
                                properties:
                                  id:
                                    type: string
                                    description: Id of the translatable
                                  name:
                                    type: string
                                    description: The language that the translatable is in
                                    additionalProperties:
                                      type: string
                                      description: The name
                                example:
                                  workLocation:
                                    id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                    name:
                                      enUS: Toronto Headquarters
                              preferredFirst:
                                type: string
                                description: Preferred first name
                            example:
                              name:
                                prefix:
                                  id: d9079570-57f0-4530-b889-a07c95acb846
                                  name:
                                    enUS: Mr.
                                first: Hugo
                                middle: Alexander
                                last: Mastrantonioni
                                formerLast: Johnson
                                suffix:
                                  id: 99ace441-e900-4a4c-9731-c97ea8451482
                                  name:
                                    enUS: III
                                preferredFirst: Hugh
                          email:
                            type: string
                            description: The email of the supervisor
                          externalUserId:
                            type: string
                            description: The external user id of the supervisor
                        example:
                          supervisor:
                            id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7a
                            name:
                              prefix:
                                id: d9079570-57f0-4530-b889-a07c95acb846
                                name:
                                  enUS: Mr.
                              first: Hugo
                              middle: Alexander
                              last: Mastrantonioni
                              suffix:
                                id: 99ace441-e900-4a4c-9731-c97ea8451482
                                name:
                                  enUS: III
                              preferredFirst: Hugh
                            email: first@last.com
                            externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
                      employeeType:
                        type: object
                        description: Employee type for the job
                        properties:
                          id:
                            type: string
                            description: Id of the translatable
                          name:
                            type: string
                            description: The language that the translatable is in
                            additionalProperties:
                              type: string
                              description: The name
                        example:
                          workLocation:
                            id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                            name:
                              enUS: Toronto Headquarters
                    example:
                      id: 55a3111e-3f5b-55b0-ac31-55dba5e5aa5b
                      code: HCOPS
                      name:
                        enUS: Lead Tech
                        esES: Tecnico Principal
                      requisitionId: DEV10113
                      selectedFLSAStatus: 1
                      componentCompany:
                        id: f8bbaf0c-d801-5b55-1ef5-1ea55e5155c5
                        name: Acme Industries
                      workLocation:
                        id: b1ee5055-51be-5a5d-aa01-5ef5d55531f5
                        name: Acme Lab One
                      supervisor:
                        id: 51e5f31b-5155-5aef-51f0-f1b853bb5f8a
                        name:
                          prefix:
                            id: 08505515-581e-50a1-5f5e-515d5b35f5ff
                            name:
                              enUS: Mr.
                          first: Jeff
                          middle: Blue
                          last: Winner
                          suffix:
                            id: 5558f505-8c15-5cd5-5aa3-dd555eas1555
                            name:
                              enUS: III
                          preferredFirst: Joe
                        email: first@last.com
                        externalUserId: BF3DAEBD-5555-50BB-5AB1-C5833F51F5D0
                      employeeType:
                        id: 1ccb51fd-515b-5cbb-abb1-ced135551ae5
                        name:
                          enUS: Comp Mgt 5-Reg
                  organizationLevels:
                    type: array
                    items:
                      type: object
                      description: Organization level
                      properties:
                        id:
                          type: string
                          description: Identifier of the organization level
                        level:
                          type: integer
                          description: Level of the organization level
                          enum:
                            - Level 1 = 1
                            - Level 2 = 2
                            - Level 3 = 3
                            - Level 4 = 4
                        code:
                          type: string
                          description: >-
                            Unique code of a organization that the new hire is
                            associated with
                        description:
                          type: string
                          description: >-
                            Description of a organization that the new hire is
                            associated with.
                      example:
                        'id:': 3990d626-4130-48c8-b87e-cd219e6cd405
                        level: 1
                        code: PROD
                        description: Product development team
                  compensation:
                    type: object
                    description: Compensation of the new hire
                    properties:
                      isFullTime:
                        type: boolean
                        description: Whether the new hire is full time
                      isSalaried:
                        type: boolean
                        description: Whether the new hire is salaried
                      workHours:
                        type: number
                        description: Work hours of the new hire
                      weeklyHours:
                        type: number
                        description: Weekly hours of the new hire
                      currencyType:
                        type: string
                        description: Currency type of the new hire's pay
                      currency:
                        type: object
                        description: Currency of the new hire
                        properties:
                          code:
                            type: string
                            description: Code of the translatable
                          name:
                            type: string
                            description: The language that the translatable is in
                            additionalProperties:
                              type: string
                              description: The name
                        example:
                          country:
                            code: USA
                            name:
                              enUS: United States
                      payRate:
                        type: number
                        description: Pay rate of the new hire
                      ratePer:
                        type: object
                        description: Pay period of the new hire
                        properties:
                          code:
                            type: string
                            description: Code of the translatable
                          name:
                            type: string
                            description: The language that the translatable is in
                            additionalProperties:
                              type: string
                              description: The name
                        example:
                          country:
                            code: USA
                            name:
                              enUS: United States
                    example:
                      isFullTime: true
                      isSalaried: false
                      workHours: 40
                      weeklyHours: 168
                      currencyType: USD
                      currency:
                        code: USD
                        name:
                          enUS: US Dollar
                      payRate: 20
                      ratePer:
                        code: H
                        name:
                          enUS: Hour
                  onboardingOwner:
                    type: object
                    description: Onboarding owner for the new hire
                    properties:
                      id:
                        type: string
                        description: Id of the onboarding owner
                      externalUserId:
                        type: string
                        description: External user identifier of the onboarding owner
                      email:
                        type: string
                        description: Email of the onboarding owner
                      name:
                        type: object
                        description: Name of the onboarding owner
                        properties:
                          prefix:
                            type: object
                            description: Prefix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          first:
                            type: string
                            description: First name
                          middle:
                            type: string
                            description: Middle name
                          last:
                            type: string
                            description: Last name
                          formerLast:
                            type: string
                            description: Former last name
                          suffix:
                            type: object
                            description: Suffix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          preferredFirst:
                            type: string
                            description: Preferred first name
                        example:
                          name:
                            prefix:
                              id: d9079570-57f0-4530-b889-a07c95acb846
                              name:
                                enUS: Mr.
                            first: Hugo
                            middle: Alexander
                            last: Mastrantonioni
                            formerLast: Johnson
                            suffix:
                              id: 99ace441-e900-4a4c-9731-c97ea8451482
                              name:
                                enUS: III
                            preferredFirst: Hugh
                    example:
                      id: 2d42c7a5-52de-402e-92af-493b5b7f0682
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Hugo
                        middle: Alexander
                        last: Mastrantonioni
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: III
                        preferredFirst: Hugh
                      email: Hugo@got.us
                      externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
                  hireDate:
                    type: string
                    description: Hire date of the new hire
                    format: date-time
                  orientationDate:
                    type: string
                    description: Orientation date of the new hire
                    format: date-time
                  startDate:
                    type: string
                    description: Start date of the new hire
                    format: date-time
                  pastStartDateReason:
                    type: string
                    description: >-
                      Reason why the new hire start date is 4 or more business
                      days in the past
                  mentor:
                    type: object
                    description: Mentor of the new hire
                    properties:
                      id:
                        type: string
                        description: Id of the mentor
                      externalUserId:
                        type: string
                        description: External user identifier of the mentor
                      email:
                        type: string
                        description: Email of the mentor
                      name:
                        type: object
                        description: Name of the mentor
                        properties:
                          prefix:
                            type: object
                            description: Prefix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          first:
                            type: string
                            description: First name
                          middle:
                            type: string
                            description: Middle name
                          last:
                            type: string
                            description: Last name
                          formerLast:
                            type: string
                            description: Former last name
                          suffix:
                            type: object
                            description: Suffix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          preferredFirst:
                            type: string
                            description: Preferred first name
                        example:
                          name:
                            prefix:
                              id: d9079570-57f0-4530-b889-a07c95acb846
                              name:
                                enUS: Mr.
                            first: Hugo
                            middle: Alexander
                            last: Mastrantonioni
                            formerLast: Johnson
                            suffix:
                              id: 99ace441-e900-4a4c-9731-c97ea8451482
                              name:
                                enUS: III
                            preferredFirst: Hugh
                      description:
                        type: string
                        description: Description of the mentor
                    example:
                      id: 2d42c7a5-52de-402e-92af-493b5b7f0682
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Hugo
                        middle: Alexander
                        last: Mastrantonioni
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: III
                        preferredFirst: Hugh
                      email: talisa@got.us
                      externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
                      description: >-
                        Suzie is THE person who knows the product best. She
                        loves helping new team members.
                  personalMessage:
                    type: string
                    description: Personalized welcome message for the new hire
                  provisioning:
                    type: object
                    description: Provisioning for the new hire
                    properties:
                      provisioningItems:
                        type: array
                        description: >-
                          The list of provisioning items selected for this New
                          Hire
                        items:
                          type: object
                          description: >-
                            An individual provisioning item that is assigned to
                            a new hire
                          properties:
                            id:
                              type: string
                              description: Id of the provisioning item
                            name:
                              type: string
                              description: Category of the provisioning item
                            recipient:
                              type: string
                              description: Recipient of the provisioning item
                            selectedOption:
                              type: object
                              description: Selected option for the provisioning item
                              properties:
                                id:
                                  type: string
                                  description: Unique identifier of the Option
                                description:
                                  type: string
                                  description: Description of the Option
                              example:
                                id: d5b79e4e-da8c-4017-9dc0-df30cb48fbf4
                                description: Apple iPad
                            comments:
                              type: string
                              description: Comment on the provisioning item
                          example:
                            NewHireProvisioningItemReadModel:
                              id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                              name: Corporate Credit Card
                              recipient: accounting@company.com
                              selectedOption:
                                id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                                description: Amax Card
                              comments: Platinum level
                      summaryEmailRecipients:
                        type: array
                        description: >-
                          These emails receive updates about this new hire's
                          provisioning items
                        items:
                          type: string
                          description: >-
                            An individual email that receives updates on the new
                            hire's provisioning items
                    example:
                      provisioning:
                        provisioningItems:
                          - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                            name: Corporate Credit Card
                            recipient: accounting@company.com
                            selectedOption:
                              id: 6790f864-b0ff-4b1b-a3ac-23033c671c44
                              description: Deluxe card
                            comments: A credit card
                          - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bd
                            name: Network Account
                            recipient: helpdesk@company.com
                            selectedOption:
                              id: a38d541b-16f7-46b6-b48a-892cb3831784
                              description: Security Level 2 Account
                            comments: Allow access to data
                          - id: add33aee-ebff-4d50-8f45-9d7ab820c053
                            name: Phone Type
                            recipient: helpdesk@company.com
                            selectedOption:
                              id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                              description: Galaxy S5
                            comments: Black
                        summaryEmailRecipients:
                          - fred@bluebill.com
                          - jred@bluebill.com
                          - ned@bluebill.com
                  onboardingStatus:
                    type: string
                    description: The status of the new hire in onboarding
                  identityUserId:
                    type: string
                    description: Identity user identifier of the new hire
                  externalUserId:
                    type: string
                    description: External user identifier of the new hire
                  employeeNumber:
                    type: string
                    description: Employee number of the new hire
                  sentToProcessHireDate:
                    type: string
                    description: Date that the new hire was processed
                    format: date-time
                  launchedOn:
                    type: string
                    description: Launch date of the new hire
                    format: date-time
                  createdAt:
                    type: string
                    description: Creation date of the new hire
                    format: date-time
                  updatedAt:
                    type: string
                    description: Last updated date of the new hire
                    format: date-time
                example:
                  contactInformation:
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846
                        name:
                          enUS: Mr.
                      first: Hugo
                      middle: Alexander
                      last: Mastrantonioni
                      formerLast: Johnson
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482
                        name:
                          enUS: III
                      preferredFirst: Hugh
                    emailAddress: hugo2296@gmail.com
                    primaryPhone: '3056985433'
                    secondaryPhone: '3056986533'
                    address:
                      line1: 123 Main St
                      line2: APT. 101
                      city: Toronto
                      postalCode: M1R0E9
                      county: County of Canada
                      stateCode: 'ON'
                      countryCode: CAN
                      country:
                        code: CAN
                        name:
                          enUS: Canada
                  job:
                    id: 96a5833e-5f4b-46b0-ac58-41dba1e4aa1b
                    code: DJOB
                    name:
                      enUS: Lead Tech
                      esES: Tecnico Principal
                    requisitionId: DEV30335
                    selectedFLSAStatus: 2
                    supervisor:
                      id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7a
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Joe
                        middle: Jose
                        last: Santo
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: Jr
                        preferredFirst: Joseph
                      email: jsanto@example.com
                      externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
                    componentCompany:
                      id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                      name: Wayne Enterprises
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                      name: Toronto Headquarters
                    employeeType:
                      id: 8ccb43fd-686b-4cbb-abb3-ced359148ae1
                      name:
                        enUS: Comp Mgt 1-Reg
                  compensation:
                    isFullTime: true
                    isSalaried: true
                    workHours: 40
                    weeklyHours: 168
                    currencyType: CAD
                    currency:
                      code: CAD
                      name:
                        enUS: Canadian Dollar
                    payRate: 50000
                    ratePer:
                      code: 'Y'
                      name:
                        enUS: Year
                  mentor:
                    id: 56f378ee-90d4-44ec-9ab7-83f2437d1fe6
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846
                        name:
                          enUS: Mr.
                      first: Oden
                      middle: Joe
                      last: Leonerd
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482
                        name:
                          enUS: III
                      preferredFirst: Kevin
                    email: oden_leon@gmail.com
                    description: >-
                      Oden will be your mentor and is THE person to get you up
                      to speed on the product. She loves helping new team
                      members.
                    externalUserId: 145A494C-DAFD-4454-881C-6700C85512C8
                  onboardingOwner:
                    id: 2d42c7a5-52de-402e-92af-493b5b7f0682
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846
                        name:
                          enUS: Mr.
                      first: Jared
                      middle: Joseph
                      last: Nalin
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482
                        name:
                          enUS: III
                      preferredFirst: Jared
                    email: jared_nalin@example.com
                    externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
                  onboardingStatus: Launched
                  sentToProcessHireDate:
                    utcInstant: '2018-06-07T17:44:25.358Z'
                    offset: '-04:00:00'
                  launchedOn:
                    utcInstant: '2018-06-07T17:44:25.358Z'
                    offset: '-04:00:00'
                  hireDate: '2018-06-23T00:00:00Z'
                  orientationDate: '2018-07-06T00:00:00Z'
                  startDate: '2018-06-30T00:00:00Z'
                  organizationLevels:
                    - id: b7a43db9-73c7-43d6-aaab-7b2bc20ed50f
                      level: 1
                      code: PROD
                      description: Product division
                    - id: 8e4507db-330b-466d-8786-9f55da5f6c31
                      level: 2
                      code: PR
                      description: Public relations
                    - id: 2bf4a848-2926-485f-aa47-4aa8db90921b
                      level: 3
                      code: STAT
                      description: Stanton branch
                    - id: 3c792567-7494-4f84-91ae-73c797c714ef
                      level: 4
                      code: SALES
                      description: Sales team
                  provisioning:
                    provisioningItems:
                      - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                        name: Corporate Credit Card
                        recipient: accounting@company.com
                        selectedOption:
                          id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                          description: Amax Card
                        comments: Requires a platinum Amax Card
                      - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bd
                        name: Network Account
                        recipient: helpdesk@company.com
                        selectedOption:
                          id: 3c792567-7494-4f84-91ae-73c797c714ef
                          description: Super Account
                        comments: Highest clearance
                      - id: add33aee-ebff-4d50-8f45-9d7ab820c053
                        name: Phone Type
                        recipient: helpdesk@company.com
                        selectedOption:
                          id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
                          description: Galaxy S5
                        comments: Requires a black phone
                    summaryEmailRecipients:
                      - first@last.com
                      - last@beuh.com
                      - Joe@erad.com
                  identityUserId: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
                  externalUserId: b7a4fd34-73c7-43d6-aaab-7b2bc20ed50f
                  employeeNumber: '1234567890'
                  personalMessage: >-
                    Hugo, I was very impressed with your passion. I am looking
                    forward to working with you and I know your expertise in
                    this space will help our team get to the next level.
                  pastStartDateReason: >-
                    An internal audit revealed that the new hire was not
                    initiated
                  id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
                  createdAt: '2018-05-29T19:30:35.95Z'
                  updatedAt: '2018-06-07T17:44:25.378Z'
            application/problem+json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier of the new hire
                  contactInformation:
                    type: object
                    description: Contact information of the new hire
                    properties:
                      name:
                        type: object
                        description: Name of the new hire
                        properties:
                          prefix:
                            type: object
                            description: Prefix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          first:
                            type: string
                            description: First name
                          middle:
                            type: string
                            description: Middle name
                          last:
                            type: string
                            description: Last name
                          formerLast:
                            type: string
                            description: Former last name
                          suffix:
                            type: object
                            description: Suffix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          preferredFirst:
                            type: string
                            description: Preferred first name
                        example:
                          name:
                            prefix:
                              id: d9079570-57f0-4530-b889-a07c95acb846
                              name:
                                enUS: Mr.
                            first: Hugo
                            middle: Alexander
                            last: Mastrantonioni
                            formerLast: Johnson
                            suffix:
                              id: 99ace441-e900-4a4c-9731-c97ea8451482
                              name:
                                enUS: III
                            preferredFirst: Hugh
                      emailAddress:
                        type: string
                        description: Email address of the new hire
                      primaryPhone:
                        type: string
                        description: Primary phone number of the new hire
                      secondaryPhone:
                        type: string
                        description: Secondary phone number of the new hire
                      address:
                        type: object
                        description: Address of the new hire
                        properties:
                          line1:
                            type: string
                            description: Line 1 of the address
                          line2:
                            type: string
                            description: Line 2 of the address
                          city:
                            type: string
                            description: City of the address
                          postalCode:
                            type: string
                            description: Zip/postal code of the address
                          county:
                            type: string
                            description: County of the address
                          stateCode:
                            type: string
                            description: State code of the address
                          countryCode:
                            type: string
                            description: Country code of the address
                          country:
                            type: object
                            description: Country code of the address
                            properties:
                              code:
                                type: string
                                description: Code of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              country:
                                code: USA
                                name:
                                  enUS: United States
                        example:
                          line1: Line 1
                          line2: Line 2
                          city: Weston
                          postalCode: '33326'
                          county: Broward
                          stateCode: FL
                          countryCode: USA
                          country:
                            code: USA
                            name:
                              enUs: United States
                    example:
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Hugo
                        middle: Alexander
                        last: Mastrantonioni
                        formerLast: Johnson
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: III
                        preferredFirst: Hugh
                      emailAddress: ultionboarding14+4@gmail.com
                      primaryPhone: '3056985433'
                      secondaryPhone: '3056986533'
                      address:
                        line1: 123 Main St
                        line2: 412 Blue Rd
                        city: Rosemead
                        zipCode: A1A2B2
                        county: County of Brant
                        stateCode: 'ON'
                        countryCode: USA
                        country:
                          code: CAN
                          name:
                            enUS: Canada
                  job:
                    type: object
                    description: Job of the new hire
                    properties:
                      id:
                        type: string
                        description: Unique identifier of the job
                      name:
                        type: string
                        description: The name of the job
                        additionalProperties:
                          type: string
                          description: >-
                            The text of the translatable translated in the
                            language specified
                      code:
                        type: string
                        description: Code of the job
                      requisitionId:
                        type: string
                        description: RequisitionId of the job
                      selectedFLSAStatus:
                        type: integer
                        description: Selected FLSA status for the job
                        enum:
                          - Not specified = 0
                          - Exempt = 1
                          - NonExempt = 2
                      componentCompany:
                        type: object
                        description: Component company of the job
                        properties:
                          id:
                            type: string
                            description: Id of the component company
                          name:
                            type: string
                            description: Name of the component company
                        example:
                          id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                          name: Wayne Enterprises
                      workLocation:
                        type: object
                        description: Work location of the job
                        properties:
                          id:
                            type: string
                            description: Id of the work location
                          name:
                            type: string
                            description: Name of the work location
                        example:
                          id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                          name: Wayne Enterprises
                      supervisor:
                        type: object
                        description: Supervisor of the job
                        properties:
                          id:
                            type: string
                            description: Id of the supervisor
                          name:
                            type: object
                            description: Name of the supervisor
                            properties:
                              prefix:
                                type: object
                                description: Prefix of the new hire in translatable format
                                properties:
                                  id:
                                    type: string
                                    description: Id of the translatable
                                  name:
                                    type: string
                                    description: The language that the translatable is in
                                    additionalProperties:
                                      type: string
                                      description: The name
                                example:
                                  workLocation:
                                    id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                    name:
                                      enUS: Toronto Headquarters
                              first:
                                type: string
                                description: First name
                              middle:
                                type: string
                                description: Middle name
                              last:
                                type: string
                                description: Last name
                              formerLast:
                                type: string
                                description: Former last name
                              suffix:
                                type: object
                                description: Suffix of the new hire in translatable format
                                properties:
                                  id:
                                    type: string
                                    description: Id of the translatable
                                  name:
                                    type: string
                                    description: The language that the translatable is in
                                    additionalProperties:
                                      type: string
                                      description: The name
                                example:
                                  workLocation:
                                    id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                    name:
                                      enUS: Toronto Headquarters
                              preferredFirst:
                                type: string
                                description: Preferred first name
                            example:
                              name:
                                prefix:
                                  id: d9079570-57f0-4530-b889-a07c95acb846
                                  name:
                                    enUS: Mr.
                                first: Hugo
                                middle: Alexander
                                last: Mastrantonioni
                                formerLast: Johnson
                                suffix:
                                  id: 99ace441-e900-4a4c-9731-c97ea8451482
                                  name:
                                    enUS: III
                                preferredFirst: Hugh
                          email:
                            type: string
                            description: The email of the supervisor
                          externalUserId:
                            type: string
                            description: The external user id of the supervisor
                        example:
                          supervisor:
                            id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7a
                            name:
                              prefix:
                                id: d9079570-57f0-4530-b889-a07c95acb846
                                name:
                                  enUS: Mr.
                              first: Hugo
                              middle: Alexander
                              last: Mastrantonioni
                              suffix:
                                id: 99ace441-e900-4a4c-9731-c97ea8451482
                                name:
                                  enUS: III
                              preferredFirst: Hugh
                            email: first@last.com
                            externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
                      employeeType:
                        type: object
                        description: Employee type for the job
                        properties:
                          id:
                            type: string
                            description: Id of the translatable
                          name:
                            type: string
                            description: The language that the translatable is in
                            additionalProperties:
                              type: string
                              description: The name
                        example:
                          workLocation:
                            id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                            name:
                              enUS: Toronto Headquarters
                    example:
                      id: 55a3111e-3f5b-55b0-ac31-55dba5e5aa5b
                      code: HCOPS
                      name:
                        enUS: Lead Tech
                        esES: Tecnico Principal
                      requisitionId: DEV10113
                      selectedFLSAStatus: 1
                      componentCompany:
                        id: f8bbaf0c-d801-5b55-1ef5-1ea55e5155c5
                        name: Acme Industries
                      workLocation:
                        id: b1ee5055-51be-5a5d-aa01-5ef5d55531f5
                        name: Acme Lab One
                      supervisor:
                        id: 51e5f31b-5155-5aef-51f0-f1b853bb5f8a
                        name:
                          prefix:
                            id: 08505515-581e-50a1-5f5e-515d5b35f5ff
                            name:
                              enUS: Mr.
                          first: Jeff
                          middle: Blue
                          last: Winner
                          suffix:
                            id: 5558f505-8c15-5cd5-5aa3-dd555eas1555
                            name:
                              enUS: III
                          preferredFirst: Joe
                        email: first@last.com
                        externalUserId: BF3DAEBD-5555-50BB-5AB1-C5833F51F5D0
                      employeeType:
                        id: 1ccb51fd-515b-5cbb-abb1-ced135551ae5
                        name:
                          enUS: Comp Mgt 5-Reg
                  organizationLevels:
                    type: array
                    items:
                      type: object
                      description: Organization level
                      properties:
                        id:
                          type: string
                          description: Identifier of the organization level
                        level:
                          type: integer
                          description: Level of the organization level
                          enum:
                            - Level 1 = 1
                            - Level 2 = 2
                            - Level 3 = 3
                            - Level 4 = 4
                        code:
                          type: string
                          description: >-
                            Unique code of a organization that the new hire is
                            associated with
                        description:
                          type: string
                          description: >-
                            Description of a organization that the new hire is
                            associated with.
                      example:
                        'id:': 3990d626-4130-48c8-b87e-cd219e6cd405
                        level: 1
                        code: PROD
                        description: Product development team
                  compensation:
                    type: object
                    description: Compensation of the new hire
                    properties:
                      isFullTime:
                        type: boolean
                        description: Whether the new hire is full time
                      isSalaried:
                        type: boolean
                        description: Whether the new hire is salaried
                      workHours:
                        type: number
                        description: Work hours of the new hire
                      weeklyHours:
                        type: number
                        description: Weekly hours of the new hire
                      currencyType:
                        type: string
                        description: Currency type of the new hire's pay
                      currency:
                        type: object
                        description: Currency of the new hire
                        properties:
                          code:
                            type: string
                            description: Code of the translatable
                          name:
                            type: string
                            description: The language that the translatable is in
                            additionalProperties:
                              type: string
                              description: The name
                        example:
                          country:
                            code: USA
                            name:
                              enUS: United States
                      payRate:
                        type: number
                        description: Pay rate of the new hire
                      ratePer:
                        type: object
                        description: Pay period of the new hire
                        properties:
                          code:
                            type: string
                            description: Code of the translatable
                          name:
                            type: string
                            description: The language that the translatable is in
                            additionalProperties:
                              type: string
                              description: The name
                        example:
                          country:
                            code: USA
                            name:
                              enUS: United States
                    example:
                      isFullTime: true
                      isSalaried: false
                      workHours: 40
                      weeklyHours: 168
                      currencyType: USD
                      currency:
                        code: USD
                        name:
                          enUS: US Dollar
                      payRate: 20
                      ratePer:
                        code: H
                        name:
                          enUS: Hour
                  onboardingOwner:
                    type: object
                    description: Onboarding owner for the new hire
                    properties:
                      id:
                        type: string
                        description: Id of the onboarding owner
                      externalUserId:
                        type: string
                        description: External user identifier of the onboarding owner
                      email:
                        type: string
                        description: Email of the onboarding owner
                      name:
                        type: object
                        description: Name of the onboarding owner
                        properties:
                          prefix:
                            type: object
                            description: Prefix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          first:
                            type: string
                            description: First name
                          middle:
                            type: string
                            description: Middle name
                          last:
                            type: string
                            description: Last name
                          formerLast:
                            type: string
                            description: Former last name
                          suffix:
                            type: object
                            description: Suffix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          preferredFirst:
                            type: string
                            description: Preferred first name
                        example:
                          name:
                            prefix:
                              id: d9079570-57f0-4530-b889-a07c95acb846
                              name:
                                enUS: Mr.
                            first: Hugo
                            middle: Alexander
                            last: Mastrantonioni
                            formerLast: Johnson
                            suffix:
                              id: 99ace441-e900-4a4c-9731-c97ea8451482
                              name:
                                enUS: III
                            preferredFirst: Hugh
                    example:
                      id: 2d42c7a5-52de-402e-92af-493b5b7f0682
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Hugo
                        middle: Alexander
                        last: Mastrantonioni
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: III
                        preferredFirst: Hugh
                      email: Hugo@got.us
                      externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
                  hireDate:
                    type: string
                    description: Hire date of the new hire
                    format: date-time
                  orientationDate:
                    type: string
                    description: Orientation date of the new hire
                    format: date-time
                  startDate:
                    type: string
                    description: Start date of the new hire
                    format: date-time
                  pastStartDateReason:
                    type: string
                    description: >-
                      Reason why the new hire start date is 4 or more business
                      days in the past
                  mentor:
                    type: object
                    description: Mentor of the new hire
                    properties:
                      id:
                        type: string
                        description: Id of the mentor
                      externalUserId:
                        type: string
                        description: External user identifier of the mentor
                      email:
                        type: string
                        description: Email of the mentor
                      name:
                        type: object
                        description: Name of the mentor
                        properties:
                          prefix:
                            type: object
                            description: Prefix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          first:
                            type: string
                            description: First name
                          middle:
                            type: string
                            description: Middle name
                          last:
                            type: string
                            description: Last name
                          formerLast:
                            type: string
                            description: Former last name
                          suffix:
                            type: object
                            description: Suffix of the new hire in translatable format
                            properties:
                              id:
                                type: string
                                description: Id of the translatable
                              name:
                                type: string
                                description: The language that the translatable is in
                                additionalProperties:
                                  type: string
                                  description: The name
                            example:
                              workLocation:
                                id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                                name:
                                  enUS: Toronto Headquarters
                          preferredFirst:
                            type: string
                            description: Preferred first name
                        example:
                          name:
                            prefix:
                              id: d9079570-57f0-4530-b889-a07c95acb846
                              name:
                                enUS: Mr.
                            first: Hugo
                            middle: Alexander
                            last: Mastrantonioni
                            formerLast: Johnson
                            suffix:
                              id: 99ace441-e900-4a4c-9731-c97ea8451482
                              name:
                                enUS: III
                            preferredFirst: Hugh
                      description:
                        type: string
                        description: Description of the mentor
                    example:
                      id: 2d42c7a5-52de-402e-92af-493b5b7f0682
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Hugo
                        middle: Alexander
                        last: Mastrantonioni
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: III
                        preferredFirst: Hugh
                      email: talisa@got.us
                      externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
                      description: >-
                        Suzie is THE person who knows the product best. She
                        loves helping new team members.
                  personalMessage:
                    type: string
                    description: Personalized welcome message for the new hire
                  provisioning:
                    type: object
                    description: Provisioning for the new hire
                    properties:
                      provisioningItems:
                        type: array
                        description: >-
                          The list of provisioning items selected for this New
                          Hire
                        items:
                          type: object
                          description: >-
                            An individual provisioning item that is assigned to
                            a new hire
                          properties:
                            id:
                              type: string
                              description: Id of the provisioning item
                            name:
                              type: string
                              description: Category of the provisioning item
                            recipient:
                              type: string
                              description: Recipient of the provisioning item
                            selectedOption:
                              type: object
                              description: Selected option for the provisioning item
                              properties:
                                id:
                                  type: string
                                  description: Unique identifier of the Option
                                description:
                                  type: string
                                  description: Description of the Option
                              example:
                                id: d5b79e4e-da8c-4017-9dc0-df30cb48fbf4
                                description: Apple iPad
                            comments:
                              type: string
                              description: Comment on the provisioning item
                          example:
                            NewHireProvisioningItemReadModel:
                              id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                              name: Corporate Credit Card
                              recipient: accounting@company.com
                              selectedOption:
                                id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                                description: Amax Card
                              comments: Platinum level
                      summaryEmailRecipients:
                        type: array
                        description: >-
                          These emails receive updates about this new hire's
                          provisioning items
                        items:
                          type: string
                          description: >-
                            An individual email that receives updates on the new
                            hire's provisioning items
                    example:
                      provisioning:
                        provisioningItems:
                          - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                            name: Corporate Credit Card
                            recipient: accounting@company.com
                            selectedOption:
                              id: 6790f864-b0ff-4b1b-a3ac-23033c671c44
                              description: Deluxe card
                            comments: A credit card
                          - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bd
                            name: Network Account
                            recipient: helpdesk@company.com
                            selectedOption:
                              id: a38d541b-16f7-46b6-b48a-892cb3831784
                              description: Security Level 2 Account
                            comments: Allow access to data
                          - id: add33aee-ebff-4d50-8f45-9d7ab820c053
                            name: Phone Type
                            recipient: helpdesk@company.com
                            selectedOption:
                              id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                              description: Galaxy S5
                            comments: Black
                        summaryEmailRecipients:
                          - fred@bluebill.com
                          - jred@bluebill.com
                          - ned@bluebill.com
                  onboardingStatus:
                    type: string
                    description: The status of the new hire in onboarding
                  identityUserId:
                    type: string
                    description: Identity user identifier of the new hire
                  externalUserId:
                    type: string
                    description: External user identifier of the new hire
                  employeeNumber:
                    type: string
                    description: Employee number of the new hire
                  sentToProcessHireDate:
                    type: string
                    description: Date that the new hire was processed
                    format: date-time
                  launchedOn:
                    type: string
                    description: Launch date of the new hire
                    format: date-time
                  createdAt:
                    type: string
                    description: Creation date of the new hire
                    format: date-time
                  updatedAt:
                    type: string
                    description: Last updated date of the new hire
                    format: date-time
                example:
                  contactInformation:
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846
                        name:
                          enUS: Mr.
                      first: Hugo
                      middle: Alexander
                      last: Mastrantonioni
                      formerLast: Johnson
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482
                        name:
                          enUS: III
                      preferredFirst: Hugh
                    emailAddress: hugo2296@gmail.com
                    primaryPhone: '3056985433'
                    secondaryPhone: '3056986533'
                    address:
                      line1: 123 Main St
                      line2: APT. 101
                      city: Toronto
                      postalCode: M1R0E9
                      county: County of Canada
                      stateCode: 'ON'
                      countryCode: CAN
                      country:
                        code: CAN
                        name:
                          enUS: Canada
                  job:
                    id: 96a5833e-5f4b-46b0-ac58-41dba1e4aa1b
                    code: DJOB
                    name:
                      enUS: Lead Tech
                      esES: Tecnico Principal
                    requisitionId: DEV30335
                    selectedFLSAStatus: 2
                    supervisor:
                      id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7a
                      name:
                        prefix:
                          id: d9079570-57f0-4530-b889-a07c95acb846
                          name:
                            enUS: Mr.
                        first: Joe
                        middle: Jose
                        last: Santo
                        suffix:
                          id: 99ace441-e900-4a4c-9731-c97ea8451482
                          name:
                            enUS: Jr
                        preferredFirst: Joseph
                      email: jsanto@example.com
                      externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
                    componentCompany:
                      id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                      name: Wayne Enterprises
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                      name: Toronto Headquarters
                    employeeType:
                      id: 8ccb43fd-686b-4cbb-abb3-ced359148ae1
                      name:
                        enUS: Comp Mgt 1-Reg
                  compensation:
                    isFullTime: true
                    isSalaried: true
                    workHours: 40
                    weeklyHours: 168
                    currencyType: CAD
                    currency:
                      code: CAD
                      name:
                        enUS: Canadian Dollar
                    payRate: 50000
                    ratePer:
                      code: 'Y'
                      name:
                        enUS: Year
                  mentor:
                    id: 56f378ee-90d4-44ec-9ab7-83f2437d1fe6
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846
                        name:
                          enUS: Mr.
                      first: Oden
                      middle: Joe
                      last: Leonerd
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482
                        name:
                          enUS: III
                      preferredFirst: Kevin
                    email: oden_leon@gmail.com
                    description: >-
                      Oden will be your mentor and is THE person to get you up
                      to speed on the product. She loves helping new team
                      members.
                    externalUserId: 145A494C-DAFD-4454-881C-6700C85512C8
                  onboardingOwner:
                    id: 2d42c7a5-52de-402e-92af-493b5b7f0682
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846
                        name:
                          enUS: Mr.
                      first: Jared
                      middle: Joseph
                      last: Nalin
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482
                        name:
                          enUS: III
                      preferredFirst: Jared
                    email: jared_nalin@example.com
                    externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
                  onboardingStatus: Launched
                  sentToProcessHireDate:
                    utcInstant: '2018-06-07T17:44:25.358Z'
                    offset: '-04:00:00'
                  launchedOn:
                    utcInstant: '2018-06-07T17:44:25.358Z'
                    offset: '-04:00:00'
                  hireDate: '2018-06-23T00:00:00Z'
                  orientationDate: '2018-07-06T00:00:00Z'
                  startDate: '2018-06-30T00:00:00Z'
                  organizationLevels:
                    - id: b7a43db9-73c7-43d6-aaab-7b2bc20ed50f
                      level: 1
                      code: PROD
                      description: Product division
                    - id: 8e4507db-330b-466d-8786-9f55da5f6c31
                      level: 2
                      code: PR
                      description: Public relations
                    - id: 2bf4a848-2926-485f-aa47-4aa8db90921b
                      level: 3
                      code: STAT
                      description: Stanton branch
                    - id: 3c792567-7494-4f84-91ae-73c797c714ef
                      level: 4
                      code: SALES
                      description: Sales team
                  provisioning:
                    provisioningItems:
                      - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                        name: Corporate Credit Card
                        recipient: accounting@company.com
                        selectedOption:
                          id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                          description: Amax Card
                        comments: Requires a platinum Amax Card
                      - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bd
                        name: Network Account
                        recipient: helpdesk@company.com
                        selectedOption:
                          id: 3c792567-7494-4f84-91ae-73c797c714ef
                          description: Super Account
                        comments: Highest clearance
                      - id: add33aee-ebff-4d50-8f45-9d7ab820c053
                        name: Phone Type
                        recipient: helpdesk@company.com
                        selectedOption:
                          id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
                          description: Galaxy S5
                        comments: Requires a black phone
                    summaryEmailRecipients:
                      - first@last.com
                      - last@beuh.com
                      - Joe@erad.com
                  identityUserId: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
                  externalUserId: b7a4fd34-73c7-43d6-aaab-7b2bc20ed50f
                  employeeNumber: '1234567890'
                  personalMessage: >-
                    Hugo, I was very impressed with your passion. I am looking
                    forward to working with you and I know your expertise in
                    this space will help our team get to the next level.
                  pastStartDateReason: >-
                    An internal audit revealed that the new hire was not
                    initiated
                  id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
                  createdAt: '2018-05-29T19:30:35.95Z'
                  updatedAt: '2018-06-07T17:44:25.378Z'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      type:
                        type: string
                        description: URI reference that identifies the problem type
                      title:
                        type: string
                        description: Short, human-readable summary of the problem type
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties:
                          modelState:
                            description: >-
                              Properties failing validation and the errors
                              associated with each of these properties.
                            properties:
                              property1:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      description: Machine-readable error type
                                    message:
                                      type: string
                                      description: >-
                                        Short, human-readable message explaining
                                        the error
                              property2:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      description: Machine-readable error type
                                    message:
                                      type: string
                                      description: >-
                                        Short, human-readable message explaining
                                        the error
                          general:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                  description: Machine-readable error type
                                message:
                                  type: string
                                  description: >-
                                    Short, human-readable message explaining the
                                    error
            application/problem+json:
              schema:
                allOf:
                  - type: object
                    properties:
                      type:
                        type: string
                        description: URI reference that identifies the problem type
                      title:
                        type: string
                        description: Short, human-readable summary of the problem type
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties:
                          modelState:
                            description: >-
                              Properties failing validation and the errors
                              associated with each of these properties.
                            properties:
                              property1:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      description: Machine-readable error type
                                    message:
                                      type: string
                                      description: >-
                                        Short, human-readable message explaining
                                        the error
                              property2:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      description: Machine-readable error type
                                    message:
                                      type: string
                                      description: >-
                                        Short, human-readable message explaining
                                        the error
                          general:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                  description: Machine-readable error type
                                message:
                                  type: string
                                  description: >-
                                    Short, human-readable message explaining the
                                    error
              examples:
                response:
                  value:
                    type: >-
                      https://www.ultimatesoftware.com/error.onboarding.validation-error
                    title: One or more validation errors have occurred
                    errors:
                      modelState:
                        contactInformation.name.first:
                          - type: >-
                              error.onboarding.new-hires.contact-information.name.first.required
                            message: First name is required.
                      general: null
        '409':
          description: Conflict with the current state of the resource
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      type:
                        type: string
                        description: URI reference that identifies the problem type
                      title:
                        type: string
                        description: Short, human-readable summary of the problem type
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties:
                          modelState:
                            description: >-
                              Properties failing validation and the errors
                              associated with each of these properties.
                            properties:
                              property1:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      description: Machine-readable error type
                                    message:
                                      type: string
                                      description: >-
                                        Short, human-readable message explaining
                                        the error
                              property2:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      description: Machine-readable error type
                                    message:
                                      type: string
                                      description: >-
                                        Short, human-readable message explaining
                                        the error
                          general:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                  description: Machine-readable error type
                                message:
                                  type: string
                                  description: >-
                                    Short, human-readable message explaining the
                                    error
            application/problem+json:
              schema:
                allOf:
                  - type: object
                    properties:
                      type:
                        type: string
                        description: URI reference that identifies the problem type
                      title:
                        type: string
                        description: Short, human-readable summary of the problem type
                  - type: object
                    properties:
                      errors:
                        type: object
                        properties:
                          modelState:
                            description: >-
                              Properties failing validation and the errors
                              associated with each of these properties.
                            properties:
                              property1:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      description: Machine-readable error type
                                    message:
                                      type: string
                                      description: >-
                                        Short, human-readable message explaining
                                        the error
                              property2:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      description: Machine-readable error type
                                    message:
                                      type: string
                                      description: >-
                                        Short, human-readable message explaining
                                        the error
                          general:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                  description: Machine-readable error type
                                message:
                                  type: string
                                  description: >-
                                    Short, human-readable message explaining the
                                    error
              examples:
                response:
                  value:
                    type: >-
                      https://www.ultimatesoftware.com/error.onboarding.validation-error
                    title: One or more validation errors have occurred
                    errors:
                      modelState:
                        title:
                          - type: error.onboarding.new-hires.duplicate-new-hire-id
                            message: >-
                              New hire with id
                              '0fde172d-5664-481a-9aea-df78861ff270' conflicts
                              with another new hire.
                      general: null
  /hoursWorked:
    post:
      operationId: addTimeList
      description: Add multiple Time entries
      summary: Add hours worked entries
      tags:
        - Time
      parameters:
        - $ref: '#/components/parameters/xCorrelationIdParam'
        - $ref: '#/components/parameters/usTenantIdParam'
        - $ref: '#/components/parameters/usCustomerApiKeyParam'
        - $ref: '#/components/parameters/authParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeItemList'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeItemList'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  /personnel/v1/integration-audit-configuration:
    get:
      tags:
        - IntegrationAuditConfiguration
      summary: Get Integration Audit Configuration Data
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: tableName
          in: query
          required: false
          schema:
            type: string
        - name: fieldName
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationAuditConfiguration'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationAuditConfiguration'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationAuditConfiguration'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationAuditConfiguration'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationAuditConfiguration'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/international-employees:
    get:
      summary: Get international employee details for all employees
      description: >
        Get all international employee details. If no pagination parameters
        specified, the default/max is applied. Permissions - UKG Pro service
        account must have "View" role for the "Personnel Integration" Web
        Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      tags:
        - InternationalEmployee
      operationId: InternationalEmployee_Get
      parameters:
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternationalEmployeeModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternationalEmployeeModel'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternationalEmployeeModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternationalEmployeeModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternationalEmployeeModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/international-employees/{employeeId}:
    get:
      summary: Get a single employees international details
      description: >
        Get a single employees international details. If no pagination
        parameters specified, the default/max is applied. Permissions - UKG Pro
        service account must have "View" role for the "Personnel Integration"
        Web Service. Headers - US-Customer-Api-Key, Authorization (base64
        encoded {username}:{password}).
      tags:
        - InternationalEmployee
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternationalEmployeeModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternationalEmployeeModel'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternationalEmployeeModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternationalEmployeeModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternationalEmployeeModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /configuration/v1/jobgroup:
    get:
      tags:
        - JobGroup
      summary: Get All Job Groups
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password})
      operationId: JobGroup_Get
      parameters:
        - name: jobGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: jobGroupCountryCode
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobGroupDetail'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobGroupDetail'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobGroupDetail'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobGroupDetail'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobGroupDetail'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /locations/:
    get:
      summary: Retrieve all locations configurations
      description: >
        The locations endpoint returns information about the UltiPro locations
        configurations. Permissions - Ultipro service account must have "View"
        role for the "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      operationId: getlocationsList
      parameters:
        - name: countryCode
          in: query
          description: location country code.
          required: false
          schema:
            type: string
        - name: isActive
          in: query
          description: Active status.
          required: false
          schema:
            type: boolean
      tags:
        - locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/locations'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /locations/{code}:
    get:
      summary: Retrieve a single location configuration
      description: >
        The locations endpoint returns information about the UltiPro locations
        configuration. The unique identifier for a locations configuration is
        the code property. Permissions - Ultipro service account must have
        "View" role for the "Company Configuration Integration" Web Service.
        Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      operationId: getlocations
      parameters:
        - name: code
          in: path
          description: location code.
          required: true
          schema:
            type: string
      tags:
        - locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locations'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /jobs/:
    get:
      summary: Retrieve all jobs configurations
      description: >
        The jobs endpoint returns information about the UltiPro jobs
        configurations. Permissions - Ultipro service account must have "View"
        role for the "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      operationId: getjobsList
      parameters:
        - name: countryCode
          in: query
          description: Job country code.
          required: false
          schema:
            type: string
        - name: isActive
          in: query
          description: Active status.
          required: false
          schema:
            type: boolean
      tags:
        - jobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/jobs'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /jobs/{code}:
    get:
      summary: Retrieve a single job configuration
      description: >
        The jobs endpoint returns information about the UltiPro jobs
        configuration. The unique identifier for a jobs configuration is the
        code property. Permissions - Ultipro service account must have "View"
        role for the "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      operationId: getjobs
      parameters:
        - name: code
          in: path
          description: Job code.
          required: true
          schema:
            type: string
      tags:
        - jobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobs'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /configuration/v1/option-rate:
    get:
      tags:
        - OptionRate
      summary: Get Option Rate Data
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have \"View\" role for the
        \"Company Configuration Integration\" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).


        Effective date parameter gets effective record as of the given date. If
        it's not passed, effected date is defaulted to current date.


        Deduction code parameter can take in multiple deduction codes separated
        by coma. ex: [DEN, MED, VIS] .


        Pay frequency parameter can take in multiple pay frequencies separated
        by coma. ex: [B, M] .
      parameters:
        - name: deductionCode
          in: query
          required: false
          schema:
            type: string
        - name: benefitOption
          in: query
          required: false
          schema:
            type: string
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: payFrequency
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptionRate'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptionRate'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptionRate'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptionRate'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptionRate'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/open-enrollment-emp-deductions:
    get:
      tags:
        - OpenEnrollmentEmployeeDeductions
      summary: Get Open Enrollment Employee Deductions
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})
      operationId: OpenEnrollmentEmployeeDeductions_GetAuditDetails
      parameters:
        - name: startDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: sessionType
          in: query
          required: true
          schema:
            type: string
        - name: deductionCode
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenEnrollmentEmployeeDeductions'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenEnrollmentEmployeeDeductions'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenEnrollmentEmployeeDeductions'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenEnrollmentEmployeeDeductions'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenEnrollmentEmployeeDeductions'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /signin/oauth2/t/{tenant-name}/access_token:
    post:
      summary: Obtain new oAuth token
      description: >-
        Obtain new token to use in subsequent service requests <b>ONLY</b> for
        services that use oAuth.
      tags:
        - Post new token request
      parameters:
        - name: tenant-name
          in: path
          description: Tenant Name provided to you from UltiPro
          required: true
          schema:
            type: string
        - name: Content-Type
          in: header
          description: You should enter "application/x-www-form-urlencoded"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  description: You should enter "client_credentials" for this value
                  type: string
                client_id:
                  description: This is from UltiPro Identity and provided to you
                  type: string
                client_secret:
                  description: This is from UltiPro Identity and provided to you
                  type: string
                scope:
                  description: you should enter "profile" for this
                  type: string
              required:
                - grant_type
                - client_id
                - client_secret
                - scope
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token-response'
  /personnel/v1/open-enrollment-dep-deductions:
    get:
      tags:
        - OpenEnrollmentDependentDeductions
      summary: Get Open Enrollment Dependent Deductions Data
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})
         <ul><li>StartDateTime is a required parameter. </li><li>EndDateTime is a required parameter.</li>  <li>SessionType is a required parameter. </li><li>DeductionCode is a required parameter that takes a list of deduction codes [ded1, ded2].</li></ul>
      parameters:
        - name: startDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: sessionType
          in: query
          required: true
          schema:
            type: string
        - name: deductionCode
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenEnrollmentDependentDeductions'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenEnrollmentDependentDeductions'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenEnrollmentDependentDeductions'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenEnrollmentDependentDeductions'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenEnrollmentDependentDeductions'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /configuration/v1/org-levels/{level}/{code}:
    get:
      tags:
        - Single Organization Level
      summary: Get single org-level
      description: >
        The org-levels endpoint returns information about the UltiPro
        organizational level configurations. The unique identifier for an
        org-levels configuration, is level and code properties concatenated,
        therefore both values are needed. Permissions - Ultipro service account
        must have "View" role for the "Company Configuration Integration" Web
        Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      operationId: getorg-levels
      parameters:
        - name: level
          in: path
          description: Description of the org-level.
          required: true
          schema:
            type: string
        - name: code
          in: path
          description: Organization code.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-levels'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/org-levels'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
    patch:
      tags:
        - Single Organization Level
      summary: Patch one org-level
      description: >
        Allows the ability update one or more properties of a single org-level
        configuration. Permissions - Ultipro service account must have "Edit"
        role for the "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      operationId: patchorg-levels
      parameters:
        - name: level
          in: path
          description: Description of the org-level.
          required: true
          schema:
            type: string
        - name: code
          in: path
          description: Organization code.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/org-levels'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-levels'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/org-levels'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
    put:
      tags:
        - Single Organization Level
      summary: Update one org-level
      description: >
        Allows the ability update a single organizational level configuration.
        Permissions - Ultipro service account must have "Edit" role for the
        "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      operationId: putorg-levels
      parameters:
        - name: level
          in: path
          description: Description of the org-level.
          required: true
          schema:
            type: string
        - name: code
          in: path
          description: Organization code.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/org-levels'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-levels'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/org-levels'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /configuration/v1/org-levels:
    get:
      tags:
        - View or Create Organization Levels
      summary: Get all org-levels
      description: >
        Returns information about the UltiPro org-level configurations.
        Permissions - Ultipro service account must have "View" role for the
        "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      operationId: getorg-levelsList
      parameters:
        - name: levelDescription
          in: query
          description: Description of the org-level.
          required: false
          schema:
            type: string
        - name: code
          in: query
          description: Organization code.
          required: false
          schema:
            type: string
        - name: budgetGroup
          in: query
          description: Organizational budget group.
          required: false
          schema:
            type: string
        - name: reportingCategory
          in: query
          description: Reporting category.
          required: false
          schema:
            type: string
        - name: isActive
          in: query
          description: Active status.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/org-levels'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/org-levels'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
    post:
      tags:
        - View or Create Organization Levels
      summary: Create org-level configuration
      description: >
        Creates a new UltiPro org-level configuration, Array of objects is
        permitted for multi-records support. Permissions - Ultipro service
        account must have "Add" role for the "Company Configuration Integration"
        Web Service. Headers - US-Customer-Api-Key, Authorization (base64
        encoded {username}:{password}).
      operationId: postorg-levels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org-levels-body'
        description: The org-level to be written.
        required: true
      responses:
        '207':
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiStatusResponse'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/MultiStatusResponse'
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /payroll/v1/pay-register:
    get:
      tags:
        - PayRegister
      summary: Get Pay Register
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Payroll Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      operationId: PayRegister_Get
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: checkId
          in: query
          required: false
          schema:
            type: string
        - name: employeeNumber
          in: query
          required: false
          schema:
            type: string
        - name: documentNumber
          in: query
          required: false
          schema:
            type: string
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: periodControl
          in: query
          required: false
          schema:
            type: string
        - name: payDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: periodEndDate
          in: query
          required: false
          schema:
            type: string
        - name: periodStartDate
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayRegister'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayRegister'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayRegister'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayRegister'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayRegister'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /payroll/v1/paygroup-payperiods:
    get:
      tags:
        - PayGroupPayPeriod
      summary: Get PayGroup PayPeriods
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Payroll Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      operationId: PayGroupPayPeriod_GetPayGroupPayPeriod
      parameters:
        - name: payDateSeq
          in: query
          required: false
          schema:
            type: integer
        - name: periodEndDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: periodStartDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: payDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: startPerControl
          in: query
          required: false
          schema:
            type: string
        - name: endPerControl
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayGroupPayPeriods'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayGroupPayPeriods'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayGroupPayPeriods'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayGroupPayPeriods'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayGroupPayPeriods'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /configuration/v1/organization-reporting-category:
    get:
      tags:
        - Organization Reporting Category
      summary: Get Organization Reporting Category
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password})
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationReportingCategoryDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationReportingCategoryDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationReportingCategoryDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationReportingCategoryDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationReportingCategoryDetails'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '429':
          description: '429'
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /payroll/v1/payroll-deductions-history:
    get:
      tags:
        - PayrollDeductionsHistory
      summary: Get Payroll Deductions History
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Payroll Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      operationId: PayrollDeductionsHistory_Get
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: checkId
          in: query
          required: false
          schema:
            type: string
        - name: employeeNumber
          in: query
          required: false
          schema:
            type: string
        - name: deductionCode
          in: query
          required: false
          schema:
            type: string
        - name: deductionType
          in: query
          required: false
          schema:
            type: string
        - name: benefitOption
          in: query
          required: false
          schema:
            type: string
        - name: benefitProvider
          in: query
          required: false
          schema:
            type: string
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: periodControl
          in: query
          required: false
          schema:
            type: string
        - name: payDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: is401K
          in: query
          required: false
          schema:
            type: string
        - name: is403B
          in: query
          required: false
          schema:
            type: string
        - name: is408K
          in: query
          required: false
          schema:
            type: string
        - name: is408P
          in: query
          required: false
          schema:
            type: string
        - name: is457
          in: query
          required: false
          schema:
            type: string
        - name: is457B
          in: query
          required: false
          schema:
            type: string
        - name: is457F
          in: query
          required: false
          schema:
            type: string
        - name: is501C
          in: query
          required: false
          schema:
            type: string
        - name: isD125
          in: query
          required: false
          schema:
            type: string
        - name: isDeductionOffSet
          in: query
          required: false
          schema:
            type: string
        - name: isDeferredCompensation
          in: query
          required: false
          schema:
            type: string
        - name: isDependentCare
          in: query
          required: false
          schema:
            type: string
        - name: isHousing
          in: query
          required: false
          schema:
            type: string
        - name: isNonQualifiedPlan
          in: query
          required: false
          schema:
            type: string
        - name: startPerControl
          in: query
          required: false
          schema:
            type: string
        - name: endPerControl
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayrollDeductionsHistory'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayrollDeductionsHistory'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayrollDeductionsHistory'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayrollDeductionsHistory'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayrollDeductionsHistory'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/platform-configuration-fields/class-name/{className}:
    get:
      tags:
        - v1 PlatformConfigurationCustomFieldsData
      summary: Platform Configuration Fields Data v1
      description: "Returns information about the UKG Pro Platform Configuration Custom Fields Data. Specifically, each of a classes' custom fields and their respective values. The keyNames, keyValues, employment status, and fields vary and are dependent on the class in question. Classes marked '(not emp specific)' in the list below will not work with the employmentStatus parameter.<br />UKG Pro service account must have \"View\" role for the \"Personnel Integration\" Web Service.<br /><b>Supported classes</b>:<br />\r\n1. Address<br />\r\n2. Person<br />\r\n3. PersonName<br />\r\n4. Employee<br />\r\n5. PhoneNumber<br />\r\n6. Employment<br />\r\n7. InternationalEmployee<br />\r\n8. ComponentCompany - (not emp specific)<br />\r\n9. Location - (not emp specific)<br />\r\n10. Job -(not emp specific)<br />\r\n11. OrgLevel1 - (not emp specific)<br />\r\n12. OrgLevel2 - (not emp specific)<br />\r\n13. OrgLevel3 - (not emp specific)<br />\r\n14. OrgLevel4 - (not emp specific)."
      operationId: PcFieldsData_GetFieldsData
      parameters:
        - name: className
          in: path
          required: true
          description: >-
            The name of a supported class, as listed above, to pull custom
            fields from.
          schema:
            type: string
        - name: keyName
          in: query
          required: false
          description: >-
            Optional keyName to allow filtering results by the corresponding
            keyValue. keyNames are specific IDs that apply to the class in
            question.
          schema:
            type: string
        - name: keyValue
          in: query
          required: false
          description: >-
            Optional keyValue. Allows filtering results to only include a
            specific keyValue(s). keyValues correspond to a supplied keyName.
          schema:
            type: string
        - name: fields
          in: query
          required: false
          description: >-
            The exact name of a custom field or fields in a comma seperated
            list. Filters results to only fields with those names.
          schema:
            type: string
        - name: employmentStatus
          in: query
          required: false
          description: >-
            Use in junction with employment specific queries to filter custom
            field results by an internal employment status.
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: >-
            Offsets results. Used with page number to allow filtering results to
            a specific range of custom fields.
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          description: >-
            Offsets results. Used with page to allow filtering results to a
            specific range of custom fields.
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.Models.PcData
            text/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.Models.PcData
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.Models.PcData
            application/xml:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.Models.PcData
            text/xml:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.Models.PcData
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v2/platform-configuration-fields/class-name/{className}:
    get:
      tags:
        - v2 PlatformConfigurationCustomFieldsData
      summary: Platform Configuration Fields Data v2
      description: "This API is similar to the v1 Platform Configuration Fields className API with added support of filtering data by KeyValue. The fields and keyValues are dependent on the class in question - expected key values are listed along with the supported classes below.<br /> \r\nThis API uses pre-defined Views in the UKG Pro database to retrieve the data whereas the v1 version of this API uses functions to retrieve the data.<br />UKG Pro service account must have \"View\" role for the \"Personnel Integration\" Web Service.<br /><b>Supported classes</b>:<br />\r\n1. Address (takes value of an employee Id as keyValue)<br />\r\n2. Person (takes value of an employee Id as keyValue)<br />\r\n3. Employee (takes value of an employee Id as keyValue)<br />\r\n4. PhoneNumber (takes value of an employee Id as keyValue)<br />\r\n5. Employment (takes value of an employee Id and a company code as keyValue. Accepted format for keyValue <b>employeeId:companyCode</b>)<br />\r\n6. Location (takes value of a location code as keyValue)<br />\r\n7. Job (takes value of a job code as keyValue)<br />\r\n8. OrgLevel1 (takes value of an org code as keyValue)<br />\r\n9. OrgLevel2 (takes value of an org code as keyValue)<br />\r\n10. OrgLevel3 (takes value of an org code as keyValue)<br />\r\n11. OrgLevel4 (takes value of an org code as keyValue)<br />\r\n12. InternationalEmployee (takes value of an employee Id and a country code as keyValue. Accepted format for keyValue <b>employeeId:countryCode</b>)<br />\r\n13. Contacts (takes value of a SystemId as keyValue)<br /><br /><b>Classes NOT supported</b>:<br />\r\n1. ComponentCompany<br />\r\n2. PersonNames (fields of this class are available in class Person)<br />"
      operationId: PCFieldsDataV2_GetFieldsData
      parameters:
        - name: className
          in: path
          required: true
          description: >-
            The name of a supported class, as listed above, to pull custom
            fields from.
          schema:
            type: string
        - name: fields
          in: query
          required: false
          description: >-
            The exact name of a custom field or fields in a comma seperated
            list. Filters results to only fields with those names.
          schema:
            type: string
        - name: keyValue
          in: query
          required: false
          description: >-
            keyValue to filter results by, allowing filtering by specific Ids.
            This value is dependent on the className, as listed in the
            implementation notes.
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: >-
            Offsets results. Used with page number to allow filtering results to
            a certain range of custom fields.
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          description: >-
            Offsets results. Used with page to allow filtering results to a
            certain range of custom fields.
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.v2.Models.PcData
            text/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.v2.Models.PcData
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.v2.Models.PcData
            application/xml:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.v2.Models.PcData
            text/xml:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.v2.Models.PcData
        '404':
          description: NotFound
        '500':
          description: Invalid ClassName or any other Exceptions
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/person-details:
    get:
      summary: Get all person details
      description: >
        Get all person details. 

        If no pagination parameters specified, the default/max is applied.  

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Person Details" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /person-details?dateTimeCreated=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /person-details?dateTimeCreated=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /person-details?dateTimeCreated=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /person-details?dateTimeCreated={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      tags:
        - PersonDetails
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: lastName
          in: query
          required: false
          schema:
            type: string
        - name: emailAddress
          in: query
          required: false
          schema:
            type: string
        - name: addressState
          in: query
          required: false
          schema:
            type: string
        - name: addressCountry
          in: query
          required: false
          schema:
            type: string
        - name: cobraIsActive
          in: query
          required: false
          schema:
            type: string
        - name: cobraStatus
          in: query
          required: false
          schema:
            type: string
        - name: dateOfCobraEvent
          in: query
          description: >-
            Used to find date of COBRA event less than, greater than, equal to,
            or between passed date(s)
          required: false
          schema:
            type: string
        - name: dateTimeCreated
          in: query
          description: >-
            Used to find person record created less than, greater than, equal
            to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: dateTimeChanged
          in: query
          description: >-
            Used to find person record changed less than, greater than, equal
            to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: nationalId
          in: query
          required: false
          schema:
            type: string
        - name: nationalIdCountry
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/companies/{companyId}/person-details:
    get:
      summary: Get all person details for a single company
      description: >
        Get all person details for a single company. 

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Person Details" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /companies/{companyId}/person-details?dateTimeCreated=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /companies/{companyId}/person-details?dateTimeCreated=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /companies/{companyId}/person-details?dateTimeCreated=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /companies/{companyId}/person-details?dateTimeCreated={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      tags:
        - PersonDetails
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: lastName
          in: query
          required: false
          schema:
            type: string
        - name: emailAddress
          in: query
          required: false
          schema:
            type: string
        - name: addressState
          in: query
          required: false
          schema:
            type: string
        - name: addressCountry
          in: query
          required: false
          schema:
            type: string
        - name: cobraIsActive
          in: query
          required: false
          schema:
            type: string
        - name: cobraStatus
          in: query
          required: false
          schema:
            type: string
        - name: dateOfCobraEvent
          in: query
          description: >-
            Used to find date of COBRA event less than, greater than, equal to,
            or between passed date(s)
          required: false
          schema:
            type: string
        - name: dateTimeCreated
          in: query
          description: >-
            Used to find person record created less than, greater than, equal
            to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: dateTimeChanged
          in: query
          description: >-
            Used to find person record changed less than, greater than, equal
            to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: nationalId
          in: query
          required: false
          schema:
            type: string
        - name: nationalIdCountry
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/companies/{companyId}/employees/{employeeId}/person-details:
    get:
      summary: Get a single person detail record for a single company
      description: >
        Get a single person detail record for a single company. 

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Person Details" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /companies/{companyId}/employees/{employeeId}/person-details?dateTimeCreated=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /companies/{companyId}/employees/{employeeId}/person-details?dateTimeCreated=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/person-details?dateTimeCreated=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/person-details?dateTimeCreated={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      tags:
        - PersonDetails
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: lastName
          in: query
          required: false
          schema:
            type: string
        - name: emailAddress
          in: query
          required: false
          schema:
            type: string
        - name: addressState
          in: query
          required: false
          schema:
            type: string
        - name: addressCountry
          in: query
          required: false
          schema:
            type: string
        - name: cobraIsActive
          in: query
          required: false
          schema:
            type: string
        - name: cobraStatus
          in: query
          required: false
          schema:
            type: string
        - name: dateOfCobraEvent
          in: query
          description: >-
            Used to find date of COBRA event less than, greater than, equal to,
            or between passed date(s)
          required: false
          schema:
            type: string
        - name: dateTimeCreated
          in: query
          description: >-
            Used to find person record created less than, greater than, equal
            to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: dateTimeChanged
          in: query
          description: >-
            Used to find person record changed less than, greater than, equal
            to, or between passed date(s)
          required: false
          schema:
            type: string
        - name: nationalId
          in: query
          required: false
          schema:
            type: string
        - name: nationalIdCountry
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmpPersonDetails'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/person-details/{employeeId}:
    get:
      summary: Get a single person detail record
      description: >
        Get a single person detail record. 

        If no pagination parameters specified, the default/max is applied. 

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Person Details" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows: 

        <ul> 

        <li>less than (=<) 
          <ul> 
          <li>Example: /person-details/{employeeId}?dateTimeCreated=<01-01-1900</li> 
          </ul> 
          </li>
        <li>greater than (=>) 
          <ul> 
          <li>Example: /person-details/{employeeId}?dateTimeCreated=>01-01-1900</li>
          </ul> 
          </li>
        <li>equal to (=) 
          <ul>
          <li>Example: /person-details/{employeeId}?dateTimeCreated=01-01-1900</li> 
          </ul>
          </li>
        <li>between (={minimum date,maximum date}) 
          <ul>
          <li>Example: /person-details/{employeeId}?dateTimeCreated={01-01-1900,01-01-1901}</li> 
          </ul> 
          </li>
        </ul>
      tags:
        - PersonDetails
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpPersonDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpPersonDetails'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpPersonDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpPersonDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpPersonDetails'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /services/payroll/v1/import-pay-items/earnings:
    post:
      tags:
        - earnings
      summary: Add UKG Pro time clock data
      security:
        - basicAuth: []
      parameters:
        - name: X-Correlation-Id
          in: header
          required: true
          schema:
            type: string
            format: uuid
        - name: US-Client-Id
          in: header
          required: true
          schema:
            type: string
        - name: US-Customer-Api-Key
          in: header
          required: true
          schema:
            type: string
        - in: query
          name: failAllOnRequest
          description: >-
            failAllOnRequest, evaluating this to true will cause the entire
            request to fail given any errors, otherwise valid earnings will be
            staged for import.
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                earnings:
                  type: array
                  items:
                    $ref: '#/components/schemas/Earning'
        description: Add earnings from WFM for the purpose of processing payroll.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success_count:
                    type: number
        '207':
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiStatusResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStatusResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /services/payroll/v1/import-pay-items/earnings/{refId}:
    delete:
      tags:
        - earnings
      security:
        - basicAuth: []
      summary: Delete a earning
      parameters:
        - name: X-Correlation-Id
          in: header
          required: true
          schema:
            type: string
            format: uuid
        - name: US-Client-Id
          in: header
          required: true
          schema:
            type: string
        - name: US-Customer-Api-Key
          in: header
          required: true
          schema:
            type: string
        - in: path
          name: refId
          required: true
          description: Earning unique Identifier for earning
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '404':
          description: Not Found
        '405':
          description: Method not allowed
    get:
      tags:
        - earnings
      summary: Get status details for specified earning
      security:
        - basicAuth: []
      parameters:
        - name: X-Correlation-Id
          in: header
          required: true
          schema:
            type: string
            format: uuid
        - name: US-Client-Id
          in: header
          required: true
          schema:
            type: string
        - name: US-Customer-Api-Key
          in: header
          required: true
          schema:
            type: string
        - in: path
          name: refId
          required: true
          description: Earning unique Identifier for earning
          schema:
            type: string
      responses:
        '200':
          description: Sucess
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningStatusResponse'
        '404':
          description: Not Found
  /configuration/v1/platform-configuration/custom-fields-schema:
    get:
      tags:
        - PlatformConfigurationCustomFieldsSchema
      summary: Gets Platform Configuration standard classes custom fields schema
      description: >-
        Gets Platform Configuration standard classes custom fields schema info
        from the MetaDocument table. <br /> UKG Pro service account must have
        "View" role for the "Company Configuration Integration" Web Service.
      operationId: PcSchema_GetFieldsSchema
      parameters:
        - name: className
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Configuration.PlatformConfiguration.Models.PcFieldSchema
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Configuration.PlatformConfiguration.Models.PcFieldSchema
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Configuration.PlatformConfiguration.Models.PcFieldSchema
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Configuration.PlatformConfiguration.Models.PcFieldSchema
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Configuration.PlatformConfiguration.Models.PcFieldSchema
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/position-report:
    get:
      tags:
        - PositionReport
      summary: Get Position Report
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).  
      operationId: PositionReport_Get
      parameters:
        - name: positionCode
          in: query
          required: false
          schema:
            type: string
        - name: reportsToPositionCode
          in: query
          required: false
          schema:
            type: string
        - name: effectiveStartDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: effectiveStopDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PositionReport'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PositionReport'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PositionReport'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PositionReport'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PositionReport'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /configuration/v1/positions:
    get:
      tags:
        - Positions
      summary: >-
        Returns list of employee position information filtered on various
        parameters
      description: |
        If no pagination parameters specified, the default/max is applied.
          Permissions - UKG Pro service account must have "View" role for the "Company Configuration Integration" Api endpoints. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}).</br></br>
          
           
           /configuration/v1/position endpoint can take following optional parameter:
          <ul>
            <li>
            companyId :- Can take in multiple IDs separated by comma. ex: [id1, id2]
            </li>
            <li>
            employeeType :- Can take in multiple IDs separated by comma. ex: [id1, id2]
            </li>
            <li>
            payGroupCode :- Can take in multiple IDs separated by comma. ex: [id1, id2]
            </li>
            <li>
            statusCode :- Can take in multiple IDs separated by comma. ex: [id1, id2]
            </li>
            <li>
            positionCode :- Can take in multiple IDs separated by comma. ex: [id1, id2]
            </li>
             <li>
            projectCode :- Can take in multiple IDs separated by comma. ex: [id1, id2]
            </li>
              <li>
            shiftGroupCode :- Can take in multiple IDs separated by comma. ex: [id1, id2]
            </li>
            <li>
            isProrated 
            </li>
            <li>
            isApproved 
            </li>
             <li>
            isEligibleForBenefits
          </li>
         <ul><br/>
         
         Correct syntax when using parameters are as follows: 
          <ul> 
            <li>Get positions without parameter
            <ul> 
            <li>Example: /configuration/v1/positions 
            </ul> 
            </li>
            <li>Get positions by single companyid 
            <ul> 
            <li>Example: /configuration/v1/positions?companyid={companyid}</li>
            </ul> 
            </li>
          <li>Get positions by multiple companyid 
            <ul> 
            <li>Example: /configuration/v1/positions?companyid=[companyid1,companyid2]</li>
            </ul> 
            </li>
            <li>Get positions by positionsCode
            <ul> 
            <li>Example: configuration/v1/positions?positionCode={positionCode}</li>
            </ul> 
            </li>
            <li>Get positions by isEligibleForBenefits 
            <ul> 
            <li>Example: configuration/v1/positions?isEligibleForBenefits={isEligibleForBenefit}</li>
            </ul> 
            </li>
            <li>Get positions by employeeType 
            <ul> 
            <li>Example: configuration/v1/positions?employeeType={employeeType}</li>
            </ul> 
            </li>
            <li>Get positions by statusCode 
            <ul> 
            <li>Example: configuration/v1/positions?statusCode={statusCode}</li>
            </ul> 
            </li>
            <li>Get positions by shiftGroupCode 
            <ul> 
            <li>Example: configuration/v1/positions?shiftGrouptCode={shiftGrouptCode}</li>
            </ul> 
            </li>
             <li>Get positions by using all parameter 
            <ul> 
            <li>Example: configuration/v1/positions?isApproved={isApproved}&employeeType={employeeType}&shiftGroupCode={shiftGroupCode}&isEligibleForBenefits={isEligibleForBenefits}&isProrated={isProrated}&statusCode={statusCode}&payGroupCode={payGroup}&positionCode={positionCode}&projectCode={projectCode}&companyId={companyId}&page={page}&per_Page={per_Page}</li>
            </ul> 
            </li>
          
          </ul>
         
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeType
          in: query
          required: false
          schema:
            type: string
        - name: statusCode
          in: query
          required: false
          schema:
            type: string
        - name: payGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: positionCode
          in: query
          required: false
          schema:
            type: string
        - name: projectCode
          in: query
          required: false
          schema:
            type: string
        - name: shiftGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: isProrated
          in: query
          required: false
          schema:
            type: boolean
        - name: isApproved
          in: query
          required: false
          schema:
            type: boolean
        - name: isEligibleForBenefits
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Positions'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Positions'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Positions'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Positions'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Positions'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/pto-plans:
    get:
      summary: Get all pto-plans
      description: >
        Returns information about an UltiPro employees PTO Plans. Permissions -
        Ultipro service account must have "View" role for the "PTO Plan
        Integration" Web Service. Headers - US-Customer-Api-Key, Authorization
        (base64 encoded {username}:{password}).
      parameters:
        - name: page
          in: query
          description: Pagination, which page you want to see
          required: false
          schema:
            type: number
        - name: per_page
          in: query
          description: Pagination, how many records per page you want to see
          required: false
          schema:
            type: number
            minLength: 1
            maxLength: 200
      tags:
        - Get All PTO Plans
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pto-plans'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pto-plans'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
    post:
      summary: Create A PTO Plan
      description: >
        Creates a new UltiPro PTO plan record. Array of objects is permitted for
        multi-records support. Work Flow or Approvers is not supported.
        Permissions - Ultipro service account must have "Add" role for the "PTO
        Plan Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pto-plans-body'
        description: The pto-plan to be written
        required: true
      tags:
        - PTO Plan Post
      responses:
        '207':
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiStatusResponse'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/MultiStatusResponse'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /personnel/v1/companies/{companyId}/employees/{employeeId}/pto-plans/{ptoPlan}:
    patch:
      summary: Patch one PTO Plan
      description: >
        Allows the ability to update one PTO Plan for an employee. Work Flow or
        Approvers is not supported. Permissions - Ultipro service account must
        have "Edit" role for the "PTO Plan Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - name: companyId
          in: path
          description: Company Identifier
          required: true
          schema:
            type: string
        - name: employeeId
          in: path
          description: Employee Identifier
          required: true
          schema:
            type: string
        - name: ptoPlan
          in: path
          description: PTO Plan Identifier
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pto-plans'
        description: The pto-plan to be written
        required: true
      tags:
        - PTO Plan Patch
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pto-plans'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/pto-plans'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
    get:
      summary: Get a specific pto-plan
      description: >
        Returns information about an UltiPro employees PTO Plans. Work flow or
        Approvers is not supported. Permissions - Ultipro service account must
        have "View" role for the "PTO Plan Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - name: companyId
          in: path
          description: Company Identifier
          required: true
          schema:
            type: string
        - name: employeeId
          in: path
          description: Employee Identifier
          required: true
          schema:
            type: string
        - name: ptoPlan
          in: path
          description: PTO Plan Identifier
          required: true
          schema:
            type: string
      tags:
        - Get Specific PTO Plan
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pto-plans'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pto-plans'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /personnel/v1/companies/{companyId}/employees/{employeeId}/pto-plans:
    get:
      summary: Get a specific employees pto-plans
      description: >
        Returns information about an UltiPro employees PTO Plans. Permissions -
        Ultipro service account must have "View" role for the "PTO Plan
        Integration" Web Service. Headers - US-Customer-Api-Key, Authorization
        (base64 encoded {username}:{password}).
      parameters:
        - name: companyId
          in: path
          description: Company Identifier
          required: true
          schema:
            type: string
        - name: employeeId
          in: path
          description: Employee Identifier
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Pagination, which page you want to see
          required: false
          schema:
            type: number
        - name: per_page
          in: query
          description: Pagination, how many records per page you want to see
          required: false
          schema:
            type: number
            minLength: 1
            maxLength: 200
      tags:
        - Get Specific Employees PTO Plans
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pto-plans'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pto-plans'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /configuration/v1/roles:
    get:
      tags:
        - RolesGet
      summary: Gets Roles from security roles table
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have \"View\" role for the
        \"Company Configuration Integration\" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - name: rolName
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roles'
            text/json:
              schema:
                $ref: '#/components/schemas/Roles'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Roles'
            application/xml:
              schema:
                $ref: '#/components/schemas/Roles'
            text/xml:
              schema:
                $ref: '#/components/schemas/Roles'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /configuration/v1/shift-codes:
    get:
      tags:
        - ShiftCode
      summary: Shift Codes API Data
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have \"View\" role for the
        \"Company Configuration Integration\" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShiftCode_GetList'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShiftCode_GetList'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShiftCode_GetList'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShiftCode_GetList'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShiftCode_GetList'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '429':
          description: '429'
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /configuration/v1/tax-groups:
    get:
      tags:
        - Tax Groups
      summary: Get all tax group details
      description: >-
        taxCalcGroupIdCode optional parameter can take in multiple IDs separated
        by comma. ex: [id1, id2] and taxGroupIsInactive is also optional.
        Permissions - UKG Pro service account must have 'View' role for the
        'Company Configuration Integration' Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password})
      parameters:
        - name: taxCalcGroupIdCode
          in: query
          required: false
          schema:
            type: string
        - name: taxGroupIsInactive
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxGroupsDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxGroupsDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxGroupsDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxGroupsDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxGroupsDetails'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '429':
          description: '429'
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /talent/recruiting/v2/third-party-job-board-integrations/{integrationId}/postings:
    get:
      summary: Get job postings
      description: >
        The Job Postings API returns detailed information about jobs in UltiPro
        Recruiting such as title, description, compensation, available
        locations, company, talent factors like skills, work experience,
        education, licenses, behaviors and motivations, the published date, and
        the url to the job on UltiPro's Recruiting. Consumers should iterate
        through the pages until no more records are returned. 


        The "company" property contains "name" and "doing_business_as", if the
        company name needs to be publicly exposed, the "doing_business_as" name
        should be used. Some properties may have several translations available,
        the possible language codes are: en_us, en_gb, es_es, fr_ca, de_de, and
        pr_br.
      parameters:
        - name: integrationId
          in: path
          description: >
            A unique integration id provided by Ultimate Software to the Partner
            during the integration registration process.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Pagination page number
          required: false
          schema:
            type: number
        - name: per_page
          in: query
          description: Pagination amount of records per page to display
          required: false
          schema:
            type: number
            default: 30
        - name: Accept
          in: header
          description: |
            What content type will the client accept. Valid content types are:
                - application/json
                - application/xml
                - application/vnd.ultimatesoftware+json
                - application/vnd.ultimatesoftware+xml
          schema:
            type: string
            default: application/json
      tags:
        - Get Job Postings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postings'
            application/xml:
              schema:
                $ref: '#/components/schemas/postings'
            application/vnd.ultimatesoftware+json:
              schema:
                $ref: '#/components/schemas/postings'
            application/vnd.ultimatesoftware+xml:
              schema:
                $ref: '#/components/schemas/postings'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /personnel/v1/user-details:
    get:
      tags:
        - UserDetails
      summary: Get User Details
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})  
      operationId: UserDetails_GetUserDetails
      parameters:
        - name: userName
          in: query
          required: false
          schema:
            type: string
        - name: userStatus
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDetails'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/user-preferences:
    get:
      tags:
        - User Preferences
      summary: Get User Preferences Details
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have \"View\" role for the
        \"Personnel Integration\" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: userID
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPreferencesDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPreferencesDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPreferencesDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPreferencesDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPreferencesDetails'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /simpleschedule/activities:
    get:
      tags:
        - Activities
      summary: Obtains all activities.
      description: Obtains all activities.
      operationId: getActivities
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoActivityDto'
  /simpleschedule/assigned_holidays:
    get:
      tags:
        - Assigned Holidays
      summary: Obtains all assigned holidays.
      description: >-
        Obtains all assigned holidays for a given employee.  Employee can be
        specified by their emp_name or emp_id.  At least one parameter must be
        specified.
      operationId: getAssignedHolidays
      parameters:
        - name: emp_name
          in: query
          required: false
          schema:
            type: string
        - name: emp_id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: from
          in: query
          description: Start range for holidays
          required: true
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: End range for holidays
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoHolidayDto'
  /simpleschedule/employee_jobs:
    get:
      tags:
        - Employee Jobs
      summary: Obtains all jobs for an employee.
      description: >-
        Obtains all jobs for an employee.  Employee can be specified by their
        emp_name or emp_id.  At least one parameter must be specified.
      operationId: getEmployeeJobs
      parameters:
        - name: emp_name
          in: query
          required: false
          schema:
            type: string
        - name: emp_id
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoEmployeeJobDto'
  /simpleschedule/employees:
    get:
      tags:
        - Employees
      summary: Obtains all employees.
      description: Obtains all employees which have been setup for scheduling.
      operationId: getEmployees
      parameters:
        - name: index
          in: query
          description: Index when paging is to be used.
          required: false
          schema:
            type: integer
            format: int32
        - name: max
          in: query
          description: Max elements per page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoEmployeeDto'
  /simpleschedule/hour_types:
    get:
      tags:
        - Hour Types
      summary: Obtains all hour types.
      description: Obtains all hour types.
      operationId: getHourTypes
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoHourTypeDto'
  /simpleschedule/schedule_details:
    put:
      tags:
        - Schedule Details
      summary: Publish schedule details.
      description: >-
        Publish schedule details. Returns a multi-status messages based on
        detail validation.
      operationId: putScheduleDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishScheduleDetailDto'
      responses:
        '207':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MultiStatusDtoScheduleModelStateDto'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatusDto'
  /simpleschedule/teams:
    get:
      tags:
        - Teams
      summary: Obtains all teams.
      description: Obtains all teams.
      operationId: getTeams
      parameters:
        - name: index
          in: query
          description: Index when paging is to be used.
          required: false
          schema:
            type: integer
            format: int32
        - name: max
          in: query
          description: Max elements per page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoWorkbrainTeamDto'
  /simpleschedule/time_codes:
    get:
      tags:
        - Time Codes
      summary: Obtains all time codes.
      description: Obtains all time codes.
      operationId: getTimeCodes
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoTimeCodeDto'
  /simpleschedule/timeoff_requests:
    get:
      tags:
        - Time Off Requests
      summary: Obtains all time off requests.
      description: Obtains all time off requests between the specified range.
      operationId: getTimeOffRequests
      parameters:
        - name: emp_name
          in: query
          required: false
          schema:
            type: string
        - name: emp_id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: from
          in: query
          description: Start range for requests
          required: true
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: End range for requests
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoTimeOffRequestDto'
  /simpleschedule/{coid}/employees/{eeid}:
    get:
      tags:
        - UTA Employee
      summary: Obtains a UTA Employee by coId and eeId.
      parameters:
        - in: path
          name: coid
          required: true
          description: coid of employee.
          schema:
            type: string
        - in: path
          name: eeid
          required: true
          description: eeid of employee.
          schema:
            type: string
      responses:
        '200':
          description: successful operation.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultDtoEmployeeDto'
  /allergy/:
    get:
      summary: Retrieve all allergy configurations
      description: >
        'The allergy endpoint returns information about the UKG Pro allergy
        configurations.'
      operationId: getAllergyList
      tags:
        - allergy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new allergy configuration
      description: |
        'Creates a new UKG Pro allergy configuration.'
      operationId: postAllergy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The allergy code to be written.
        required: true
      tags:
        - allergy
      responses:
        '200':
          description: The allergy provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /allergy/{code}:
    put:
      summary: Update a single allergy configuration
      description: |
        'Allows the ability update a single allergy configuration.'
      operationId: putAllergy
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - allergy
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /awardType/:
    get:
      summary: Retrieve all awardType configurations
      description: >
        'The awardType endpoint returns information about the UKG Pro awardType
        configurations.'
      operationId: getawardTypeList
      tags:
        - awardType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new awardType configuration
      description: |
        'Creates a new UKG Pro awardType configuration.'
      operationId: postawardType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The awardType code to be written.
        required: true
      tags:
        - awardType
      responses:
        '200':
          description: The awardType provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /awardType/{code}:
    put:
      summary: Update a single awardType configuration
      description: |
        'Allows the ability update a single awardType configuration.'
      operationId: putawardType
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - awardType
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /careerProvider/:
    get:
      summary: Retrieve all careerProvider configurations
      description: >
        'The careerProvider endpoint returns information about the UKG Pro
        careerProvider configurations.'
      operationId: getcareerProviderList
      tags:
        - careerProvider
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new careerProvider configuration
      description: |
        'Creates a new UKG Pro careerProvider configuration.'
      operationId: postcareerProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The careerProvider code to be written.
        required: true
      tags:
        - careerProvider
      responses:
        '200':
          description: The careerProvider provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /careerProvider/{code}:
    put:
      summary: Update a single careerProvider configuration
      description: |
        'Allows the ability update a single careerProvider configuration.'
      operationId: putcareerProvider
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - careerProvider
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /childSupportType/:
    get:
      summary: Retrieve all childSupportType configurations
      description: >
        'The childSupportType endpoint returns information about the UKG Pro
        childSupportType configurations.'
      operationId: getchildSupportTypeList
      tags:
        - childSupportType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new childSupportType configuration
      description: |
        'Creates a new UKG Pro childSupportType configuration.'
      operationId: postchildSupportType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The childSupportType code to be written.
        required: true
      tags:
        - childSupportType
      responses:
        '200':
          description: The childSupportType provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /childSupportType/{code}:
    put:
      summary: Update a single childSupportType configuration
      description: |
        'Allows the ability update a single childSupportType configuration.'
      operationId: putchildSupportType
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - childSupportType
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /cobraStatus/:
    get:
      summary: Retrieve all cobraStatus configurations
      description: >
        'The cobraStatus endpoint returns information about the UKG Pro
        cobraStatus configurations.'
      operationId: getcobraStatusList
      tags:
        - cobraStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new cobraStatus configuration
      description: |
        'Creates a new UKG Pro cobraStatus configuration.'
      operationId: postcobraStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The cobraStatus code to be written.
        required: true
      tags:
        - cobraStatus
      responses:
        '200':
          description: The cobraStatus provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /cobraStatus/{code}:
    put:
      summary: Update a single cobraStatus configuration
      description: |
        'Allows the ability update a single cobraStatus configuration.'
      operationId: putcobraStatus
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - cobraStatus
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /companyProperty/:
    get:
      summary: Retrieve all companyProperty configurations
      description: >
        'The companyProperty endpoint returns information about the UKG Pro
        companyProperty configurations.'
      operationId: getcompanyPropertyList
      tags:
        - companyProperty
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new companyProperty configuration
      description: |
        'Creates a new UKG Pro companyProperty configuration.'
      operationId: postcompanyProperty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The companyProperty code to be written.
        required: true
      tags:
        - companyProperty
      responses:
        '200':
          description: The companyProperty provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /companyProperty/{code}:
    put:
      summary: Update a single companyProperty configuration
      description: |
        'Allows the ability update a single companyProperty configuration.'
      operationId: putcompanyProperty
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - companyProperty
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /courseCategory/:
    get:
      summary: Retrieve all courseCategory configurations
      description: >
        'The courseCategory endpoint returns information about the UKG Pro
        courseCategory configurations.'
      operationId: getcourseCategoryList
      tags:
        - courseCategory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new courseCategory configuration
      description: |
        'Creates a new UKG Pro courseCategory configuration.'
      operationId: postcourseCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The courseCategory code to be written.
        required: true
      tags:
        - courseCategory
      responses:
        '200':
          description: The courseCategory provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /courseCategory/{code}:
    put:
      summary: Update a single courseCategory configuration
      description: |
        'Allows the ability update a single courseCategory configuration.'
      operationId: putcourseCategory
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - courseCategory
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /courseDeliveryMet/:
    get:
      summary: Retrieve all courseDeliveryMet configurations
      description: >
        'The courseDeliveryMet endpoint returns information about the UKG Pro
        courseDeliveryMet configurations.'
      operationId: getcourseDeliveryMetList
      tags:
        - courseDeliveryMet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new courseDeliveryMet configuration
      description: |
        'Creates a new UKG Pro courseDeliveryMet configuration.'
      operationId: postcourseDeliveryMet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The courseDeliveryMet code to be written.
        required: true
      tags:
        - courseDeliveryMet
      responses:
        '200':
          description: The courseDeliveryMet provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /courseDeliveryMet/{code}:
    put:
      summary: Update a single courseDeliveryMet configuration
      description: |
        'Allows the ability update a single courseDeliveryMet configuration.'
      operationId: putcourseDeliveryMet
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - courseDeliveryMet
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /courseSubCategory/:
    get:
      summary: Retrieve all courseSubCategory configurations
      description: >
        'The courseSubCategory endpoint returns information about the UKG Pro
        courseSubCategory configurations.'
      operationId: getcourseSubCategoryList
      tags:
        - courseSubCategory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new courseSubCategory configuration
      description: |
        'Creates a new UKG Pro courseSubCategory configuration.'
      operationId: postcourseSubCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The courseSubCategory code to be written.
        required: true
      tags:
        - courseSubCategory
      responses:
        '200':
          description: The courseSubCategory provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /courseSubCategory/{code}:
    put:
      summary: Update a single courseSubCategory configuration
      description: |
        'Allows the ability update a single courseSubCategory configuration.'
      operationId: putcourseSubCategory
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - courseSubCategory
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /disability/:
    get:
      summary: Retrieve all disability configurations
      description: >
        'The disability endpoint returns information about the UKG Pro
        disability configurations.'
      operationId: getdisabilityList
      tags:
        - disability
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new disability configuration
      description: |
        'Creates a new UKG Pro disability configuration.'
      operationId: postdisability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The disability code to be written.
        required: true
      tags:
        - disability
      responses:
        '200':
          description: The disability provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /disability/{code}:
    put:
      summary: Update a single disability configuration
      description: |
        'Allows the ability update a single disability configuration.'
      operationId: putdisability
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - disability
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /employeeType/:
    get:
      summary: Retrieve all employeeType configurations
      description: >
        'The employeeType endpoint returns information about the UKG Pro
        employeeType configurations.'
      operationId: getemployeeTypeList
      tags:
        - employeeType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new employeeType configuration
      description: |
        'Creates a new UKG Pro employeeType configuration.'
      operationId: postemployeeType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The employeeType code to be written.
        required: true
      tags:
        - employeeType
      responses:
        '200':
          description: The employeeType provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /employeeType/{code}:
    put:
      summary: Update a single employeeType configuration
      description: |
        'Allows the ability update a single employeeType configuration.'
      operationId: putemployeeType
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - employeeType
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /jobFamily/:
    get:
      summary: Retrieve all jobFamily configurations
      description: >
        'The jobFamily endpoint returns information about the UKG Pro jobFamily
        configurations.'
      operationId: getjobFamilyList
      tags:
        - jobFamily
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new jobFamily configuration
      description: |
        'Creates a new UKG Pro jobFamily configuration.'
      operationId: postjobFamily
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The jobFamily code to be written.
        required: true
      tags:
        - jobFamily
      responses:
        '200':
          description: The jobFamily provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /jobFamily/{code}:
    put:
      summary: Update a single jobFamily configuration
      description: |
        'Allows the ability update a single jobFamily configuration.'
      operationId: putjobFamily
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - jobFamily
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /licenseType/:
    get:
      summary: Retrieve all licenseType configurations
      description: >
        'The licenseType endpoint returns information about the UKG Pro
        licenseType configurations.'
      operationId: getlicenseTypeList
      tags:
        - licenseType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new licenseType configuration
      description: |
        'Creates a new UKG Pro licenseType configuration.'
      operationId: postlicenseType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The licenseType code to be written.
        required: true
      tags:
        - licenseType
      responses:
        '200':
          description: The licenseType provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /licenseType/{code}:
    put:
      summary: Update a single licenseType configuration
      description: |
        'Allows the ability update a single licenseType configuration.'
      operationId: putlicenseType
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - licenseType
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /loanType/:
    get:
      summary: Retrieve all loanType configurations
      description: >
        'The loanType endpoint returns information about the UKG Pro loanType
        configurations.'
      operationId: getloanTypeList
      tags:
        - loanType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new loanType configuration
      description: |
        'Creates a new UKG Pro loanType configuration.'
      operationId: postloanType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The loanType code to be written.
        required: true
      tags:
        - loanType
      responses:
        '200':
          description: The loanType provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /loanType/{code}:
    put:
      summary: Update a single loanType configuration
      description: |
        'Allows the ability update a single loanType configuration.'
      operationId: putloanType
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - loanType
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /maritalStatus/:
    get:
      summary: Retrieve all maritalStatus configurations
      description: >
        'The maritalStatus endpoint returns information about the UKG Pro
        maritalStatus configurations.'
      operationId: getmaritalStatusList
      tags:
        - maritalStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new maritalStatus configuration
      description: |
        'Creates a new UKG Pro maritalStatus configuration.'
      operationId: postmaritalStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The maritalStatus code to be written.
        required: true
      tags:
        - maritalStatus
      responses:
        '200':
          description: The maritalStatus provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /maritalStatus/{code}:
    put:
      summary: Update a single maritalStatus configuration
      description: |
        'Allows the ability update a single maritalStatus configuration.'
      operationId: putmaritalStatus
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - maritalStatus
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /militaryBranches/:
    get:
      summary: Retrieve all militaryBranches configurations
      description: >
        'The militaryBranches endpoint returns information about the UKG Pro
        militaryBranches configurations.'
      operationId: getmilitaryBranchesList
      tags:
        - militaryBranches
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new militaryBranches configuration
      description: |
        'Creates a new UKG Pro militaryBranches configuration.'
      operationId: postmilitaryBranches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The militaryBranches code to be written.
        required: true
      tags:
        - militaryBranches
      responses:
        '200':
          description: The militaryBranches provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /militaryBranches/{code}:
    put:
      summary: Update a single militaryBranches configuration
      description: |
        'Allows the ability update a single militaryBranches configuration.'
      operationId: putmilitaryBranches
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - militaryBranches
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /militaryEra/:
    get:
      summary: Retrieve all militaryEra configurations
      description: >
        'The militaryEra endpoint returns information about the UKG Pro
        militaryEra configurations.'
      operationId: getmilitaryEraList
      tags:
        - militaryEra
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new militaryEra configuration
      description: |
        'Creates a new UKG Pro militaryEra configuration.'
      operationId: postmilitaryEra
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The militaryEra code to be written.
        required: true
      tags:
        - militaryEra
      responses:
        '200':
          description: The militaryEra provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /militaryEra/{code}:
    put:
      summary: Update a single militaryEra configuration
      description: |
        'Allows the ability update a single militaryEra configuration.'
      operationId: putmilitaryEra
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - militaryEra
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /namePrefix/:
    get:
      summary: Retrieve all namePrefix configurations
      description: >
        'The namePrefix endpoint returns information about the UKG Pro
        namePrefix configurations.'
      operationId: getnamePrefixList
      tags:
        - namePrefix
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new namePrefix configuration
      description: |
        'Creates a new UKG Pro namePrefix configuration.'
      operationId: postnamePrefix
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The namePrefix code to be written.
        required: true
      tags:
        - namePrefix
      responses:
        '200':
          description: The namePrefix provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /namePrefix/{code}:
    put:
      summary: Update a single namePrefix configuration
      description: |
        'Allows the ability update a single namePrefix configuration.'
      operationId: putnamePrefix
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - namePrefix
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /otherPhoneTypes/:
    get:
      summary: Retrieve all otherPhoneTypes configurations
      description: >
        'The otherPhoneTypes endpoint returns information about the UKG Pro
        otherPhoneTypes configurations.'
      operationId: getotherPhoneTypesList
      tags:
        - otherPhoneTypes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new otherPhoneTypes configuration
      description: |
        'Creates a new UKG Pro otherPhoneTypes configuration.'
      operationId: postotherPhoneTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The otherPhoneTypes code to be written.
        required: true
      tags:
        - otherPhoneTypes
      responses:
        '200':
          description: The otherPhoneTypes provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /otherPhoneTypes/{code}:
    put:
      summary: Update a single otherPhoneTypes configuration
      description: |
        'Allows the ability update a single otherPhoneTypes configuration.'
      operationId: putotherPhoneTypes
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - otherPhoneTypes
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /project/:
    get:
      summary: Retrieve all Project configurations
      description: >
        'The Project endpoint returns information about the UKG Pro Project
        configurations.'
      operationId: getProjectList
      tags:
        - project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new project configuration
      description: |
        'Creates a new UKG Pro project configuration.'
      operationId: postProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The project code to be written.
        required: true
      tags:
        - project
      responses:
        '200':
          description: The project provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /project/{code}:
    put:
      summary: Update a single project configuration
      description: |
        'Allows the ability update a single project configuration.'
      operationId: putProject
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - project
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /school/:
    get:
      summary: Retrieve all school configurations
      description: >
        'The school endpoint returns information about the UKG Pro school
        configurations.'
      operationId: getschoolList
      tags:
        - school
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new school configuration
      description: |
        'Creates a new UKG Pro school configuration.'
      operationId: postschool
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The school code to be written.
        required: true
      tags:
        - school
      responses:
        '200':
          description: The school provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /school/{code}:
    put:
      summary: Update a single school configuration
      description: |
        'Allows the ability update a single school configuration.'
      operationId: putschool
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - school
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /skillProficiencyLevel/:
    get:
      summary: Retrieve all skillProficiencyLevel configurations
      description: >
        'The skillProficiencyLevel endpoint returns information about the UKG
        Pro skillProficiencyLevel configurations.'
      operationId: getskillProficiencyLevelList
      tags:
        - skillProficiencyLevel
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new skillProficiencyLevel configuration
      description: |
        'Creates a new UKG Pro skillProficiencyLevel configuration.'
      operationId: postskillProficiencyLevel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The skillProficiencyLevel code to be written.
        required: true
      tags:
        - skillProficiencyLevel
      responses:
        '200':
          description: The skillProficiencyLevel provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /skillProficiencyLevel/{code}:
    put:
      summary: Update a single skillProficiencyLevel configuration
      description: >
        'Allows the ability update a single skillProficiencyLevel
        configuration.'
      operationId: putskillProficiencyLevel
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - skillProficiencyLevel
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /skills/:
    get:
      summary: Retrieve all skills configurations
      description: >
        'The skills endpoint returns information about the UKG Pro skills
        configurations.'
      operationId: getskillsList
      tags:
        - skills
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new skills configuration
      description: |
        'Creates a new UKG Pro skills configuration.'
      operationId: postskills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The skills code to be written.
        required: true
      tags:
        - skills
      responses:
        '200':
          description: The skills provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /skills/{code}:
    put:
      summary: Update a single skills configuration
      description: |
        'Allows the ability update a single skills configuration.'
      operationId: putskills
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - skills
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /termType/:
    get:
      summary: Retrieve all termType configurations
      description: >
        'The termType endpoint returns information about the UKG Pro termType
        configurations.'
      operationId: gettermTypeList
      tags:
        - termType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new termType configuration
      description: |
        'Creates a new UKG Pro termType configuration.'
      operationId: posttermType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The termType code to be written.
        required: true
      tags:
        - termType
      responses:
        '200':
          description: The termType provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /termType/{code}:
    put:
      summary: Update a single termType configuration
      description: |
        'Allows the ability update a single termType configuration.'
      operationId: puttermType
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - termType
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /waiveReason/:
    get:
      summary: Retrieve all waiveReason configurations
      description: >
        'The waiveReason endpoint returns information about the UKG Pro
        waiveReason configurations.'
      operationId: getwaiveReasonList
      tags:
        - waiveReason
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/codeObject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      summary: Create a new waiveReason configuration
      description: |
        'Creates a new UKG Pro waiveReason configuration.'
      operationId: postwaiveReason
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        description: The waiveReason code to be written.
        required: true
      tags:
        - waiveReason
      responses:
        '200':
          description: The waiveReason provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /waiveReason/{code}:
    put:
      summary: Update a single waiveReason configuration
      description: |
        'Allows the ability update a single waiveReason configuration.'
      operationId: putwaiveReason
      parameters:
        - name: code
          in: path
          description: Project code.
          required: true
          schema:
            type: string
      tags:
        - waiveReason
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /personnel/v1/user-profile-details:
    get:
      tags:
        - User Profile Details
      summary: Get all user profile details
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have \"View\" role for the
        \"Personnel Integration\" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: masterCompany
          in: query
          required: false
          schema:
            type: string
        - name: userStatus
          in: query
          required: false
          schema:
            type: string
        - name: userId
          in: query
          required: false
          schema:
            type: string
        - name: roleId
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileDetails'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileDetails'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileDetails'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileDetails'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileDetails'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '429':
          description: '429'
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /time/clock_transactions:
    get:
      tags:
        - time
      summary: Get processed clock transactions.
      description: Obtain all processed clock transactions for a given date.
      operationId: getClockTransactions
      parameters:
        - name: emp_name
          in: query
          description: >-
            Employee can be specified by their emp_name or emp_id.  At least one
            parameter must be specified.
          required: false
          schema:
            type: string
        - name: emp_id
          in: query
          description: >-
            Employee can be specified by their emp_name or emp_id.  At least one
            parameter must be specified.
          required: false
          schema:
            type: integer
            format: int64
        - name: date
          in: query
          description: Date of clock transaction
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoClockTransactionDto'
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
  /time/pending_clock_transactions:
    get:
      tags:
        - time
      summary: Get pending clock transactions.
      description: Obtain all pending clock transactions.
      operationId: getClockPendingTransactions
      parameters:
        - name: emp_name
          in: query
          description: >-
            Employee can be specified by their emp_name or emp_id.  At least one
            parameter must be specified.
          required: false
          schema:
            type: string
        - name: emp_id
          in: query
          description: >-
            Employee can be specified by their emp_name or emp_id.  At least one
            parameter must be specified.
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoClockTransactionDto'
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
  /time/work_summaries:
    get:
      tags:
        - time
      summary: Obtain work summaries.
      description: Obtain work summaries between the provided date range.
      operationId: getWorkSummaries
      parameters:
        - name: emp_name
          in: query
          description: >-
            Employee can be specified by their emp_name or emp_id.  At least one
            parameter must be specified.
          required: false
          schema:
            type: string
        - name: emp_id
          in: query
          description: >-
            Employee can be specified by their emp_name or emp_id.  At least one
            parameter must be specified.
          required: false
          schema:
            type: integer
            format: int64
        - name: from
          in: query
          description: Start range for work summaries
          required: true
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: End range for work summaries
          required: true
          schema:
            type: string
            format: date-time
        - name: full
          in: query
          description: Specifies if both clock and work detail data should be loaded
          required: false
          schema:
            type: boolean
            default: false
        - name: authStatus
          in: query
          description: >-
            If specified will load only work summaries with Authorized status
            equal to true or false
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetDtoWorkSummaryDto'
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
  /time/work_summary:
    get:
      tags:
        - time
      summary: Obtain a work summary.
      description: >-
        Obtain a work summary by the specified id.  Will load a full work
        summary (includes clock and work detail information).
      operationId: getWorkSummary
      parameters:
        - name: workSummaryId
          in: query
          description: Work Summary id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkSummaryDto'
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
  /personnel/v1/user-defined-fields:
    get:
      summary: Get User Defined Fields
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})

        <ul> <li>CompanyId parameter can take in multiple company Ids

        separated by comma. ex: [ABC, DEF]</li> <li>EmployeeId parameter

        can take in multiple employee Ids separated by comma. ex: [ABC,

        DEF]</li> </ul>
      tags:
        - UserDefinedFields
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/companies/{companyId}/user-defined-fields:
    get:
      summary: Get User Defined Fields for single company
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})

        <ul> <li>CompanyId parameter can take in multiple company Ids

        separated by comma. ex: [ABC, DEF]</li> <li>EmployeeId parameter

        can take in multiple employee Ids separated by comma. ex: [ABC,

        DEF]</li> </ul>
      tags:
        - UserDefinedFields
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
  /personnel/v1/companies/{companyId}/employees/{employeeId}/user-defined-fields:
    get:
      summary: Get User Defined Fields for a single employee in a single company
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})

        <ul> <li>CompanyId parameter can take in multiple company Ids

        separated by comma. ex: [ABC, DEF]</li> <li>EmployeeId parameter

        can take in multiple employee Ids separated by comma. ex: [ABC,

        DEF]</li> </ul>
      tags:
        - UserDefinedFields
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDefinedFields'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/problem+json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            text/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
servers:
  - url: '{hostname}'
components:
  securitySchemes:
    basicAuth:
      type: apiKey
      name: US-CUSTOMER-API-KEY
      in: header
      scheme: basic
    basic:
      type: http
      name: US-CUSTOMER-API-KEY
      in: header
      description: Basic HTTP Authentication
      scheme: basic
    BasicAuth:
      type: http
      scheme: basic
    OauthSecurity:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://login-dev.ultipro.com/introspect
          tokenUrl: https://identity.mia.ucloud.int/t/ulticonnect/token
          scopes:
            recruiting.domain.third-party-job-board-integrations.auto-feed: Needed for all read requests
  schemas:
    AuditDetails:
      type: object
      properties:
        audDateTime:
          type: string
          format: date-time
        audKey1Label:
          type: string
        audKey2Label:
          type: string
        audKey3Label:
          type: string
        audKey1Value:
          type: string
        audKey2Value:
          type: string
        audKey3Value:
          type: string
        audTableName:
          type: string
        audFieldName:
          type: string
        audOldValue:
          type: string
        audNewValue:
          type: string
        audAction:
          type: string
        audSystemID:
          type: string
    BusinessRuleImportRequest:
      type: object
      properties:
        transaction:
          description: The XML Serialized transaction
          type: string
        uniqueFileName:
          description: An optionally provided unique file name
          type: string
    BusinessRuleFileUpload:
      type: object
      properties:
        dateTimeCreated:
          format: date-time
          type: string
        fileId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        fileName:
          type: string
    FileStatusModel:
      type: object
      properties:
        fileID:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        fileName:
          type: string
        fileNameUnique:
          type: string
        status:
          type: string
        fileProcessDate:
          format: date-time
          type: string
    BusinessRuleImportFileStagingStatus:
      type: object
      properties:
        stagingId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        fileProcessDate:
          format: date-time
          type: string
        serviceSubmittalDate:
          format: date-time
          type: string
        lastRepostDate:
          format: date-time
          type: string
        status:
          type: string
        transaction:
          type: string
        fileName:
          type: string
        messages:
          type: array
          items:
            $ref: '#/components/schemas/BusinessRuleImportMessage'
        childTransactionStatuses:
          type: array
          items:
            enum:
              - BusinessRuleImportFileStagingStatus object
            type: string
    BusinessRuleImportMessage:
      type: object
      properties:
        message:
          type: string
        severity:
          format: int32
          enum:
            - 0
            - 1
            - 2
            - 3
          type: integer
    BusinessRuleImportFileStaging:
      type: object
      properties:
        stagingId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        dateTimeCreated:
          format: date-time
          type: string
        fileName:
          type: string
    Output:
      type: object
      properties:
        candidate:
          type: object
          items:
            $ref: '#/components/schemas/candidate'
        application:
          type: object
          items:
            $ref: '#/components/schemas/application'
        opportunity:
          type: object
          items:
            $ref: '#/components/schemas/opportunity'
        creator:
          type: object
          items:
            $ref: '#/components/schemas/creator'
    candidate:
      type: object
      description: >-
        The section with details of a candidate whom the background check order
        is requested for
      properties:
        id:
          type: string
          description: >-
            The id of the candidate for whom the background check order has been
            requested.
        created_at:
          type: string
          description: The candidate creation date.
        creator.id:
          type: string
          description: The id of the person who has created the application.
        person_id:
          type: string
          description: The candidate id in the core HR system.
        integration:
          type: string
          description: >-
            The alternative user id that can be used in third-party vendors’
            integrations. Returned only for users with the “recruiter”,
            “hiring-manager”, or “recruiting-administrator” role.
        is_internal:
          type: string
          description: 'A flag indicating whether the candidate is an internal employee. '
        is_active:
          type: string
          description: >-
            A flag indicating whether the candidate is an active employee. Can
            only be specified when is_internal is true.
        is_willing_to_relocate:
          type: string
          description: 'A flag indicating whether the candidate is willing to relocate. '
        preferred_locale:
          type: object
          properties:
            id:
              type: string
              description: The id of the candidate’s preferred language.
            code:
              type: string
              description: |
                The preferred language code:
                en-US,

                en-GB,

                fr-CA,

                es-ES,

                pt-BR,

                de-DE,

                zh-CN
        name:
          type: object
          description: ''
          items:
            $ref: '#/components/schemas/name'
        contact_info:
          type: object
          items:
            $ref: '#/components/schemas/contact_info'
        skills:
          type: array
          description: An array containing candidate’s skills.
          items:
            $ref: '#/components/schemas/skill'
        work_experience:
          type: array
          items:
            $ref: '#/components/schemas/workexperience'
        educations:
          type: array
          items:
            $ref: '#/components/schemas/educations'
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/licenses'
        behaviors:
          type: array
          items:
            $ref: '#/components/schemas/behaviors'
        motivations:
          type: array
          items:
            $ref: '#/components/schemas/motivations'
        roles:
          type: array
          description: |-
            An array of  user roles associated with this candidate:

            recruiter

            hiring-manager

            onboarding-owner

            recruiting-administrator 
          items: {}
        hyperlinks:
          type: array
          items:
            $ref: '#/components/schemas/hyperlinks'
        updated_at:
          type: string
          description: The last updated date.
        org_units: {}
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
    application:
      type: object
      description: >-
        The section that contains details of an application which the background
        check order has been requested for
      properties:
        id:
          type: string
          description: The unique application id
        updated_at:
          type: string
          description: The application’s last updated date.
        creator:
          type: object
          properties:
            id:
              type: string
              description: 'The id of the person who has '
        candidate:
          type: object
          properties:
            id:
              type: string
              description: The id of the candidate who has applied to an opportunity.
            is_inrernal:
              type: boolean
              description: >-
                A flag indicating whether the candidate is an internal
                employee. 
            is_active:
              type: boolean
              description: >-
                A flag indicating whether the candidate is an active employee.
                Can only be specified when is_internal is true.
            name:
              type: object
              description: >-
                The candidate name section. Captured at the moment of
                application submission. May be different from the one in the
                Candidate section
              items:
                $ref: '#/components/schemas/name'
        opportunity:
          type: object
          properties:
            id:
              type: string
              description: The id of the opportunity that the candidate has applied for.
        job_board:
          type: object
          properties:
            id:
              type: string
              description: >-
                The id of the job board on which the opportunity has been
                published to.
        applicant_source:
          type: object
          properties:
            id:
              type: string
              description: >-
                The id of the application source where the candidate has learned
                about the opportunity.
            name:
              type: object
              description: The application source name
        job_posting:
          type: object
          description: ''
          properties:
            id:
              type: string
              description: >-
                The id of a third party job board posting which the applicant is
                applying from.
        available_start_date:
          type: string
          description: The date that the candidate is available to start.
        '':
          type: array
          description: >-
            The array of candidate answers to the opportunity screening
            questions
          items: {}
        screening_question_responses:
          type: array
          items:
            $ref: '#/components/schemas/screening_question_responses'
        country_question_responses:
          type: array
          items:
            $ref: '#/components/schemas/country_question_responses'
        applied_date:
          type: string
          description: The date on which the candidate applied.
        is_processed:
          type: boolean
          description: The flag indicating if the application has been processed
        hire_details:
          type: object
          description: ''
          properties:
            offer_date:
              type: string
              description: >-
                The date on which the offer was presented to a candidate for the
                specified application Must not be before 1/1/1881 or after
                12/31/2199 
            accept_date:
              type: string
              description: >-
                The date on which the offer was accepted by a candidate for the
                specified application Must not be before 1/1/1881 or after
                12/31/2199 
            hire_date:
              type: string
              description: >-
                The date on which the candidate is hired for the opportunity
                associated with the specified application Must not be before
                1/1/1881 or after 12/31/2199 
            start_date:
              type: string
              description: >-
                The date on which the candidate is set to start working Must not
                be before 1/1/1881 or after 12/31/2199 
            full_time_equivalent:
              type: string
              description: >-
                The full time equivalent of the hire (decimal) Must be greater
                than 0 and no more than 9999999999.9999
            compensation:
              type: object
              description: ''
              properties:
                is_fulltime:
                  type: string
                  description: >-
                    The flag indicating whether the applicant is full-time or
                    part-time.
                hours_per_week:
                  type: string
                  description: >-
                    The hours per week of the applicant Must not be less than 0
                    or greater than 999999999.99 
                is_salaried:
                  type: string
                  description: Whether the applicant is salary or hourly
                pay_rate:
                  type: string
                  description: >-
                    The USD pay rate for the applicant If supplied, must not be
                    less than 0, greater than 99999999999999.9999, or have a
                    decimal with more than 4 digits 
                currency:
                  type: object
                  properties:
                    code:
                      type: string
                      description: >-
                        Pay rate currency code. For USA it must be USD, for
                        Canada it must be CAD and for any other country it can
                        be either USD or CAD. If not provided it defaults to USD
                        for all countries except it is CAD for Canada.
            company:
              type: object
              description: ''
              properties:
                id:
                  type: string
                  description: >-
                    The id of the legal entity associated with the specified
                    application. If not specified, it will be defaulted to the
                    legal entity associated with the opportunity for the
                    application.
                name:
                  type: string
                  description: The legal entity name
                code:
                  type: string
                  description: The legal entity code
                doing_business_as:
                  type: string
                  description: The legal entity’s Doing Business As name
            tax_location:
              type: object
              description: ''
              properties:
                id:
                  type: string
                  description: >-
                    The id of the tax location associated with the legal entity
                    for the specified application 
            hiring_manager:
              type: object
              description: ''
              properties:
                id:
                  type: string
                  description: >-
                    The id of the hiring manager for the opportunity associated
                    with the specified application
            onboarding_owner:
              type: object
              description: ''
              properties:
                id:
                  type: string
                  description: >-
                    The id of the onboarding owner for the opportunity
                    associated with the specified application
            org_units:
              type: object
              description: ''
              items:
                $ref: '#/components/schemas/org_units'
        educations:
          type: array
          items:
            $ref: '#/components/schemas/educations'
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/licenses'
        behaviors:
          type: array
          items:
            $ref: '#/components/schemas/behaviors'
        motivations:
          type: array
          items:
            $ref: '#/components/schemas/motivations'
        work_experience:
          type: array
          items:
            $ref: '#/components/schemas/workexperience'
        skills:
          type: array
          description: ''
          items:
            $ref: '#/components/schemas/skill'
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
    opportunity:
      type: object
      description: >-
        The section that contains details of an opportunity associated with the
        candidate’s application
      properties:
        id:
          type: string
          description: The id of the opportunity associated with the candidate application.
        updated_at: {}
        created_at: {}
        requisition_number: {}
        dedault_locale:
          type: object
          properties:
            id: {}
            code: {}
        title:
          type: object
        description:
          type: object
          properties:
            brief:
              type: object
              properties:
                externel:
                  type: object
                internal: {}
            detailed:
              type: object
              properties:
                externel:
                  type: object
                internal: {}
            eoe_text: {}
            pay_trabsparenct_text: {}
        compenasation:
          type: object
          properties:
            is_fulltime:
              type: boolean
            is_salaried:
              type: boolean
            pay_rate:
              type: number
              format: int34
            shown:
              type: string
            currency:
              type: object
              properties:
                code:
                  type: string
        job:
          type: object
          properties:
            code:
              type: string
        job_family:
          type: object
          properties:
            name:
              type: object
        locations:
          type: array
          items:
            $ref: '#/components/schemas/locations'
        company:
          type: object
          properties:
            id: {}
            name:
              type: object
            code: {}
            doing_business_as:
              type: object
        recruiter:
          type: object
        hiring_manager: {}
        onboarding_owner: {}
        recruiting_process:
          type: object
          properties:
            id: {}
        job_boards:
          type: object
          items:
            $ref: '#/components/schemas/job_boards'
        published_date: {}
        closed_date: {}
        status: {}
        is_featured: {}
        is_shared_with_everyone: {}
        internal_notes: {}
        skill_criteria:
          type: array
          items: {}
        work_experience_criteria:
          type: array
          items: {}
        education_criteria:
          type: object
          items:
            $ref: '#/components/schemas/education_criteria'
        license_criteria:
          type: array
          items: {}
        behavior_criteria:
          type: array
          items: {}
        motivation_criteria:
          type: array
          items: {}
        is_continuous_opening:
          type: boolean
        full_time_equivalent:
          type: object
          properties:
            budgeted: {}
            filled: {}
            remaining: {}
        head_count:
          type: object
          properties:
            max: {}
            hired: {}
            remaining: {}
        hours_per_week: {}
        hours_per_shift: {}
        staffing_plan_impact: {}
        target_start_date: {}
        incumbent:
          type: object
          properties:
            first_name: {}
            last_name: {}
            last_day_worked: {}
        priority: {}
        is_budgeted: {}
        opening_reason: {}
        justification_comments:
          type: array
          items: {}
        org_unit_groups:
          type: array
          items:
            $ref: '#/components/schemas/org_unit_groups'
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
    creator:
      type: object
      description: >-
        The section that contains details of a recruiter who submitted this
        background check order.
      properties:
        id:
          type: string
          description: The id of the recruiter who created the background check order.
        person_id:
          type: string
          description: The recruiter id in the core HR system.
        created_at:
          type: string
          description: The date of this user creation date.
        integration_user_id:
          type: string
          description: >-
            The alternative user id that can be used in third-party vendors’
            integrations. Returned only for users with the “recruiter”,
            “hiring-manager”, or “recruiting-administrator” role.
        is_internal:
          type: boolean
          description: 'A flag indicating whether the recruiter is an internal employee. '
        is_active:
          type: boolean
          description: >-
            A flag indicating whether the recruiter is an active employee. Can
            only be specified when is_internal is true.
        preferred_locale:
          type: object
          properties:
            id:
              type: string
              description: The id of the recruiter’s preferred language.
            code:
              type: string
              description: |-
                The preferred language code:

                en-US

                en-GB

                fr-CA

                es-ES

                pt-BR

                de-DE

                zh-CN 
        name:
          type: object
          items:
            $ref: '#/components/schemas/name'
        contact_info:
          type: object
          items:
            $ref: '#/components/schemas/contact_info'
        roles:
          type: array
          description: ''
          items: {}
        hyperlinks:
          type: array
          items:
            $ref: '#/components/schemas/hyperlinks'
        updated_at:
          type: string
          description: ''
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
        background_check_integration:
          type: object
          properties:
            id:
              type: string
              description: >-
                The internal Recruiting id of the third party background check
                vendor associated with the request.
    skill:
      type: object
      description: An array containing candidate’s skills.
      properties:
        id:
          type: string
          description: 'The id of the candidate’s skill/proficiency level record '
        skill:
          type: object
          properties:
            id:
              type: string
              description: The id of a standard skill.
            name:
              type: object
              description: The name of the skill in all available languages.
              properties:
                en_us: {}
        proficiency_level:
          type: object
          properties:
            id:
              type: string
              description: The id of a standard proficiency level.
            name:
              type: object
              description: 'The proficiency level name in all available languages. '
            ordinal_value:
              type: number
              description: |-
                A numerical equivalent of proficiency_level.name:

                1 – Novice

                2 – Some Knowledge

                3 – Intermediate

                4 – Advanced

                5 – Expert 
              format: int32
    workexperience:
      type: object
      description: An array containing candidate’s work experience records.
      properties:
        id:
          type: string
          description: 'The id of the candidate’s work experience record. '
        job_title:
          type: string
          description: The job title of the experience. Maximum of 100 characters.
        company:
          type: string
          description: The company name of the experience. Maximum of 100 characters.
        location:
          type: string
          description: The job location. Maximum of 20 characters.
        from:
          type: object
          properties:
            month:
              type: string
              description: The month number of the job start date.
            year:
              type: string
              description: The year number of the job start date.
        to:
          type: object
          properties:
            month:
              type: string
              description: >-
                The month number of the job end date. Null means that the
                candidate currently works here.
            year:
              type: string
              description: >-
                The year number of the job end date. Null means that the
                candidate currently works here.
        description:
          type: string
          description: The job description. Maximum of 2000 characters.
    educations:
      type: object
      description: An array containing candidate’s educations.
      properties:
        id:
          type: string
          description: The id of the candidate’s education record.
        degree:
          type: object
          properties:
            id:
              type: string
              description: The id of the candidate’s degree.
            name:
              type: object
              description: The name of the candidate’s degree in all available languages.
        school:
          type: object
          properties:
            id:
              type: string
              description: The id of a standard school.
            name:
              type: object
              description: The candidate’s school name in all available languages.
        major:
          type: object
          properties:
            id:
              type: string
              description: The id of a standard education major.
            name:
              type: object
              description: The education major name in all available languages.
        minor:
          type: object
          properties:
            id:
              type: string
              description: The id of a standard education major
            name:
              type: object
              description: The education major name in all available languages.
        from:
          type: object
          properties:
            month:
              type: string
              description: >-
                A value between 1 and 12 of the month when the education
                started.
            year:
              type: string
              description: >-
                An integer no less than 100 years ago and no greater than the
                to.year.
        to:
          type: object
          properties:
            month:
              type: string
              description: >-
                A value between 1 and 12 of the month when the education was or
                will be finished.
            year:
              type: string
              description: >-
                An integer no less than 100 years ago and no greater than 5
                years from now.
        description:
          type: string
          description: The education description. Maximum of 1500 characters.
    licenses:
      type: object
      description: >-
        An array containing candidate’s professional licenses and
        certifications.
      properties:
        id:
          type: string
          description: 'The id of the candidate’s license record. '
        license:
          type: object
          properties:
            id:
              type: string
              description: The id of one of pre-defined licenses.
            name:
              type: object
              description: The license name in all available languages. Max length of 250.
        number:
          type: string
          description: The license number. Max length of 20.
        achieved_date:
          type: string
          description: 'The date when the license was achieved. '
        renewal_date:
          type: string
          description: The date when the license was renewed.
    behaviors:
      type: object
      description: An array containing candidate’s behaviors
      properties:
        id:
          type: string
          description: The id of one of pre-defined behaviors.
        created_at:
          type: string
          description: ''
        updated_at:
          type: string
          description: ''
        name:
          type: object
          description: The behavior name in all available languages.
        description:
          type: object
          description: The behavior description in all available languages.
        is_archived:
          type: boolean
          description: ''
    motivations:
      type: object
      description: An array containing candidate’s motivations
      properties:
        id:
          type: string
          description: The id of one of pre-defined motivations.
        name:
          type: object
          description: The motivation name in all available languages.
        description:
          type: object
          description: The motivation description in all available languages.
    hyperlinks:
      type: object
      description: >-
        An array containing hyperlinks to candidate information: LinkedIn
        profile, personal web page, etc.
      properties:
        name:
          type: string
          description: The hyperlink description. Maximum of 250 characters.
        url:
          type: string
          description: The hyperlink URL.
    links:
      type: object
      description: The URL and description of the candidate resource endpoint.
      properties:
        href:
          type: string
          description: ''
        rel:
          type: string
          description: ''
    name:
      type: object
      description: ''
      properties:
        first:
          type: string
          description: The candidate’s first name. Maximum of 100 characters.
        middle:
          type: string
          description: The candidate’s middle name. Maximum of 50 characters.
        last:
          type: string
          description: The candidate’s last name. Maximum of 100 characters.
        prefix:
          type: object
          description: The candidate’s prefix.
          properties:
            id:
              type: string
              description: The candidate’s prefix id
            name:
              type: object
              description: The candidate’s prefix
        suffix:
          type: object
          description: The candidate’s suffix.
          properties:
            id:
              type: string
              description: The candidate’s suffix id
            name:
              type: object
              description: The candidate’s suffix
    country_question_responses:
      type: object
      properties:
        question:
          type: object
          properties:
            type: {}
        response: {}
    locations:
      type: object
      properties:
        id: {}
        name: {}
        city:
          type: string
          description: location City.
        state:
          type: string
          properties:
            code: {}
            name:
              type: object
              properties: {}
          description: location State.
        country:
          type: object
          properties:
            id: {}
            code: {}
            name:
              type: object
              properties: {}
        type: {}
        countryCode:
          type: string
          description: location country code.
        locationCode:
          type: string
          description: location Code, the unique identifier.
        description:
          type: string
          description: location description.
        zipOrPostalCode:
          type: string
          description: location zip or postal Code.
        isActive:
          type: boolean
          description: The location status.
      required:
        - locationCode
        - description
    job_boards:
      type: object
      properties:
        id: {}
        is_published_internal: {}
        is_published_external: {}
        recruiting_apply_url: {}
    education_criteria:
      type: object
      properties:
        is_required: {}
        allow_related: {}
        degree:
          type: object
          properties:
            id: {}
            name:
              type: object
              properties: {}
        major:
          type: object
          properties:
            id: {}
            name:
              type: object
              properties: {}
    org_unit_groups:
      type: object
      properties:
        org_units:
          type: array
          items:
            $ref: '#/components/schemas/org_units'
    org_units:
      type: object
      properties:
        id:
          type: string
          description: >-
            The id of organizational unit associated with the position the
            candidate has been hired for
        code:
          type: string
          description: The organizational unit’s code in the core HR system
        org_level:
          type: object
          properties:
            id:
              type: string
              description: The organizational unit’s level id
            level:
              type: string
              description: The organizational unit level in the company org structure
    screening_question_responses:
      type: object
      properties:
        questions:
          type: object
          properties:
            type:
              type: string
              description: >
                Candidate answers to the screening questions.Possible values for
                screening_question_responses.question.type:

                MultipleChoice


                Numeric


                Text
            response:
              type: string
              description: The screening question response
    contact_info:
      type: object
      description: ''
      properties:
        email:
          type: string
          description: The candidate’s email address.
        phone:
          type: object
          description: ''
          properties:
            primary:
              type: string
              description: The candidate’s primary phone number. Maximum of 25 characters.
            secondary:
              type: string
              description: >-
                The candidate’s secondary phone number. Maximum of 25
                characters.
        address:
          type: object
          description: ''
          properties:
            line1:
              type: string
              description: The candidate’s address line 1. Maximum of 255 characters.
            line2:
              type: string
              description: The candidate’s address line 2. Maximum of 255 characters.
            city:
              type: string
              description: The candidate’s address city. Maximum of 255 characters.
            state:
              type: string
              description: ''
              properties:
                code:
                  type: string
                  description: The candidate’s state code.
                name:
                  type: object
                  properties:
                    en_us:
                      type: string
            postal_Code:
              type: string
              description: >-
                The candidate’s postal code. Must be between 3 and 50
                characters.
            country:
              type: object
              description: The candidate’s address line 2. Maximum of 255 characters.
              properties:
                id:
                  type: string
                  description: The id of the country
                code:
                  type: string
                  description: The candidate’s country code (ISO standard).
                name:
                  type: object
                  properties:
                    en_us:
                      type: string
    backgroundChecks:
      type: object
      required:
        - author
        - application
        - order_number
        - status
        - packages
      properties:
        author:
          type: object
          properties:
            id:
              type: string
              description: The recruiter who created the order; cannot be changed.
        application:
          type: object
          properties:
            id:
              type: string
              description: The id of the corresponding application.
        status:
          type: string
          description: The status of the background check order.
        order_number:
          type: string
          description: Thebackground check order number. Maximum of 100 characters.
        packages:
          type: object
          description: An array of background check packages; at most 100.
          required:
            - id
            - name
          properties:
            id:
              type: string
              description: The id of the package.
            name:
              type: string
              description: The name of the package. Maximum of 100 characters.
            screenings:
              type: array
              description: An array of background check screenings; at most 100.
              items:
                $ref: '#/components/schemas/screening'
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
    screening:
      type: object
      properties:
        status:
          type: string
          description: The status of the screening.
        name:
          type: object
          description: >-
            The name of the background check screening. Maximum of 100
            characters.
    badRequest:
      type: object
      properties:
        type:
          type: number
          description: ''
          format: int32
        message_code:
          type: string
          description: ''
        member_names:
          type: array
          items: {}
    CodeTablesGET:
      type: object
      properties:
        codeTable:
          type: string
        url:
          type: string
    CodeTablesPOST:
      type: object
      properties:
        codeTable:
          type: string
        code:
          type: string
        description:
          type: string
    CompanyDetails:
      type: object
      properties:
        isMasterCompany:
          type: string
          description: >-
            true/false value represents if this company is a UKG Pro Master
            Company
        masterCompanyId:
          type: string
          description: 5 character value represents a UKG Pro Master CompanyID
        companyID:
          type: string
          description: 5 character value represents a UKG Pro CompanyID
        companyCode:
          type: string
          description: 5 character value represents a UKG Pro Company Code
        companyName:
          type: string
          description: Customer identified name of a UKG Pro Company
        addressLine1:
          type: string
          description: Main address line of a UKG Pro Company
        addressLine2:
          type: string
          description: Secondary address line of a UKG Pro Company
        addressCity:
          type: string
          description: Address city of a UKG Pro Company
        addressState:
          type: string
          description: Address state of a UKG Pro Company
        addressZipCode:
          type: string
          description: Address zip code of a UKG Pro Company
        addressCountry:
          type: string
          description: Address country of a UKG Pro Company
        addressCounty:
          type: string
          description: Address county of a UKG Pro Company
        phoneNumber:
          type: string
          description: Customer identified phone number of a UKG Pro Company
        phoneNumberExtension:
          type: string
          description: Phone number extension for a UKG Pro Company
        federalTaxId:
          type: string
          description: US FEIN for a UKG Pro Company
        orgLevel1Code:
          type: string
          description: Represents field defined as Org Level 1 for a UKG Pro Company
        orgLevel2Code:
          type: string
          description: Represents field defined as Org Level 2 for a UKG Pro Company
        orgLevel3Code:
          type: string
          description: Represents field defined as Org Level 3 for a UKG Pro Company
        orgLevel4Code:
          type: string
          description: Represents field defined as Org Level 4 for a UKG Pro Company
    EmpDeductions:
      type: object
      properties:
        arrearsAmt:
          format: double
          type: number
        benefitAmount:
          format: double
          type: number
        benefitAmountCalcRule:
          type: string
        benefitAmountRateOrPercent:
          format: double
          type: number
        benefitOption:
          type: string
        benefitStartDate:
          format: date-time
          type: string
        benefitStatus:
          type: string
        benefitStatusDate:
          format: date-time
          type: string
        benefitStopDate:
          format: date-time
          type: string
        companyID:
          type: string
        customAmount1:
          format: double
          type: number
        customAmount2:
          format: double
          type: number
        customDate:
          format: date-time
          type: string
        dateSuspendedFrom:
          format: date-time
          type: string
        dateSuspendedTo:
          format: date-time
          type: string
        datetimeChanged:
          format: date-time
          type: string
        datetimeCreated:
          format: date-time
          type: string
        declinedByCarrier:
          type: string
        declinedByCarrierDate:
          format: date-time
          type: string
        declinedByCarrierReason:
          type: string
        deductionCode:
          type: string
        effectiveRecordID:
          type: string
        contactID:
          type: string
        memberOrCaseNumber:
          type: string
        employeeAmount:
          format: double
          type: number
        employeeCalcRateOrPct:
          format: double
          type: number
        employeeCalcRule:
          type: string
        employeeCauseNumber:
          type: string
        employeeDedLastPaid:
          format: date-time
          type: string
        employeeEligibilityDate:
          format: date-time
          type: string
        employeeFiscalYTDAmt:
          format: double
          type: number
        employeeGoalAmt:
          format: double
          type: number
        employeeGoalToDateAmt:
          format: double
          type: number
        employeeID:
          type: string
        employeeLastAmount:
          format: double
          type: number
        employeeMonthToDateAmount:
          format: double
          type: number
        employeeQuarterToDateAmount:
          format: double
          type: number
        employeeYearToDateAmount:
          format: double
          type: number
        evidenceOfInsurabilityDate:
          format: date-time
          type: string
        evidenceOfInsurabilityDesiredAmt:
          format: double
          type: number
        evidenceOfInsurabilityDesiredCalcRateOrPct:
          format: double
          type: number
        employerAmount:
          format: double
          type: number
        employerCalcRateOrPct:
          format: double
          type: number
        employerCalcRule:
          type: string
        employerFiscalYearToDateAmount:
          format: double
          type: number
        employerLastAmount:
          format: double
          type: number
        employerMonthToDateAmount:
          format: double
          type: number
        employerQuarterToDateAmount:
          format: double
          type: number
        employerYearToDateAmount:
          format: double
          type: number
        interestAmount:
          format: double
          type: number
        isDeductionOffset:
          type: boolean
        medicalIndicator:
          type: boolean
        needEvidenceOfInsurability:
          type: boolean
        notes:
          type: string
        primaryCarePhysician:
          type: string
        primaryCarePhysicianId:
          type: string
        priorEmployeeAmount:
          format: double
          type: number
        priorEmployeeGoalAmount:
          format: double
          type: number
        priorEmployeeYearToDateAmount:
          format: double
          type: number
        priorEmployerYearToDateAmount:
          format: double
          type: number
        deductionStartDate:
          format: date-time
          type: string
        deductionStopDate:
          format: date-time
          type: string
        systemID:
          type: string
        waiveReason:
          type: string
        isHomeCompany:
          type: boolean
        isWaived:
          type: boolean
        includeInAdditionalCheck:
          type: boolean
        includeInManualCheck:
          type: boolean
        employeePerCapAmount:
          format: double
          type: number
        employeePerCapPercent:
          format: double
          type: number
        employeePerCapCalcRule:
          type: string
        employeeId:
          type: string
        companyId:
          type: string
        dedCode:
          type: string
        benStatus:
          type: string
        endDateTime:
          format: date-time
          type: string
        page:
          type: integer
        per_Page:
          type: integer
    EmpCompensationDetails:
      type: object
      properties:
        employeeID:
          type: string
        companyID:
          type: string
        annualSalary:
          format: double
          type: number
        hourlyPayRate:
          format: double
          type: number
        weeklyPayRate:
          format: double
          type: number
        payPeriodPayRate:
          format: double
          type: number
        currencyCode:
          type: string
        otherRate1:
          format: double
          type: number
        otherRate2:
          format: double
          type: number
        otherRate3:
          format: double
          type: number
        otherRate4:
          format: double
          type: number
        payGroupDescription:
          type: string
        piecePayRate:
          format: double
          type: number
        primaryJobCode:
          type: string
        jobSalaryGrade:
          type: string
        jobChangeReasonCode:
          type: string
        jobGroupCode:
          type: string
        jobTitle:
          type: string
        dateInJob:
          format: date-time
          type: string
        dateLastPaid:
          format: date-time
          type: string
        dateLastWorked:
          format: date-time
          type: string
        dateOfLastSalaryReview:
          format: date-time
          type: string
        dateOfNextSalayrReview:
          format: date-time
          type: string
        isAutoAllocated:
          type: boolean
        isAutoPaid:
          type: boolean
        isSeasonalWorker:
          type: boolean
        isHighlyCompensated:
          type: boolean
        isMultipleJob:
          type: boolean
        payGroupCode:
          type: string
        payPeriod:
          type: string
        payScaleCode:
          type: string
        salaryOrHourlyCode:
          type: string
        fullTimeOrPartTimeCode:
          type: string
        scheduledFullTimeEquivalency:
          format: double
          type: number
        scheduledPeriodWorkHours:
          format: double
          type: number
        scheduledAnnualWorkHours:
          format: double
          type: number
        weeklyHours:
          format: double
          type: number
        primaryShiftCode:
          type: string
        primaryShiftGroupCode:
          type: string
        avgPayRateCurPer:
          format: float
          type: number
        bonusTotalHrs:
          format: float
          type: number
        bonusTotalOtHrs:
          format: float
          type: number
        datePaidThru:
          format: date-time
          type: string
        emplStatus:
          type: string
        totalAnnSalary:
          format: float
          type: number
        distributionCenterCode:
          type: string
        numberOfPayments:
          format: int32
          type: integer
        performanceReviewRating:
          type: string
        performanceReviewType:
          type: string
    DependentDeductions:
      type: object
      properties:
        benefitAmount:
          type: number
        benefitStartDate:
          type: string
          format: date-time
        benefitStatus:
          type: string
        benefitStatusDate:
          type: string
          format: date-time
        benefitStopDate:
          type: string
          format: date-time
        certificateNo:
          type: string
        companyID:
          type: string
        contactID:
          type: string
        currentCOID:
          type: string
        dateTimeChanged:
          type: string
          format: date-time
        dateTimeCreated:
          type: string
          format: date-time
        declinedByCarrierDate:
          type: string
          format: date-time
        deductionCode:
          type: string
        deductionNotes:
          type: string
        deductionType:
          type: string
        declinedByCarrier:
          type: string
        declinedByCarrierReason:
          type: string
        depBPlanTVID:
          type: integer
        systemID:
          type: string
        employeeId:
          type: string
        eoiDate:
          type: string
          format: date-time
        needEOI:
          type: boolean
        primaryCarePhysician:
          type: string
        primaryCarePhysicianId:
          type: string
        isBenefitWaived:
          type: boolean
    EarningsHistoryBaseElements:
      type: object
      properties:
        employeeId:
          type: string
        companyId:
          type: string
        earningCode:
          type: string
        employeeNumber:
          type: string
        genNumber:
          type: string
        periodControl:
          type: string
        payGroup:
          type: string
        accrualCode:
          type: string
        baseAmount:
          type: number
        batchID:
          type: string
        calculationRule:
          type: string
        calculationSequence:
          type: string
        currentAmount:
          type: number
        currentHours:
          type: number
        glBaseSegmentId:
          type: string
        glFollowBaseAccountAllocation:
          type: string
        grossUp:
          type: string
        grossUpTarget:
          type: number
        grossUpTaxCalculationMethod:
          type: integer
        hourlyPayRate:
          type: number
        includeInDeferredCompensation:
          type: boolean
        includeInDeferredCompensationHours:
          type: boolean
        isVoided:
          type: boolean
        isVoidingRecord:
          type: boolean
        jobCode:
          type: string
        jobPremiumAmount:
          type: number
        jobPremiumRateOrPercent:
          type: number
        location:
          type: string
        numberOfDays:
          type: integer
        numberOfGames:
          type: integer
        payDate:
          type: string
          format: date-time
        payoutRateType:
          type: string
        payRate:
          type: number
        paySheetID:
          type: string
        periodPayRate:
          type: number
        pieceCount:
          type: number
        piecePayRate:
          type: number
        planYear:
          type: string
        project:
          type: string
        reportCategory:
          type: string
        taxCalculationGroupId:
          type: string
        taxCategory:
          type: string
        timeClockCode:
          type: string
        tipCredit:
          type: number
        tipGrossReceipts:
          type: number
        tipType:
          type: string
        useDeductionOffSet:
          type: boolean
        ytdAmount:
          type: number
        ytdShiftAmount:
          type: number
    EmployeeChangesResponse:
      type: object
      properties:
        firstName:
          type: string
          description: Employee First Name
        lastName:
          type: string
          description: Employee Last Name
        preferredName:
          type: string
          description: Employee Preferred Name
        emailAddress:
          type: string
          description: Employee Email Address
        countryCode:
          type: string
          description: Employee Country Code
        languageCode:
          type: string
          description: Employee Language Code
        employeeNumber:
          type: number
          description: Employee Number
        employeeId:
          type: string
          description: Employee Identifier
        personId:
          type: string
          description: Employee Person Identifier
        userIntegrationKey:
          type: string
          description: User Integration Key
        companyName:
          type: string
          description: Employee Company Name
        companyId:
          type: string
          description: Employee Company Identifier
        supervisorId:
          type: string
          description: Employee Surpervisor Identifier
        salaryOrHourly:
          type: string
          description: Employee Hourly Salary
        fullTimeOrPartTime:
          type: string
          description: Full/Part Time Identifier
        isActive:
          type: boolean
          description: Employee Active Flag
        workLocation:
          type: string
          description: Employee Work Location
        jobCode:
          type: string
          description: Employee Job Code
        projectCode:
          type: string
          description: Employee Project Code
        orgLevel1Code:
          type: string
          description: Employee Orginizational Level 1
        orgLevel2Code:
          type: string
          description: Employee Orginizational Level 2
        orgLevel3Code:
          type: string
          description: Employee Orginizational Level 3
        orgLevel4Code:
          type: string
          description: Employee Orginizational Level 4
        middleName:
          type: string
          description: Employee Middle Name
        workPhone:
          type: string
          description: Employee Work Phone
        homePhone:
          type: string
          description: Employee Home Phone
        employeeAddress1:
          type: string
          description: Employee Address 1
        employeeAddress2:
          type: string
          description: Employee Address 2
        city:
          type: string
          description: Employee City
        state:
          type: string
          description: Employee State
        zipCode:
          type: string
          description: Employee Zip Code
        terminationDate:
          type: string
          description: Employee Termination Date
        hireDate:
          type: string
          description: Employee Hire Date
        supervisorName:
          type: string
          description: Employee Supervisor Name
        prefix:
          type: string
          description: Employee Name Prefix
        suffix:
          type: string
          description: Employee Name Suffix
        alternateEmailAddress:
          type: string
          description: Employee Alternative Email Address
        gender:
          type: string
          description: Employee Gender
        employeeStatus:
          type: string
          description: Employee Employment Status
        employeeType:
          type: string
          description: Employee Type
        emplStatusStartDate:
          type: string
          description: Employment Status Start Date
        dateInJob:
          type: string
          description: Date Employee Started Current Job
        dateOfLastHire:
          type: string
          description: Date Employee Last Hired
        jobGroupCode:
          type: string
          description: Employee Job Group Code
        alternateJobTitle:
          type: string
          description: Alternate Job Title for Employee
    Error:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        errorCount:
          type: number
        errors:
          type: object
          properties:
            modelstate:
              type: object
              properties:
                property-name:
                  type: array
                  items:
                    type: object
                    properties:
                      message:
                        type: string
                      type:
                        type: string
                type:
                  type: string
                message:
                  type: string
        detail:
          type: string
        code:
          type: integer
          format: int32
        message:
          type: string
        modelstate:
          type: object
          properties:
            fieldname:
              type: string
            message:
              type: string
    EarningsDto:
      required:
        - earningCode
        - longDescription
        - stubDescription
        - timeClockCode
      type: object
      properties:
        earningCode:
          type: string
        longDescription:
          type: string
        amount:
          format: double
          type: number
        blockFederalIncomeTax:
          type: boolean
        blockLocalIncomeTax:
          type: boolean
        blockStateIncomeTax:
          type: boolean
        calculationRule:
          type: string
        displayInPayDataEntry:
          type: boolean
        excelInTotalHours:
          type: boolean
        flatHours:
          format: double
          type: number
        includeInAccruals:
          type: string
        includeInAllocations:
          type: boolean
        includeFlsaAveragePayRate:
          type: boolean
        includeInBenefitHours:
          type: boolean
        includeInDeferredCompensation:
          type: boolean
        includeInDeferredCompensationHours:
          type: boolean
        includeInEarningAccumulation:
          type: boolean
        includeInHoursAccumulation:
          type: boolean
        includeInManualCheck:
          type: boolean
        includeInMiscellaneousEarning1:
          type: boolean
        includeInMiscellaneousEarning2:
          type: boolean
        includeInMiscellaneousEarning3:
          type: boolean
        includeInMiscellaneousEarning4:
          type: boolean
        includeInMiscellaneousEarning5:
          type: boolean
        includeInMiscellaneousEarning6:
          type: boolean
        includeInPensionAccumulation:
          type: boolean
        includeInRetroPay:
          type: boolean
        includeInShiftDiffrential:
          type: boolean
        isProductiveTime:
          type: boolean
        isSupplimentalWages:
          type: boolean
        monthlyPayPeriod1:
          type: boolean
        monthlyPayPeriod2:
          type: boolean
        monthlyPayPeriod3:
          type: boolean
        monthlyPayPeriod4:
          type: boolean
        monthlyPayPeriod5:
          type: boolean
        notes:
          type: string
        reduceRegularDollars:
          type: boolean
        reduceRegularHours:
          type: boolean
        reportCategory:
          type: string
        scheduleSupplemental:
          type: boolean
        stubDescription:
          type: string
        taxCategory:
          type: string
        timeClockCode:
          type: string
        countryCode:
          type: string
        useDeductionOffset:
          type: boolean
        includeInRegisteredPensionPlan:
          type: boolean
        includeInRegisteredRetirementSavingsPlan:
          type: boolean
        includeInUnionDues:
          type: boolean
        includeInUnionDuesHours:
          type: boolean
        taxCalculationRule:
          type: string
        exemptFromEarnedIncomeHours:
          type: string
        includeInHealthCareHours:
          type: boolean
        verificationTypeCode:
          type: string
        verificationTypeDescription:
          type: string
    EmployeeContract:
      type: object
      properties:
        companyId:
          type: string
        employeeId:
          type: string
        contractNumber:
          type: string
        contractTypeCode:
          type: string
        effectiveDate:
          type: string
        dateTimeCreated:
          type: string
        rowLastChanged:
          type: string
        page:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        per_Page:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        pagesCount:
          format: int32
          type: integer
    EmployeeCobraDetails:
      type: object
      properties:
        personID:
          type: string
        employeeID:
          type: string
        companyID:
          type: string
        cobraExport:
          type: string
        cobraIsActive:
          type: boolean
        cobraNotes:
          type: string
        cobraReason:
          type: string
        cobraStatus:
          type: string
        cobraStatusDate:
          type: string
          format: date-time
        dateOfCobraEvent:
          type: string
          format: date-time
        dateOfCobraExport:
          type: string
          format: date-time
        dateOfCobraLetter:
          type: string
          format: date-time
    Contact:
      type: object
      properties:
        city:
          type: string
        countryCode:
          type: string
        county:
          type: string
        addressIsDifferentFromEmployee:
          type: boolean
        addressLine1:
          type: string
        addressLine2:
          type: string
        state:
          type: string
        zipCode:
          type: string
        cobraExport:
          type: boolean
        cobraIsActive:
          type: boolean
        cobraReason:
          type: string
        cobraStatus:
          type: string
        cobraStatusDate:
          format: date-time
          type: string
        dateOfBirth:
          format: date-time
          type: string
        dateOfCOBRAEvent:
          format: date-time
          type: string
        dateOfCOBRALetter:
          format: date-time
          type: string
        employeeId:
          type: string
        gender:
          type: string
        importId:
          type: string
        isBeneficiary:
          type: boolean
        isDependent:
          type: boolean
        isDisabled:
          type: boolean
        isEmergencyContact:
          type: boolean
        isSmoker:
          type: boolean
        isStudent:
          type: boolean
        marriageDate:
          format: date-time
          type: string
        firstName:
          type: string
        formerName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        nameSuffix:
          type: string
        occupation:
          type: string
        otherInsurance:
          type: string
        homePhoneCountry:
          type: string
        homePhoneNumber:
          type: string
        otherPhoneNumber:
          type: string
        otherPhoneType:
          type: string
        preferredPhoneNumber:
          type: string
        relationshipCode:
          type: string
        relationshipDescription:
          type: string
        ssn:
          type: string
        contactId:
          type: string
        userDefinedField01:
          type: string
        workPhoneExtension:
          type: string
        workPhoneNumber:
          type: string
        cobraNotes:
          type: string
        notes:
          type: string
        isActive:
          type: boolean
        statusAsOfDate:
          format: date-time
          type: string
        deathDate:
          format: date-time
          type: string
        divorceDate:
          format: date-time
          type: string
        emailAddress:
          type: string
        otherPhoneCountryCode:
          type: string
        healthCareId:
          type: string
        nationalId:
          type: string
        nationalIdExpirationDate:
          format: date-time
          type: string
        personID:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        addressID:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        workPhoneId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        homePhoneId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        otherPhoneId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
    EmployeeDeductionBenefitOptionChangeDate:
      type: object
      properties:
        companyID:
          type: string
        deductionCode:
          type: string
        employeeId:
          type: string
        optionDate:
          type: string
          format: date-time
    DirectDepositModel:
      type: object
      properties:
        account:
          type: string
        accountType:
          type: string
        amountOrPercent:
          format: double
          type: number
        companyId:
          type: string
        directDepositOrPrenote:
          type: string
        depositRule:
          type: string
        employeeBankId:
          type: string
        employeeBankName:
          type: string
        employeeBankRoutingNumber:
          type: string
        employeeId:
          type: string
        firstPrenotePayDate:
          format: date-time
          type: string
        sequenceNumber:
          type: string
        description:
          type: string
        employeeInstitutionNumber:
          type: string
        countryCode:
          type: string
        foreignAccountNumber:
          type: string
        foreignAccountNumberType:
          type: string
        accountRecordId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        dateTimeChanged:
          format: date-time
          type: string
        accountIsInactive:
          type: boolean
    EmpDedHistoryEffectiveChangeDate:
      type: object
      properties:
        employeeId:
          type: string
        companyId:
          type: string
        deductionCode:
          type: string
        effectiveDate:
          format: date-time
          type: string
        fieldValueDataType:
          type: string
        fieldValue:
          type: string
        fieldValueDate:
          format: date-time
          type: string
        fieldValueNumber:
          type: number
        changeReason:
          type: string
    EmployeeDemographicDetails:
      type: object
      properties:
        ethnicDescription:
          type: string
        additionalName1:
          type: string
        additionalName2:
          type: string
        addressId:
          type: string
        addressIsOnTaxBoundary:
          type: string
        addressLatitude:
          type: number
        disabilityType:
          type: string
        formerName:
          type: string
        healthBloodType:
          type: string
        healthEyes:
          type: string
        healthHair:
          type: string
        healthHeightFeet:
          type: string
        healthHeightInches:
          type: string
        healthLastDonateDate:
          type: string
        healthWeight:
          type: number
        previousSSN:
          type: string
        originCountry:
          type: string
        originLocation:
          type: string
        addressSms:
          type: string
        homePhoneIsPrivate:
          type: boolean
        lastNameNotSameAsSSCard:
          type: string
        nationality1:
          type: string
        nationality2:
          type: string
        nationality3:
          type: string
        personId:
          type: string
        employeeId:
          type: string
        companyId:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        preferredName:
          type: string
        namePrefixCode:
          type: string
        nameSuffixCode:
          type: string
        emailAddress:
          type: string
        emailAddressAlternate:
          type: string
        homePhoneID:
          type: string
        homePhone:
          type: string
        homePhoneCountry:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        addressLine4:
          type: string
        addressCity:
          type: string
        addressState:
          type: string
        addressZipCode:
          type: string
        addressCountry:
          type: string
        addressCounty:
          type: string
        dateOfBirth:
          type: string
        gender:
          type: string
        ethnicIdCode:
          type: string
        isSmoker:
          type: boolean
        isDisabled:
          type: string
        maritalStatusCode:
          type: string
        ssn:
          type: string
        ssnIsSuppressed:
          type: boolean
        userID:
          type: string
        integrationRecordId:
          type: string
        cellPhoneNumber:
          type: string
    EmployeeEducationModel:
      type: object
      properties:
        employeeId:
          type: string
        systemId:
          type: string
        school:
          type: string
        educationLevel:
          type: string
        educationMajor:
          type: string
        educationMinor:
          type: string
        gpa:
          type: string
        beginDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        isGraduate:
          type: boolean
        isHighestLevel:
          type: boolean
        employeeNumber:
          type: string
        country:
          type: string
    EmployeeExtendedElements:
      type: object
      properties:
        personID:
          type: string
        employeeID:
          type: string
        companyID:
          type: string
        communityBroadcastSMSCode:
          type: string
        consentElectronicW2:
          type: boolean
        consentElectronicW2PR:
          type: boolean
        dateDeceased:
          type: string
          format: date-time
        dateOfI9Expiration:
          type: string
          format: date-time
        dateTimeChanged:
          type: string
          format: date-time
        dateTimeCreated:
          type: string
          format: date-time
        i9AlienNumber:
          type: string
        i9DocA:
          type: string
        i9DocB:
          type: string
        i9DocC:
          type: string
        i9Verified:
          type: boolean
        i9VisaType:
          type: string
        i9WorkAuth:
          type: string
        isMultiPayGroup:
          type: boolean
        militaryBranchServed:
          type: string
        militaryEra:
          type: string
        militaryIsDisabledVet:
          type: string
        militaryIsOthEligVet:
          type: string
        militaryIsOthEligVetBasis:
          type: string
        militaryIsActiveWartimeVet:
          type: string
        w2IsDeceased:
          type: boolean
        militarySeparationDate:
          type: string
          format: date-time
        smsApprovals:
          type: boolean
        smsPayNotification:
          type: boolean
        chkCashingInstCode:
          type: string
        i9VisaExpirationDate:
          type: string
          format: date-time
        militaryIsMedalVet:
          type: string
        militaryService:
          type: string
    EmployeeEmploymentDetails:
      type: object
      properties:
        companyID:
          type: string
        employeeID:
          type: string
        primaryJobCode:
          type: string
        jobTitle:
          type: string
        fullTimeOrPartTimeCode:
          type: string
        primaryWorkLocationCode:
          type: string
        primaryProjectCode:
          type: string
        deductionGroupCode:
          type: string
        earningGroupCode:
          type: string
        employeeTypeCode:
          type: string
        employeeStatusCode:
          type: string
        employeeNumber:
          type: string
        supervisorId:
          type: string
        originalHireDate:
          type: string
        lastHireDate:
          type: string
        dateOfTermination:
          type: string
        dateOfRetirement:
          type: string
        dateTimeCreated:
          type: string
        dateTimeChanged:
          type: string
        dateLastPayDatePaid:
          type: string
        payGroup:
          type: string
        isHomeCompany:
          type: string
        page:
          type: integer
        per_Page:
          type: integer
    EmployeeJobHistoryDetail:
      type: object
      properties:
        annualSalary:
          format: double
          type: number
        companyId:
          type: string
        dateTimeCreated:
          format: date-time
          type: string
        employeeId:
          type: string
        employeeType:
          type: string
        employeeStatus:
          type: string
        flsaCategory:
          type: string
        fullTimeOrPartTime:
          type: string
        hourlyPayRate:
          format: double
          type: number
        isJobChange:
          type: boolean
        isOrgchange:
          type: boolean
        isOutsideGuidelines:
          type: boolean
        isOutsideRange:
          type: boolean
        isPromotion:
          type: boolean
        isRateChange:
          type: boolean
        isSystem:
          type: boolean
        isTransfer:
          type: boolean
        jobCode:
          type: string
        jobDescription:
          type: string
        jobEffectiveDate:
          format: date-time
          type: string
        jobGroupCode:
          type: string
        locationCode:
          type: string
        orgLevel1Code:
          type: string
        orgLevel2Code:
          type: string
        orgLevel3Code:
          type: string
        orgLevel4Code:
          type: string
        otherRate1:
          format: double
          type: number
        otherRate2:
          format: double
          type: number
        otherRate3:
          format: double
          type: number
        otherRate4:
          format: double
          type: number
        payGroupCode:
          type: string
        payPeriodCode:
          type: string
        payScaleCode:
          type: string
        percentChange:
          format: double
          type: number
        periodPayRate:
          format: double
          type: number
        piecePayRate:
          format: double
          type: number
        positionCode:
          type: string
        reasonCode:
          type: string
        salaryGrade:
          type: string
        salaryOrHourly:
          type: string
        scheduledAnnualHours:
          format: double
          type: number
        scheduledFullTimeEquivalency:
          format: double
          type: number
        scheduledWorkHours:
          format: double
          type: number
        shiftCode:
          type: string
        shiftGroupCode:
          type: string
        stepNumber:
          format: double
          type: number
        supervisorId:
          type: string
        supervisorNameFirst:
          type: string
        supervisorNameLast:
          type: string
        supervisorNameSuffix:
          type: string
        supervisorNotInList:
          type: boolean
        systemId:
          type: string
        unionNational:
          type: string
        usePayScales:
          type: boolean
        weeklyPayRate:
          format: double
          type: number
        notes:
          type: string
        homeCompanyId:
          type: string
        integrationEffectiveDate:
          format: date-time
          type: string
        projectCode:
          type: string
        numberOfPayments:
          format: double
          type: number
        weeklyHours:
          format: double
          type: number
        isViewableByEmployee:
          type: boolean
        createdByUserId:
          format: double
          type: number
        jobTitle:
          type: string
    Identifiers:
      required:
        - employeeIdentifierType
        - employeeIdentifierValue
      type: object
      properties:
        employeeIdentifierType:
          type: string
          enum:
            - EmailAddress
            - EmployeeNumber
            - NationalID
            - SIN
            - PersonID
            - SSN
            - EmployeeID
            - UserIntegrationKey
          description: Employee Identifier Type
        employeeIdentifierValue:
          type: string
          description: Employee Identifier Value (specific to Employee Identifer Type)
        companyIdentifierType:
          type: string
          enum:
            - Company ID
            - Company Code
            - Federal ID
        companyIdentifierValue:
          type: string
          description: Company Identifier Value (specific to Company Identifer Type)
    EmployeeIdsResponse:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
        errorCount:
          type: number
        multistatus:
          type: array
          items:
            properties:
              sequenceId:
                type: number
              status:
                description: http status
                type: string
              modelstate:
                description: Only present if status is error
                type: object
                properties:
                  property-name:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                        type:
                          type: string
              body:
                description: Only present if status is success
                type: object
                properties:
                  eeid:
                    type: string
                  coid:
                    type: array
                    description: >-
                      If more than one company, first element is the home
                      company.
                    items:
                      type: string
    EmployeeMultipleJobs:
      type: object
      properties:
        annualPayRate:
          type: number
        companyId:
          type: string
        dateInJob:
          format: date-time
          type: string
        employeeId:
          type: string
        hourlyPayRate:
          type: number
        isPrimaryJob:
          type: boolean
        jobCode:
          type: string
        jobIsInActive:
          type: boolean
        otherRate1:
          type: number
        otherRate2:
          type: number
        otherRate3:
          type: number
        otherRate4:
          type: number
        piecePayRate:
          type: number
    EmployeeMultiPhoneNumbers:
      type: object
      properties:
        employeeId:
          type: string
        auditKey:
          type: string
        firstName:
          type: string
        formerName:
          type: object
        lastName:
          type: string
        middleName:
          type: string
        phoneNumber:
          type: string
        phoneCountryCode:
          type: string
        phoneCountryPrefix:
          type: object
        phoneTypeCode:
          type: string
        phoneExtension:
          type: string
        phoneIsPrivate:
          type: boolean
        systemId:
          type: string
    EmployeeMultiplePositions:
      type: object
      properties:
        employeeId:
          type: string
        companyId:
          type: string
        jobCode:
          type: string
        positionCode:
          type: string
        isPrimary:
          type: boolean
        annualSalary:
          type: number
        hourlyPayRate:
          type: number
        fullTimeOrPartTimeCode:
          type: string
        fullTimeOrPartTime:
          type: string
        clockCode:
          type: string
        dateTimeCreated:
          format: date-time
          type: string
        employeeTypeCode:
          type: string
        employeeTypeDescription:
          type: string
        effectiveStartDate:
          format: date-time
          type: string
        effectiveStopDate:
          format: date-time
          type: string
        isEligibleForBenefits:
          type: boolean
        locationCode:
          type: string
        notes:
          type: string
        organizationLevel1Code:
          type: string
        organizationLevel2Code:
          type: string
        organizationLevel3Code:
          type: string
        organizationLevel4Code:
          type: string
        otherRate1:
          type: number
        otherRate2:
          type: number
        otherRate3:
          type: number
        otherRate4:
          type: number
        overrideIncumbentData:
          type: string
        payGroupCode:
          type: string
        periodPayRate:
          type: number
        piecePayRate:
          type: number
        projectCode:
          type: string
        salaryOrHourlyCode:
          type: string
        salaryOrHourly:
          type: string
        scheduledAnnualHours:
          type: number
        scheduledFullTimeEmployee:
          type: number
        scheduledWorkHours:
          type: number
        shiftCode:
          type: string
        shiftGroupCode:
          type: string
        shiftGroupDescription:
          type: string
        systemId:
          type: string
        weeklyPayRate:
          type: number
    NationalDocumentModel:
      type: object
      properties:
        employeeId:
          type: string
        nationalDocumentId:
          type: string
        contactId:
          type: string
        nationalDocumentNumber:
          type: string
        nationalDocumentDescription:
          type: string
        nationalDocumentTypeCode:
          type: string
        nationalDocumentIssuingCountryCode:
          type: string
        nationalDocumentIssuingPlace:
          type: string
        nationalDocumentIssueDate:
          format: date-time
          type: string
        employeeNumber:
          type: string
    EmployeeProfiles:
      type: object
      properties:
        profileValue:
          type: string
        profileType:
          type: string
        product:
          type: string
        module:
          type: string
        companyId:
          type: string
        employeeId:
          type: string
        lastModifiedDate:
          format: date-time
          type: string
        isCleared:
          type: boolean
        isDateEffective:
          type: boolean
        effectiveDate:
          format: date-time
          type: string
        recordId:
          type: number
        description:
          type: string
        changeRecordID:
          type: number
        isPrimary:
          type: boolean
        isPrimaryEffectiveDate:
          format: date-time
          type: string
        originalHireDate:
          format: date-time
          type: string
    EmployeeSecurityUserDetails:
      type: object
      properties:
        userID:
          type: string
        userName:
          type: string
        fullName:
          type: string
        employeeId:
          type: string
        passwordLastChanged:
          type: string
          format: datetime
        lastLogon:
          type: string
          format: datetime
    EmployeeStatus:
      type: object
      properties:
        asOfDate:
          type: string
          format: date-time
        employeeId:
          type: string
        companyId:
          type: string
        triggerTermination:
          type: boolean
        status:
          type: string
        statusStartDate:
          type: string
          format: date-time
        statusReason:
          type: string
        statusReasonDesc:
          type: string
        isPrimary:
          type: boolean
        isPrimaryEffectiveDate:
          type: string
          format: date-time
        originalHireDate:
          type: string
          format: date-time
    CompanyPayStatementFilter:
      required:
        - startDate
        - endDate
      type: object
      properties:
        companyId:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        payGroup:
          type: string
        page:
          format: int32
          minimum: 1
          type: integer
        per_Page:
          format: int32
          minimum: 1
          type: integer
        pagesCount:
          format: int32
          type: integer
    CompanyPayStatementModel:
      type: object
      properties:
        employeeidentifier:
          $ref: '#/components/schemas/EmployeePayStatementIdentifierModel'
        payidentifier:
          type: string
        paydate:
          format: date-time
          type: string
        document:
          type: string
        totalearnings:
          format: float
          type: number
        totaldeductions:
          format: float
          type: number
        totaltaxes:
          format: float
          type: number
    EmployeePayStatementIdentifierModel:
      type: object
      properties:
        identificationtype:
          type: string
        companyidentifier:
          type: string
        employeeidentifier:
          type: string
    EmployeePayStatementModel:
      type: object
      properties:
        accruals:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayStatementAccrualsModel'
        addressline1:
          type: string
        addressline2:
          type: string
        city:
          type: string
        companyaddresscity:
          type: string
        companyaddresscountry:
          type: string
        companyaddresscounty:
          type: string
        companyaddressline1:
          type: string
        companyaddressline2:
          type: string
        companyaddresspostalcode:
          type: string
        companyaddressstateorprovince:
          type: string
        companyname:
          type: string
        companyphone:
          type: string
        companyphoneext:
          type: string
        country:
          type: string
        deductions:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayStatementDeductionsModel'
        deductionscurrent:
          format: float
          type: number
        deductionsytd:
          format: float
          type: number
        document:
          type: string
        earnings:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayStatementEarningsModel'
        employeeidentifier:
          $ref: '#/components/schemas/EmployeePayStatementIdentifierModel'
        employeenumber:
          type: string
        federaladditionalamountWithheld:
          format: float
          type: number
        federalallowancesclaimed:
          format: int32
          type: integer
        federalfilingstatus:
          type: string
        federaltaxablewagescurrent:
          format: float
          type: number
        federaltaxablewagesytd:
          format: float
          type: number
        fullname:
          type: string
        grosswagescurrent:
          format: float
          type: number
        grosswagesytd:
          format: float
          type: number
        job:
          type: string
        location:
          type: string
        netpay:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayStatementNetPayModel'
        netpaycurrent:
          format: float
          type: number
        netpayytd:
          format: float
          type: number
        orglevel1:
          type: string
        orglevel2:
          type: string
        orglevel3:
          type: string
        orglevel4:
          type: string
        paydate:
          format: date-time
          type: string
        payperiodfrequency:
          type: string
        paygroup:
          type: string
        payidentifier:
          type: string
        payrate:
          format: float
          type: number
        periodenddate:
          format: date-time
          type: string
        periodstartdate:
          format: date-time
          type: string
        postalcode:
          type: string
        residentstateallowancesclaimed:
          format: int32
          type: integer
        residentstatefilingstatus:
          type: string
        ssn:
          type: string
        stateorprovince:
          type: string
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayStatementTaxesModel'
        taxescurrent:
          format: float
          type: number
        taxesytd:
          format: float
          type: number
        workstateallowancesclaimed:
          format: int32
          type: integer
        workstatefilingstatus:
          type: string
    EmployeePayStatementAccrualsModel:
      type: object
      properties:
        amountcurrent:
          format: float
          type: number
        amounttype:
          type: string
        balance:
          format: float
          type: number
        plancode:
          type: string
        plandescription:
          type: string
    EmployeePayStatementDeductionsModel:
      type: object
      properties:
        basisamount:
          format: float
          type: number
        deductioncode:
          type: string
        deductiondescription:
          type: string
        employeeamount:
          format: float
          type: number
        employeeamountytd:
          format: float
          type: number
        employeramount:
          format: float
          type: number
        employeramountytd:
          format: float
          type: number
        pretax:
          type: boolean
    EmployeePayStatementEarningsModel:
      type: object
      properties:
        amount:
          format: float
          type: number
        amountytd:
          format: float
          type: number
        hours:
          format: float
          type: number
        hoursytd:
          format: float
          type: number
        paycode:
          type: string
        paydescription:
          type: string
        payrate:
          format: float
          type: number
        periodend:
          format: date-time
          type: string
        periodstart:
          format: date-time
          type: string
        piececount:
          format: float
          type: number
        piecepayrate:
          format: float
          type: number
    EmployeePayStatementNetPayModel:
      type: object
      properties:
        accountnumber:
          type: string
        accounttype:
          type: string
        amount:
          format: float
          type: number
    EmployeePayStatementTaxesModel:
      type: object
      properties:
        amount:
          format: float
          type: number
        amountytd:
          format: float
          type: number
        basisamount:
          format: float
          type: number
        taxdescription:
          type: string
        taxcode:
          type: string
    EmployeePayStatementRangeFilter:
      type: object
      properties:
        employeeIdentifier:
          $ref: '#/components/schemas/EmployeeIdentifier'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        page:
          format: int32
          minimum: 1
          type: integer
        per_Page:
          format: int32
          minimum: 1
          type: integer
        pagesCount:
          format: int32
          type: integer
    EmployeeIdentifier:
      type: object
      properties:
        companyCode:
          type: string
        employeeNumber:
          type: string
        eeid:
          type: string
        coid:
          type: string
    EmployeeSupervisorDetails:
      type: object
      properties:
        employeeID:
          type: string
        companyID:
          type: string
        employeeNumber:
          type: string
        supervisorEmployeeID:
          type: string
        supervisorFirstName:
          type: string
        supervisorLastName:
          type: string
        supervisorEmployeeNumber:
          type: string
        supervisorCompanyID:
          type: string
        supervisorCompanyCode:
          type: string
        supervisorStatusCode:
          type: string
        supervisorJobCode:
          type: string
        supervisorPositionCode:
          type: string
        supervisorEmail:
          type: string
        supervisorWorkPhone:
          type: string
        supervisorPersonId:
          type: string
    EmpEmploymentDetails:
      type: object
      properties:
        companyID:
          type: string
        companyCode:
          type: string
        companyName:
          type: string
        employeeID:
          type: string
        jobDescription:
          type: string
        payGroupDescription:
          type: string
        primaryJobCode:
          type: string
        orgLevel1Code:
          type: string
        orgLevel2Code:
          type: string
        orgLevel3Code:
          type: string
        orgLevel4Code:
          type: string
        originalHireDate:
          format: date-time
          type: string
        lastHireDate:
          format: date-time
          type: string
        fullTimeOrPartTimeCode:
          type: string
        primaryWorkLocationCode:
          type: string
        languageCode:
          type: string
        primaryProjectCode:
          type: string
        workPhoneNumber:
          type: string
        workPhoneExtension:
          type: string
        workPhoneCountry:
          type: string
        dateInJob:
          format: date-time
          type: string
        dateLastWorked:
          format: date-time
          type: string
        dateOfBenefitSeniority:
          format: date-time
          type: string
        dateOfSeniority:
          format: date-time
          type: string
        deductionGroupCode:
          type: string
        earningGroupCode:
          type: string
        employeeTypeCode:
          type: string
        employeeStatusCode:
          type: string
        employeeNumber:
          type: string
        jobChangeReasonCode:
          type: string
        jobTitle:
          type: string
        leaveReasonCode:
          type: string
        supervisorID:
          type: string
        supervisorFirstName:
          type: string
        supervisorLastName:
          type: string
        autoAllocate:
          type: string
        clockCode:
          type: string
        dateLastPayDatePaid:
          format: date-time
          type: string
        dateOfEarlyRetirement:
          format: date-time
          type: string
        dateOfLocalUnion:
          format: date-time
          type: string
        dateOfNationalUnion:
          format: date-time
          type: string
        dateOfRetirement:
          format: date-time
          type: string
        dateOfSuspension:
          format: date-time
          type: string
        dateOfTermination:
          format: date-time
          type: string
        datePaidThru:
          format: date-time
          type: string
        statusStartDate:
          format: date-time
          type: string
        hireSource:
          type: string
        isAutoAllocated:
          type: string
        isAutopaid:
          type: string
        isMultipleJob:
          type: string
        jobGroupCode:
          type: string
        mailstop:
          type: string
        okToRehire:
          type: string
        payGroup:
          type: string
        payPeriod:
          type: string
        plannedLeaveReason:
          type: string
        positionCode:
          type: string
        salaryOrHourly:
          type: string
        scheduledAnnualHrs:
          format: double
          type: number
        scheduledFTE:
          format: double
          type: number
        scheduledWorkHrs:
          format: double
          type: number
        shift:
          type: string
        shiftGroup:
          type: string
        termReason:
          type: string
        terminationReasonDescription:
          type: string
        termType:
          type: string
        timeclockID:
          type: string
        unionLocal:
          type: string
        unionNational:
          type: string
        weeklyHours:
          format: double
          type: number
        dateTimeCreated:
          format: date-time
          type: string
        dateTimeChanged:
          format: date-time
          type: string
        supervisorEmployeeNumber:
          type: string
        supervisorCOID:
          type: string
        supervisorCompanyCode:
          type: string
        companyGLSegment:
          type: string
        locationGLSegment:
          type: string
    GeneralLedgerRunDetailsV2:
      type: object
      properties:
        runId:
          type: string
        payPeriodEndDate:
          format: date-time
          type: string
        accountType:
          type: string
        baseSegment:
          type: string
        companyCode:
          type: string
        creditAmt:
          format: double
          type: number
        debitAmt:
          format: double
          type: number
        description:
          type: string
        generalLedgerAccount:
          type: string
        jobCode:
          type: string
        jobDesc:
          type: string
        location:
          type: string
        orgLevel1:
          type: string
        orgLevel2:
          type: string
        orgLevel3:
          type: string
        orgLevel4:
          type: string
        payGroup:
          type: string
        periodEndDate:
          format: date-time
          type: string
        periodStartDate:
          format: date-time
          type: string
        positionCode:
          type: string
        positionDesc:
          type: string
        project:
          type: string
        systemId:
          format: int32
          type: integer
        blockId:
          format: int32
          type: integer
        coId:
          type: string
        glRunDateTime:
          format: date-time
          type: string
        totalNrOfBlocks:
          format: int32
          type: integer
        userWhoRanThisGl:
          type: string
        glJson:
          type: string
    EmployeeGlobalBanksModel:
      type: object
      properties:
        bankId:
          type: string
        employeeId:
          type: string
        companyId:
          type: string
        employeeNumber:
          type: string
        payGroup:
          type: string
        currencyCode:
          type: string
        fundingMethod:
          type: string
        fundingMethodDescription:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        bankName:
          type: string
        bankBranch:
          type: string
        bankCountryCode:
          type: string
        beneficiaryName:
          type: string
        bankAccountType:
          type: string
        bankAccountTypeDescription:
          type: string
        bankAccountNumber:
          type: string
        iban:
          type: string
        swiftCode:
          type: string
        bankRequirement1:
          type: string
        bankRequirement2:
          type: string
        bankRequirement3:
          type: string
        dateModified:
          format: date-time
          type: string
        bankRequestCode1:
          type: string
        bankRequestLabel1:
          type: string
        bankRequestCode2:
          type: string
        bankRequestLabel2:
          type: string
        bankRequestCode3:
          type: string
        bankRequestLabel3:
          type: string
        employeeCountry:
          type: string
    EmployeePayDeductionElementsModel:
      type: object
      properties:
        employeeId:
          type: string
        companyId:
          type: string
        systemId:
          type: string
        payDeductionId:
          type: string
        employeeNumber:
          type: string
        payGroup:
          type: string
        payDeductionName:
          type: string
        payDeductionDescription:
          type: string
        periodStartId:
          type: string
        periodEndId:
          type: string
        periodStartName:
          type: string
        periodEndName:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        project:
          type: string
        task:
          type: string
        recurring:
          type: string
        amount:
          type: string
        notes:
          type: string
        modifiedDate:
          format: date-time
          type: string
        country:
          type: string
        paymentOrDeductionIndicator:
          type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.ImportRequest:
      type: object
      properties:
        transaction:
          description: The XML Serialized transaction
          type: string
        uniqueFileName:
          description: An optionally provided unique file name
          type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStaging:
      type: object
      properties:
        stagingId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        dateTimeCreated:
          format: date-time
          type: string
        fileName:
          type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStagingStatus:
      type: object
      properties:
        stagingId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        fileProcessDate:
          format: date-time
          type: string
        serviceSubmittalDate:
          format: date-time
          type: string
        lastRepostDate:
          format: date-time
          type: string
        employeeName:
          type: string
        employeeNumber:
          type: string
        status:
          type: string
        transaction:
          type: string
        fileName:
          type: string
        messages:
          type: array
          items:
            $ref: >-
              #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.ImportMessage
        childTransactionStatuses:
          type: array
          items:
            enum:
              - FileStagingStatus object
            type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.ImportMessage:
      type: object
      properties:
        message:
          type: string
        severity:
          format: int32
          enum:
            - 0
            - 1
            - 2
            - 3
          type: integer
    EmpGlobalLocalizationElementModel:
      type: object
      properties:
        employeeId:
          type: string
        fieldId:
          type: string
        fieldName:
          type: string
        booleanValue:
          type: boolean
        numericValue:
          type: string
        dateTimeValue:
          type: string
        stringValue:
          type: string
        companyId:
          type: string
        created:
          type: string
        effective:
          type: string
    InsuranceRate:
      type: object
      properties:
        deductionCode:
          type: string
        minimumAge:
          type: number
        maximumAge:
          type: number
        employeeRateNonSmokerFemale:
          type: number
        employeeRateNonSmokerMale:
          type: number
        employeeRateSmokerFemale:
          type: number
        employeeRateSmokerMale:
          type: number
        effectiveDate:
          type: string
          format: date-time
        employerRateNonSmokerFemale:
          type: number
        employerRateNonSmokerMale:
          type: number
        employerRateSmokerFemale:
          type: number
        employerRateSmokerMale:
          type: number
        payFrequency:
          type: string
        stopDate:
          type: string
          format: date-time
        employeeRateNonSmokerNotSpecified:
          type: number
        employeeRateSmokerNotSpecified:
          type: number
        employerRateNonSmokerNotSpecified:
          type: number
        employerRateSmokerNotSpecified:
          type: number
    NewHireReadModel:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the new hire
        contactInformation:
          type: object
          description: Contact information of the new hire
          properties:
            name:
              type: object
              description: Name of the new hire
              properties:
                prefix:
                  type: object
                  description: Prefix of the new hire in translatable format
                  properties:
                    id:
                      type: string
                      description: Id of the translatable
                    name:
                      type: string
                      description: The language that the translatable is in
                      additionalProperties:
                        type: string
                        description: The name
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                      name:
                        enUS: Toronto Headquarters
                first:
                  type: string
                  description: First name
                middle:
                  type: string
                  description: Middle name
                last:
                  type: string
                  description: Last name
                formerLast:
                  type: string
                  description: Former last name
                suffix:
                  type: object
                  description: Suffix of the new hire in translatable format
                  properties:
                    id:
                      type: string
                      description: Id of the translatable
                    name:
                      type: string
                      description: The language that the translatable is in
                      additionalProperties:
                        type: string
                        description: The name
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  type: string
                  description: Preferred first name
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482
                    name:
                      enUS: III
                  preferredFirst: Hugh
            emailAddress:
              type: string
              description: Email address of the new hire
            primaryPhone:
              type: string
              description: Primary phone number of the new hire
            secondaryPhone:
              type: string
              description: Secondary phone number of the new hire
            address:
              type: object
              description: Address of the new hire
              properties:
                line1:
                  type: string
                  description: Line 1 of the address
                line2:
                  type: string
                  description: Line 2 of the address
                city:
                  type: string
                  description: City of the address
                postalCode:
                  type: string
                  description: Zip/postal code of the address
                county:
                  type: string
                  description: County of the address
                stateCode:
                  type: string
                  description: State code of the address
                countryCode:
                  type: string
                  description: Country code of the address
                country:
                  type: object
                  description: Country code of the address
                  properties:
                    code:
                      type: string
                      description: Code of the translatable
                    name:
                      type: string
                      description: The language that the translatable is in
                      additionalProperties:
                        type: string
                        description: The name
                  example:
                    country:
                      code: USA
                      name:
                        enUS: United States
              example:
                line1: Line 1
                line2: Line 2
                city: Weston
                postalCode: '33326'
                county: Broward
                stateCode: FL
                countryCode: USA
                country:
                  code: USA
                  name:
                    enUs: United States
          example:
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              formerLast: Johnson
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482
                name:
                  enUS: III
              preferredFirst: Hugh
            emailAddress: ultionboarding14+4@gmail.com
            primaryPhone: '3056985433'
            secondaryPhone: '3056986533'
            address:
              line1: 123 Main St
              line2: 412 Blue Rd
              city: Rosemead
              zipCode: A1A2B2
              county: County of Brant
              stateCode: 'ON'
              countryCode: USA
              country:
                code: CAN
                name:
                  enUS: Canada
        job:
          type: object
          description: Job of the new hire
          properties:
            id:
              type: string
              description: Unique identifier of the job
            name:
              type: string
              description: The name of the job
              additionalProperties:
                type: string
                description: >-
                  The text of the translatable translated in the language
                  specified
            code:
              type: string
              description: Code of the job
            requisitionId:
              type: string
              description: RequisitionId of the job
            selectedFLSAStatus:
              type: integer
              description: Selected FLSA status for the job
              enum:
                - Not specified = 0
                - Exempt = 1
                - NonExempt = 2
            componentCompany:
              type: object
              description: Component company of the job
              properties:
                id:
                  type: string
                  description: Id of the component company
                name:
                  type: string
                  description: Name of the component company
              example:
                id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                name: Wayne Enterprises
            workLocation:
              type: object
              description: Work location of the job
              properties:
                id:
                  type: string
                  description: Id of the work location
                name:
                  type: string
                  description: Name of the work location
              example:
                id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                name: Wayne Enterprises
            supervisor:
              type: object
              description: Supervisor of the job
              properties:
                id:
                  type: string
                  description: Id of the supervisor
                name:
                  type: object
                  description: Name of the supervisor
                  properties:
                    prefix:
                      type: object
                      description: Prefix of the new hire in translatable format
                      properties:
                        id:
                          type: string
                          description: Id of the translatable
                        name:
                          type: string
                          description: The language that the translatable is in
                          additionalProperties:
                            type: string
                            description: The name
                      example:
                        workLocation:
                          id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                          name:
                            enUS: Toronto Headquarters
                    first:
                      type: string
                      description: First name
                    middle:
                      type: string
                      description: Middle name
                    last:
                      type: string
                      description: Last name
                    formerLast:
                      type: string
                      description: Former last name
                    suffix:
                      type: object
                      description: Suffix of the new hire in translatable format
                      properties:
                        id:
                          type: string
                          description: Id of the translatable
                        name:
                          type: string
                          description: The language that the translatable is in
                          additionalProperties:
                            type: string
                            description: The name
                      example:
                        workLocation:
                          id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                          name:
                            enUS: Toronto Headquarters
                    preferredFirst:
                      type: string
                      description: Preferred first name
                  example:
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846
                        name:
                          enUS: Mr.
                      first: Hugo
                      middle: Alexander
                      last: Mastrantonioni
                      formerLast: Johnson
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482
                        name:
                          enUS: III
                      preferredFirst: Hugh
                email:
                  type: string
                  description: The email of the supervisor
                externalUserId:
                  type: string
                  description: The external user id of the supervisor
              example:
                supervisor:
                  id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7a
                  name:
                    prefix:
                      id: d9079570-57f0-4530-b889-a07c95acb846
                      name:
                        enUS: Mr.
                    first: Hugo
                    middle: Alexander
                    last: Mastrantonioni
                    suffix:
                      id: 99ace441-e900-4a4c-9731-c97ea8451482
                      name:
                        enUS: III
                    preferredFirst: Hugh
                  email: first@last.com
                  externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
            employeeType:
              type: object
              description: Employee type for the job
              properties:
                id:
                  type: string
                  description: Id of the translatable
                name:
                  type: string
                  description: The language that the translatable is in
                  additionalProperties:
                    type: string
                    description: The name
              example:
                workLocation:
                  id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                  name:
                    enUS: Toronto Headquarters
          example:
            id: 55a3111e-3f5b-55b0-ac31-55dba5e5aa5b
            code: HCOPS
            name:
              enUS: Lead Tech
              esES: Tecnico Principal
            requisitionId: DEV10113
            selectedFLSAStatus: 1
            componentCompany:
              id: f8bbaf0c-d801-5b55-1ef5-1ea55e5155c5
              name: Acme Industries
            workLocation:
              id: b1ee5055-51be-5a5d-aa01-5ef5d55531f5
              name: Acme Lab One
            supervisor:
              id: 51e5f31b-5155-5aef-51f0-f1b853bb5f8a
              name:
                prefix:
                  id: 08505515-581e-50a1-5f5e-515d5b35f5ff
                  name:
                    enUS: Mr.
                first: Jeff
                middle: Blue
                last: Winner
                suffix:
                  id: 5558f505-8c15-5cd5-5aa3-dd555eas1555
                  name:
                    enUS: III
                preferredFirst: Joe
              email: first@last.com
              externalUserId: BF3DAEBD-5555-50BB-5AB1-C5833F51F5D0
            employeeType:
              id: 1ccb51fd-515b-5cbb-abb1-ced135551ae5
              name:
                enUS: Comp Mgt 5-Reg
        organizationLevels:
          type: array
          items:
            type: object
            description: Organization level
            properties:
              id:
                type: string
                description: Identifier of the organization level
              level:
                type: integer
                description: Level of the organization level
                enum:
                  - Level 1 = 1
                  - Level 2 = 2
                  - Level 3 = 3
                  - Level 4 = 4
              code:
                type: string
                description: >-
                  Unique code of a organization that the new hire is associated
                  with
              description:
                type: string
                description: >-
                  Description of a organization that the new hire is associated
                  with.
            example:
              'id:': 3990d626-4130-48c8-b87e-cd219e6cd405
              level: 1
              code: PROD
              description: Product development team
        compensation:
          type: object
          description: Compensation of the new hire
          properties:
            isFullTime:
              type: boolean
              description: Whether the new hire is full time
            isSalaried:
              type: boolean
              description: Whether the new hire is salaried
            workHours:
              type: number
              description: Work hours of the new hire
            weeklyHours:
              type: number
              description: Weekly hours of the new hire
            currencyType:
              type: string
              description: Currency type of the new hire's pay
            currency:
              type: object
              description: Currency of the new hire
              properties:
                code:
                  type: string
                  description: Code of the translatable
                name:
                  type: string
                  description: The language that the translatable is in
                  additionalProperties:
                    type: string
                    description: The name
              example:
                country:
                  code: USA
                  name:
                    enUS: United States
            payRate:
              type: number
              description: Pay rate of the new hire
            ratePer:
              type: object
              description: Pay period of the new hire
              properties:
                code:
                  type: string
                  description: Code of the translatable
                name:
                  type: string
                  description: The language that the translatable is in
                  additionalProperties:
                    type: string
                    description: The name
              example:
                country:
                  code: USA
                  name:
                    enUS: United States
          example:
            isFullTime: true
            isSalaried: false
            workHours: 40
            weeklyHours: 168
            currencyType: USD
            currency:
              code: USD
              name:
                enUS: US Dollar
            payRate: 20
            ratePer:
              code: H
              name:
                enUS: Hour
        onboardingOwner:
          type: object
          description: Onboarding owner for the new hire
          properties:
            id:
              type: string
              description: Id of the onboarding owner
            externalUserId:
              type: string
              description: External user identifier of the onboarding owner
            email:
              type: string
              description: Email of the onboarding owner
            name:
              type: object
              description: Name of the onboarding owner
              properties:
                prefix:
                  type: object
                  description: Prefix of the new hire in translatable format
                  properties:
                    id:
                      type: string
                      description: Id of the translatable
                    name:
                      type: string
                      description: The language that the translatable is in
                      additionalProperties:
                        type: string
                        description: The name
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                      name:
                        enUS: Toronto Headquarters
                first:
                  type: string
                  description: First name
                middle:
                  type: string
                  description: Middle name
                last:
                  type: string
                  description: Last name
                formerLast:
                  type: string
                  description: Former last name
                suffix:
                  type: object
                  description: Suffix of the new hire in translatable format
                  properties:
                    id:
                      type: string
                      description: Id of the translatable
                    name:
                      type: string
                      description: The language that the translatable is in
                      additionalProperties:
                        type: string
                        description: The name
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  type: string
                  description: Preferred first name
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482
                    name:
                      enUS: III
                  preferredFirst: Hugh
          example:
            id: 2d42c7a5-52de-402e-92af-493b5b7f0682
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482
                name:
                  enUS: III
              preferredFirst: Hugh
            email: Hugo@got.us
            externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        hireDate:
          type: string
          description: Hire date of the new hire
          format: date-time
        orientationDate:
          type: string
          description: Orientation date of the new hire
          format: date-time
        startDate:
          type: string
          description: Start date of the new hire
          format: date-time
        pastStartDateReason:
          type: string
          description: >-
            Reason why the new hire start date is 4 or more business days in the
            past
        mentor:
          type: object
          description: Mentor of the new hire
          properties:
            id:
              type: string
              description: Id of the mentor
            externalUserId:
              type: string
              description: External user identifier of the mentor
            email:
              type: string
              description: Email of the mentor
            name:
              type: object
              description: Name of the mentor
              properties:
                prefix:
                  type: object
                  description: Prefix of the new hire in translatable format
                  properties:
                    id:
                      type: string
                      description: Id of the translatable
                    name:
                      type: string
                      description: The language that the translatable is in
                      additionalProperties:
                        type: string
                        description: The name
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                      name:
                        enUS: Toronto Headquarters
                first:
                  type: string
                  description: First name
                middle:
                  type: string
                  description: Middle name
                last:
                  type: string
                  description: Last name
                formerLast:
                  type: string
                  description: Former last name
                suffix:
                  type: object
                  description: Suffix of the new hire in translatable format
                  properties:
                    id:
                      type: string
                      description: Id of the translatable
                    name:
                      type: string
                      description: The language that the translatable is in
                      additionalProperties:
                        type: string
                        description: The name
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  type: string
                  description: Preferred first name
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482
                    name:
                      enUS: III
                  preferredFirst: Hugh
            description:
              type: string
              description: Description of the mentor
          example:
            id: 2d42c7a5-52de-402e-92af-493b5b7f0682
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482
                name:
                  enUS: III
              preferredFirst: Hugh
            email: talisa@got.us
            externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
            description: >-
              Suzie is THE person who knows the product best. She loves helping
              new team members.
        personalMessage:
          type: string
          description: Personalized welcome message for the new hire
        provisioning:
          type: object
          description: Provisioning for the new hire
          properties:
            provisioningItems:
              type: array
              description: The list of provisioning items selected for this New Hire
              items:
                type: object
                description: An individual provisioning item that is assigned to a new hire
                properties:
                  id:
                    type: string
                    description: Id of the provisioning item
                  name:
                    type: string
                    description: Category of the provisioning item
                  recipient:
                    type: string
                    description: Recipient of the provisioning item
                  selectedOption:
                    type: object
                    description: Selected option for the provisioning item
                    properties:
                      id:
                        type: string
                        description: Unique identifier of the Option
                      description:
                        type: string
                        description: Description of the Option
                    example:
                      id: d5b79e4e-da8c-4017-9dc0-df30cb48fbf4
                      description: Apple iPad
                  comments:
                    type: string
                    description: Comment on the provisioning item
                example:
                  NewHireProvisioningItemReadModel:
                    id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                    name: Corporate Credit Card
                    recipient: accounting@company.com
                    selectedOption:
                      id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                      description: Amax Card
                    comments: Platinum level
            summaryEmailRecipients:
              type: array
              description: >-
                These emails receive updates about this new hire's provisioning
                items
              items:
                type: string
                description: >-
                  An individual email that receives updates on the new hire's
                  provisioning items
          example:
            provisioning:
              provisioningItems:
                - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                  name: Corporate Credit Card
                  recipient: accounting@company.com
                  selectedOption:
                    id: 6790f864-b0ff-4b1b-a3ac-23033c671c44
                    description: Deluxe card
                  comments: A credit card
                - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bd
                  name: Network Account
                  recipient: helpdesk@company.com
                  selectedOption:
                    id: a38d541b-16f7-46b6-b48a-892cb3831784
                    description: Security Level 2 Account
                  comments: Allow access to data
                - id: add33aee-ebff-4d50-8f45-9d7ab820c053
                  name: Phone Type
                  recipient: helpdesk@company.com
                  selectedOption:
                    id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                    description: Galaxy S5
                  comments: Black
              summaryEmailRecipients:
                - fred@bluebill.com
                - jred@bluebill.com
                - ned@bluebill.com
        onboardingStatus:
          type: string
          description: The status of the new hire in onboarding
        identityUserId:
          type: string
          description: Identity user identifier of the new hire
        externalUserId:
          type: string
          description: External user identifier of the new hire
        employeeNumber:
          type: string
          description: Employee number of the new hire
        sentToProcessHireDate:
          type: string
          description: Date that the new hire was processed
          format: date-time
        launchedOn:
          type: string
          description: Launch date of the new hire
          format: date-time
        createdAt:
          type: string
          description: Creation date of the new hire
          format: date-time
        updatedAt:
          type: string
          description: Last updated date of the new hire
          format: date-time
      example:
        contactInformation:
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846
              name:
                enUS: Mr.
            first: Hugo
            middle: Alexander
            last: Mastrantonioni
            formerLast: Johnson
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482
              name:
                enUS: III
            preferredFirst: Hugh
          emailAddress: hugo2296@gmail.com
          primaryPhone: '3056985433'
          secondaryPhone: '3056986533'
          address:
            line1: 123 Main St
            line2: APT. 101
            city: Toronto
            postalCode: M1R0E9
            county: County of Canada
            stateCode: 'ON'
            countryCode: CAN
            country:
              code: CAN
              name:
                enUS: Canada
        job:
          id: 96a5833e-5f4b-46b0-ac58-41dba1e4aa1b
          code: DJOB
          name:
            enUS: Lead Tech
            esES: Tecnico Principal
          requisitionId: DEV30335
          selectedFLSAStatus: 2
          supervisor:
            id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7a
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846
                name:
                  enUS: Mr.
              first: Joe
              middle: Jose
              last: Santo
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482
                name:
                  enUS: Jr
              preferredFirst: Joseph
            email: jsanto@example.com
            externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
          componentCompany:
            id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
            name: Wayne Enterprises
          workLocation:
            id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
            name: Toronto Headquarters
          employeeType:
            id: 8ccb43fd-686b-4cbb-abb3-ced359148ae1
            name:
              enUS: Comp Mgt 1-Reg
        compensation:
          isFullTime: true
          isSalaried: true
          workHours: 40
          weeklyHours: 168
          currencyType: CAD
          currency:
            code: CAD
            name:
              enUS: Canadian Dollar
          payRate: 50000
          ratePer:
            code: 'Y'
            name:
              enUS: Year
        mentor:
          id: 56f378ee-90d4-44ec-9ab7-83f2437d1fe6
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846
              name:
                enUS: Mr.
            first: Oden
            middle: Joe
            last: Leonerd
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482
              name:
                enUS: III
            preferredFirst: Kevin
          email: oden_leon@gmail.com
          description: >-
            Oden will be your mentor and is THE person to get you up to speed on
            the product. She loves helping new team members.
          externalUserId: 145A494C-DAFD-4454-881C-6700C85512C8
        onboardingOwner:
          id: 2d42c7a5-52de-402e-92af-493b5b7f0682
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846
              name:
                enUS: Mr.
            first: Jared
            middle: Joseph
            last: Nalin
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482
              name:
                enUS: III
            preferredFirst: Jared
          email: jared_nalin@example.com
          externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        onboardingStatus: Launched
        sentToProcessHireDate:
          utcInstant: '2018-06-07T17:44:25.358Z'
          offset: '-04:00:00'
        launchedOn:
          utcInstant: '2018-06-07T17:44:25.358Z'
          offset: '-04:00:00'
        hireDate: '2018-06-23T00:00:00Z'
        orientationDate: '2018-07-06T00:00:00Z'
        startDate: '2018-06-30T00:00:00Z'
        organizationLevels:
          - id: b7a43db9-73c7-43d6-aaab-7b2bc20ed50f
            level: 1
            code: PROD
            description: Product division
          - id: 8e4507db-330b-466d-8786-9f55da5f6c31
            level: 2
            code: PR
            description: Public relations
          - id: 2bf4a848-2926-485f-aa47-4aa8db90921b
            level: 3
            code: STAT
            description: Stanton branch
          - id: 3c792567-7494-4f84-91ae-73c797c714ef
            level: 4
            code: SALES
            description: Sales team
        provisioning:
          provisioningItems:
            - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
              name: Corporate Credit Card
              recipient: accounting@company.com
              selectedOption:
                id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                description: Amax Card
              comments: Requires a platinum Amax Card
            - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bd
              name: Network Account
              recipient: helpdesk@company.com
              selectedOption:
                id: 3c792567-7494-4f84-91ae-73c797c714ef
                description: Super Account
              comments: Highest clearance
            - id: add33aee-ebff-4d50-8f45-9d7ab820c053
              name: Phone Type
              recipient: helpdesk@company.com
              selectedOption:
                id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
                description: Galaxy S5
              comments: Requires a black phone
          summaryEmailRecipients:
            - first@last.com
            - last@beuh.com
            - Joe@erad.com
        identityUserId: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
        externalUserId: b7a4fd34-73c7-43d6-aaab-7b2bc20ed50f
        employeeNumber: '1234567890'
        personalMessage: >-
          Hugo, I was very impressed with your passion. I am looking forward to
          working with you and I know your expertise in this space will help our
          team get to the next level.
        pastStartDateReason: An internal audit revealed that the new hire was not initiated
        id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
        createdAt: '2018-05-29T19:30:35.95Z'
        updatedAt: '2018-06-07T17:44:25.378Z'
    NewHirePostModel:
      type: object
      properties:
        contactInformation:
          type: object
          description: Contact information for the new hire
          properties:
            name:
              type: object
              description: Name of the new hire
              properties:
                prefix:
                  type: object
                  description: Prefix of the new hire
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the prefix
                    code:
                      type: string
                      description: UltiPro prefix code
                  example:
                    prefix:
                      id: ba00d403-e240-4c16-b894-92036dbb4b0f
                      code: MS
                first:
                  type: string
                  description: >-
                    First name of the new hire. maxLength: 50 for hires in
                    US/Canadian companies. 100 otherwise
                  maxLength: 100
                middle:
                  type: string
                  description: Middle name of the new hire
                  maxLength: 50
                last:
                  type: string
                  description: >-
                    Last name of the new hire. maxLength: 50 for hires in
                    US/Canadian companies. 100 otherwise
                  maxLength: 100
                formerLast:
                  type: string
                  description: >-
                    Former last name of the new hire. maxLength: 30 for hires in
                    US/Canadian companies. 100 otherwise
                  maxLength: 100
                suffix:
                  type: object
                  description: Suffix of the new hire
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the suffix
                    code:
                      type: string
                      description: UltiPro suffix code
                  example:
                    prefix:
                      id: ba00d403-e240-4c16-b894-92036dbb4b0f
                      code: SR
                preferredFirst:
                  type: string
                  description: >-
                    Preferred first name of the new hire. maxLength: 50 for
                    hires in US/Canadian companies. 100 otherwise
                  maxLength: 100
              required:
                - first
                - last
              example:
                name:
                  prefix:
                    code: MR
                  first: Firstname
                  middle: Middlename
                  last: Lastname
                  formerLast: Formerlastname
                  suffix:
                    id: ba00d403-e240-4c16-b894-92036dbb4b0f
                  preferredFirst: Preferred
            emailAddress:
              type: string
              description: Email address of the new hire
              maxLength: 254
            primaryPhone:
              type: string
              description: >-
                Primary phone number of the new hire. maxLength: 50 for hires
                not in US/Canadian address country. If hire's address country is
                US/Canada, a valid phone format is expected
              maxLength: 50
            secondaryPhone:
              type: string
              description: >-
                Secondary phone number of the new hire. maxLength: 50 for hires
                not in US/Canadian address country. If hire's address country is
                US/Canada, a valid phone format is expected
              maxLength: 50
            address:
              type: object
              description: Address of the new hire
              properties:
                line1:
                  type: string
                  description: >-
                    Line 1 of the address. maxLength: 100 for US/Canadian
                    address country, 255 otherwise
                  maxLength: 255
                line2:
                  type: string
                  description: >-
                    Line 2 of the address. maxLength: 100 for US/Canadian
                    address country, 255 otherwise
                  maxLength: 255
                city:
                  type: string
                  description: >-
                    City of the address. maxLength: 50 for US/Canadian address
                    country, 255 otherwise
                  maxLength: 255
                postalCode:
                  type: string
                  description: >-
                    Zip/postal code of the address. maxLength: 50 for hires not
                    in US/Canadian address country. If hire's address country is
                    US/Canada, a valid postal code format is expected
                  maxLength: 50
                county:
                  type: string
                  description: >-
                    County name of the address. maxLength: 30 for US/Canadian
                    address country, 255 otherwise
                  maxLength: 255
                stateCode:
                  type: string
                  description: State code of the address
                countryCode:
                  type: string
                  description: ISO country code of the address
              example:
                line1: Line 1
                line2: Line 2
                city: Weston
                postalCode: '33326'
                county: Broward
                stateCode: FL
                countryCode: USA
          required:
            - emailAddress
          example:
            name:
              prefix:
                code: MR
              first: Firstname
              middle: Middlename
              last: Lastname
              formerLast: Formerlastname
              suffix:
                id: ba00d403-e240-4c16-b894-92036dbb4b0f
            emailAddress: first@last.com
            primaryPhone: 954-687-8909
            secondaryPhone: '9545554567'
            address:
              line1: Line 1
              line2: Line 2
              city: Weston
              zipCode: '33326'
              county: Broward
              stateCode: FL
              countryCode: USA
        job:
          type: object
          description: Job information for the new hire
          properties:
            id:
              type: string
              description: Unique identifier of the job
            code:
              type: string
              description: UltiPro job code
            requisitionId:
              type: string
              description: RequisitionId of the job
              maxLength: 50
            componentCompany:
              type: object
              description: Component company of the job
              properties:
                id:
                  type: string
                  description: Unique identifier of the component company
                code:
                  type: string
                  description: UltiPro component company Id
              example:
                prefix:
                  id: ba00d403-e240-4c16-b894-92036dbb4b0f
                  code: SDXUT
            workLocation:
              type: object
              description: Work location of the job
              properties:
                id:
                  type: string
                  description: Unique identifier of the work location
                code:
                  type: string
                  description: UltiPro work location code
              example:
                prefix:
                  id: ba00d403-e240-4c16-b894-92036dbb4b0f
                  code: FLLPP
            supervisor:
              type: object
              description: Supervisor of the job
              properties:
                id:
                  type: string
                  description: Onboarding employee Id
                code:
                  type: string
                  description: Person Id from UltiPro
              example:
                prefix:
                  id: ba00d403-e240-4c16-b894-92036dbb4b0f
                  code: CA00D403-E240-4C16-B894-92036DBB4B0F
            employeeType:
              type: object
              description: Employee type for the job
              properties:
                id:
                  type: string
                  description: Unique identifier of the employee type
                code:
                  type: string
                  description: UltiPro employee type code
              example:
                prefix:
                  id: ba00d403-e240-4c16-b894-92036dbb4b0f
                  code: ET347
            selectedFLSAStatus:
              type: integer
              description: Selected FLSA status for the job
              enum:
                - Not specified = 0
                - Exempt = 1
                - NonExempt = 2
          example:
            code: MGT
            requisitionId: '1234'
            selectedFLSAStatus: 1
            componentCompany:
              code: FZAJ2
            workLocation:
              code: QU4FL
            supervisor:
              code: 89F8FA04-7055-47D2-943B-D2A409FFA3BF
            employeeType:
              code: INT
        organizationLevels:
          type: array
          items:
            type: object
            description: Organization level
            properties:
              id:
                type: string
                description: Identifier of the organization level
              level:
                type: integer
                description: Level of the organization level
                enum:
                  - Level 1 = 1
                  - Level 2 = 2
                  - Level 3 = 3
                  - Level 4 = 4
              code:
                type: string
                description: Code of the organization level
            example:
              id: 89e9f572-4c63-4630-8008-dd09c97ab64c
              level: 1
              code: ORG1
        compensation:
          type: object
          description: Compensation information for the new hire
          properties:
            isFullTime:
              type: boolean
              description: Whether the new hire is full time
            isSalaried:
              type: boolean
              description: Whether the new hire is salaried
            workHours:
              type: number
              description: Work hours of the new hire
            weeklyHours:
              type: number
              description: >-
                Weekly hours of the new hire. Only applicable for hires not in
                US/Canadian companies
              maximum: 168
            currencyCode:
              type: string
              description: ISO currency code of the new hire
            payRate:
              type: number
              description: Pay rate of the new hire
            ratePer:
              type: string
              description: >-
                Pay period of the new hire. Accepts "H" (Hour), "W" (Week), "P"
                (Period), "Y" (Year)
          example:
            isFullTime: true
            isSalaried: false
            workHours: 40
            weeklyHours: 168
            currencyCode: USD
            payRate: 20
            ratePer: H
        onboardingOwnerId:
          type: string
          description: External user identifier of the onboarding owner
        hireDate:
          type: string
          description: Hire date of the new hire
          format: date-time
        orientationDate:
          type: string
          description: Orientation date of the new hire
          format: date-time
        startDate:
          type: string
          description: Start date of the new hire
          format: date-time
        pastStartDateReason:
          type: string
          description: >-
            Reason why the new hire start date is 4 or more business days in the
            past
          maxLength: 250
        mentor:
          type: object
          description: Mentor for the new hire
          properties:
            id:
              type: string
              description: Onboarding employee id
            code:
              type: string
              description: Person Id from UltiPro
            description:
              type: string
              maxLength: 85
              description: Brief description of mentor
          example:
            prefix:
              id: ba00d403-e240-4c16-b894-92036dbb4b0f
              code: MR
              description: >-
                Suzie is THE person who knows the product best. She loves
                helping new team members.
        personalMessage:
          type: string
          description: Personal message for the new hire
          maxLength: 250
      example:
        contactInformation:
          name:
            prefix:
              code: MR
            first: Hugo
            middle: Alexander
            last: Mastrantonioni
            formerLast: Johnson
            preferredFirst: Hugh
            suffix:
              code: III
          primaryPhone: '3056985433'
          secondaryPhone: '3056986533'
          address:
            line1: 123 Main St
            line2: APT. 101
            city: Toronto
            postalCode: M1R0E9
            county: County of Canada
            stateCode: 'ON'
            countryCode: CAN
          emailAddress: hugo2296@gmail.com
        onboardingOwnerId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        hireDate: 2018/06/23
        startDate: 2018/06/30
        orientationDate: 2018/07/06
        pastStartDateReason: An internal audit revealed that the new hire was not initiated
        compensation:
          fullTime: true
          salaried: true
          workHours: 40
          weeklyHours: 0
          currencyCode: CAD
          payRate: 50000
          ratePer: 'Y'
        job:
          code: DJOB
          requisitionId: DEV30335
          selectedFLSAStatus: 2
          componentCompany:
            code: FZAJ2
          workLocation:
            code: QU4FL
          supervisor:
            code: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
          employeeType:
            code: CMPMGT
        organizationLevels:
          - level: 1
            code: PROD
          - level: 2
            code: PR
          - level: 3
            code: STAT
          - level: 4
            code: SALES
        mentor:
          id: 2c9e2b00-f229-4930-9d82-e86e11d6440b
          description: >-
            Oden will be your mentor and is THE person to get you up to speed on
            the product. She loves helping new team members.
        personalMessage: >-
          Hugo, I was very impressed with your passion. I am looking forward to
          working with you and I know your expertise in this space will help our
          team get to the next level.
    TimeItem:
      type: object
      required:
        - dateWorked
        - hoursWorked
      properties:
        employeeNumber:
          description: >-
            The UltiPro EmployeeNumber, either this value OR the EEID MUST be
            specified
          type: string
          maxLength: 9
        eeId:
          description: >-
            The UltiPro EEID, either this value OR the EmployeeNumber MUST be
            specified
          type: string
          minLength: 12
          maxLength: 12
        companyCode:
          description: >-
            The UltiPro CompanyCode, either this value OR the CoID MUST be
            specified
          type: string
          maxLength: 5
        coId:
          description: >-
            The UltiPro CoID, either this value OR the CompanyCode MUST be
            specified
          type: string
          minLength: 5
          maxLength: 5
        dateWorked:
          description: The date the hours were worked
          type: string
          format: date-time
        hoursWorked:
          description: The number of hours worked
          type: number
          multipleOf: 0.01
        id:
          description: This value should be NULL from the originator
          type: number
    TimeItemList:
      type: object
      required:
        - timeData
      properties:
        timeData:
          type: array
          items:
            $ref: '#/components/schemas/TimeItem'
    IntegrationAuditConfiguration:
      type: object
      properties:
        tableName:
          type: string
        fieldName:
          type: string
        isAudited:
          type: string
        isDefaultAudit:
          type: string
    InternationalEmployeeModel:
      type: object
      properties:
        caste:
          type: string
        casteDescription:
          type: string
        countryCode:
          type: string
        employeeId:
          type: string
        effectiveDate:
          format: date-time
          type: string
        ethnicIdCode:
          type: string
        healthCareId:
          type: string
        isAboriginal:
          type: string
        nationalId:
          type: string
        nationalIdExpirationDate:
          format: date-time
          type: string
        oldNationalId:
          type: string
        oldNationalIdExpirationDate:
          format: date-time
          type: string
        userDefinedField1:
          type: string
        userDefinedField2:
          type: string
        userDefinedField3:
          format: float
          type: number
        userDefinedField4:
          format: float
          type: number
        userDefinedField5:
          format: date-time
          type: string
        userDefinedField6:
          format: date-time
          type: string
        userDefinedField7:
          type: string
        userDefinedField8:
          type: string
        userDefinedField9:
          type: string
        userDefinedField10:
          format: float
          type: number
        userDefinedField11:
          format: float
          type: number
        userDefinedField12:
          format: date-time
          type: string
        userDefinedField13:
          format: date-time
          type: string
        userDefinedField14:
          type: string
        currencyCode:
          type: string
        isMilitaryReserve:
          type: string
        isMilitaryServiceCompleted:
          type: string
        medicalRegionCode:
          type: string
    JobGroupDetail:
      type: object
      properties:
        jobGroupCode:
          type: string
        jobGroupCodeDescription:
          type: string
        jobGroupNotes:
          type: string
        jobGroupCountryCode:
          type: string
    jobs:
      type: object
      required:
        - code
        - title
        - countryCode
      properties:
        countryCode:
          type: string
          description: Job country code.
        code:
          type: string
          description: Job Code, the unique identifier.
        title:
          type: string
          description: Job title.
        jobFamilyCode:
          type: string
          description: Job family code.
        isActive:
          type: boolean
          description: The job status.
    OptionRate:
      type: object
      properties:
        deductionCode:
          type: string
        benefitOption:
          type: string
        employeeRate:
          type: number
        employerRate:
          type: number
        effectiveDate:
          format: date-time
          type: string
        payFrequency:
          type: string
        rateStopDate:
          format: date-time
          type: string
    OpenEnrollmentEmployeeDeductions:
      type: object
      properties:
        benefitAmount:
          type: number
        benefitAmountRateOrPercent:
          type: number
        benefitOption:
          type: string
        addCoverage:
          type: boolean
        changeReason:
          type: string
        benefitStartDate:
          format: date-time
          type: string
        benefitStatus:
          type: string
        benefitStatusDate:
          format: date-time
          type: string
        benefitStopDate:
          format: date-time
          type: string
        companyId:
          type: string
        customAmount1:
          type: number
        customAmount2:
          type: number
        customDate:
          format: date-time
          type: string
        changeDatetime:
          format: date-time
          type: string
        createDatetime:
          format: date-time
          type: string
        deductionCode:
          type: string
        deductionType:
          type: string
        employeeAmount:
          type: number
        employeeCalculationRateOrPercent:
          type: number
        employeeEligibilityDate:
          format: date-time
          type: string
        employeeGoalAmt:
          type: number
        employeeGoalToDateAmount:
          type: number
        employeeId:
          type: string
        employeeMemberOrCaseNo:
          type: string
        employeeYearToDateAmount:
          type: number
        evidenceofInsurabilityDate:
          format: date-time
          type: string
        needEvidenceOfInsurability:
          type: boolean
        evidenceofInsurabilityDesiredAmount:
          type: number
        employeeEligibilityDesiredCalculationRateOrPercent:
          type: integer
        employerAmount:
          type: number
        employerCalculationRateOrPercent:
          type: number
        employerCalculationRule:
          type: string
        employerYearToDateAmount:
          type: number
        isDeductionOffset:
          type: boolean
        medicalIndicator:
          type: boolean
        deductionNotes:
          type: string
        primaryCarePhysician:
          type: string
        primaryCarePhysicianId:
          type: string
        deductionStartDate:
          format: date-time
          type: string
        deductionStopDate:
          format: date-time
          type: string
        benefitWaiveReason:
          type: string
        isBenefitWaived:
          type: boolean
        oeDrop:
          type: boolean
    token-response:
      type: object
      properties:
        access_token:
          type: string
          description: This is an encrypted string, JWT token
        token_type:
          type: string
          description: Bearer token
        expires_in:
          type: number
          description: When the token will expire, in seconds
        scope:
          type: string
          description: >-
            the scope of what you are entitled to access, part of your
            integration setup
    OpenEnrollmentDependentDeductions:
      type: object
      properties:
        benefitAmount:
          type: number
        changeReason:
          type: string
        relationship:
          type: string
        benefitStartDate:
          format: date-time
          type: string
        benefitStatus:
          type: string
        benefitStatusDate:
          format: date-time
          type: string
        benefitStopDate:
          format: date-time
          type: string
        companyId:
          type: string
        changeDatetime:
          format: date-time
          type: string
        contactId:
          type: string
        createDatetime:
          format: date-time
          type: string
        certificateNo:
          type: string
        currentCoId:
          type: string
        declinedByCarrier:
          type: string
        declinedByCarrierDate:
          format: date-time
          type: string
        declinedByCarrierReason:
          type: string
        deductionCode:
          type: string
        deductionType:
          type: string
        depBPlanTVID:
          type: number
        employeeId:
          type: string
        evidenceofInsurabilityDate:
          format: date-time
          type: string
        needEvidenceOfInsurability:
          type: boolean
        employerAmount:
          type: number
        deductionNotes:
          type: string
        primaryCarePhysician:
          type: string
        primaryCarePhysicianId:
          type: string
        systemId:
          type: string
        isBenefitWaived:
          type: boolean
        oeDrop:
          type: boolean
    org-levels:
      type: object
      required:
        - code
        - description
        - level
      properties:
        budgetGroup:
          type: string
          description: Organizational budget group.
        code:
          type: string
          description: Organization Code, one half of the unique identifier.
        currentYearBudgetFTE:
          type: number
          format: double
          description: Current year to date budget for full time employee.
          maxLength: 99999999999999
        currentYearBudgetSalary:
          type: number
          format: double
          description: Current year to date budget for salary.
          maxLength: 99999999999999
        description:
          type: string
          description: Organization Level Description.
          maxLength: 25
        glSegment:
          type: string
          description: >-
            General Ledger Segment. Alpha-numeric and special characters
            allowed.
          minLength: 1
          maxLength: 15
        lastYearBudgetFTE:
          type: number
          description: Last year Budget for full time employee.
          maxLength: 99999999999999
        lastYearBudgetSalary:
          type: number
          description: Last year Budget salary.
          maxLength: 99999999999999
        level:
          type: number
          description: >-
            Organazation Level, one half of unique identifier. Cannot be
            updated.
        levelDescription:
          type: string
          description: Organization description. Cannot be updated.
        reportingCategory:
          type: string
          description: The reporting category code.
        isActive:
          type: boolean
          description: The organization level status.
    org-levels-body:
      type: array
      items:
        type: object
        required:
          - code
          - description
          - level
        properties:
          budgetGroup:
            type: string
            description: Organizational budget group.
          code:
            type: string
            description: Organization Code, one half of the unique identifier.
          currentYearBudgetFTE:
            type: number
            format: double
            description: Current year to date budget for full time employee.
            maxLength: 99999999999999
          currentYearBudgetSalary:
            type: number
            format: double
            description: Current year to date budget for salary.
            maxLength: 99999999999999
          description:
            type: string
            description: Organization Level Description.
            maxLength: 25
          glSegment:
            type: string
            description: >-
              General Ledger Segment. Alpha-numeric and special characters
              allowed.
            minLength: 1
            maxLength: 15
          lastYearBudgetFTE:
            type: number
            description: Last year Budget for full time employee.
            maxLength: 99999999999999
          lastYearBudgetSalary:
            type: number
            description: Last year Budget salary.
            maxLength: 99999999999999
          level:
            type: number
            description: >-
              Organazation Level, one half of unique identifier. Cannot be
              updated.
          levelDescription:
            type: string
            description: Organization description. Cannot be updated.
          reportingCategory:
            type: string
            description: The reporting category code.
          isActive:
            type: boolean
            description: The organization level status.
    MultiStatusResponse:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
        errorCount:
          type: number
        multistatus:
          type: array
          items:
            properties:
              sequenceId:
                type: number
              status:
                description: http status
                type: string
              modelstate:
                description: Only present if status is error
                type: object
                properties:
                  property-name:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                        type:
                          type: string
              body:
                description: Only present if status is success
                type: object
                properties:
                  eeid:
                    type: string
                  coid:
                    type: array
                    items:
                      type: string
                  schema:
                    $ref: '#/components/schemas/pto-plans'
        success_count:
          type: number
        error_count:
          type: number
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
    PayRegister:
      type: object
      properties:
        annualSalary:
          type: number
        autoAllocate:
          type: boolean
        bonusTotalHours:
          type: number
        bonusTotalOTHours:
          type: number
        checkAddMode:
          type: string
        checkAmount:
          type: number
        companyId:
          type: string
        payPeriodFrequency:
          type: string
        currencyCode:
          type: string
        directDepositAmount:
          type: number
        documentNumber:
          type: string
        earningTaxReportingType:
          type: string
        employeeId:
          type: string
        employeeStatus:
          type: string
        employeeNumber:
          type: string
        checkId:
          type: string
        hourlyPayRate:
          type: number
        isRegularPayForCumulative:
          type: string
        isVoided:
          type: boolean
        isVoidingRecord:
          type: boolean
        jobCode:
          type: string
        lastRegularPayDate:
          format: date-time
          type: string
        locationCode:
          type: string
        nameFirst:
          type: string
        nameLast:
          type: string
        nameMiddle:
          type: string
        nameSuffix:
          type: string
        netAmount:
          type: number
        organizationLevel1:
          type: string
        organizationLevel2:
          type: string
        organizationLevel3:
          type: string
        organizationLevel4:
          type: string
        originalPayPeriodFrequency:
          type: string
        payDate:
          format: date-time
          type: string
        payGroup:
          type: string
        periodControl:
          type: string
        periodEndDate:
          format: date-time
          type: string
        periodStartDate:
          format: date-time
          type: string
        project:
          type: string
        reconciled:
          type: string
        reconcileDate:
          format: date-time
          type: string
        sequenceNumber:
          type: integer
        shift:
          type: string
        ssn:
          type: string
        stateSui:
          type: string
        suiGross:
          type: number
        taxCalculationGroupID:
          type: string
        taxCalculationSequence:
          type: string
        totalDeductionAmount:
          type: number
        totalEarningsAmount:
          type: number
        totalHours:
          type: number
        totalHoursWorked:
          type: number
        totalShiftAmount:
          type: number
        totalTaxAmount:
          type: number
        voidDate:
          format: date-time
          type: string
    PayGroupPayPeriods:
      type: object
      properties:
        isActive:
          type: boolean
        dateTimeChanged:
          type: string
          format: date-time
        dateTimeCreated:
          type: string
          format: date-time
        dateTimeFiscalEndDone:
          type: string
          format: date-time
        dateTimePeriodClosed:
          type: string
          format: date-time
        dateTimePeriodOpened:
          type: string
          format: date-time
        fiscalYearEnd:
          type: boolean
        isCtsCreated:
          type: boolean
        isPeriodClosed:
          type: boolean
        isQtdobPerControl:
          type: boolean
        isYtdobPerControl:
          type: boolean
        monthlyPayPeriodNumber:
          type: integer
        mqyEndFlag:
          type: string
        obType:
          type: string
        payDate:
          type: string
          format: date-time
        payDateSeq:
          type: integer
        payGroup:
          type: string
        payPeriodId:
          type: integer
        periodControl:
          type: string
        periodEndDate:
          type: string
          format: date-time
        periodStartDate:
          type: string
          format: date-time
        periodType:
          type: string
        suspAutoPay:
          type: string
        suspDirectDeposit:
          type: string
        userIdChanged:
          type: string
        userIdCreated:
          type: string
        notes:
          type: string
        auditKey:
          type: integer
        payrollStateId:
          type: integer
        combineNachaFileName:
          type: string
        combineNachaFileOverride:
          type: boolean
        txFilAppDateTime:
          type: string
          format: date-time
        txFilAppUserId:
          type: integer
        allowWebPyrlAfterYeRecon:
          type: boolean
        payrollChangeFlags:
          type: integer
        payrollTransitionFlags:
          type: integer
        instantCheckMoveRule:
          type: boolean
        bringInPayrollBatchLoad:
          type: boolean
        bringInPpiLoad:
          type: boolean
        bringInRetroPayLoad:
          type: boolean
        lmwActive:
          type: boolean
        roePayDate:
          type: string
          format: date-time
        taxArrearsCollectEnabled:
          type: boolean
    OrganizationReportingCategoryDetails:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        level:
          type: string
        integrationRecordId:
          type: string
    PayrollDeductionsHistory:
      type: object
      properties:
        allowPartialDeduction:
          type: string
        batchID:
          type: string
        benefitAmount:
          type: number
        benefitOption:
          type: string
        benefitProvider:
          type: string
        childSupportType:
          type: string
        companyId:
          type: string
        checkId:
          type: string
        currentArrearsAmount:
          type: number
        customAmount1:
          type: number
        customAmount2:
          type: number
        customDate:
          format: date-time
          type: string
        deductionCalculationBasisAmt:
          type: number
        deductionCode:
          type: string
        deductionForBonusOnly:
          type: string
        deductionPlanType:
          type: string
        deductionType:
          type: string
        deferredCompensationCap:
          type: number
        deferredCompensationRegularCap:
          type: number
        dependentRecordId:
          type: string
        employeeCalculationRateOrPercent:
          type: number
        employeeCalculaitonRule:
          type: string
        employeeCurrentAmount:
          type: number
        employeeDeductionLastPaid:
          format: date-time
          type: string
        employeeGoalAmount:
          type: number
        employeeGoalRule:
          type: string
        employeeGoalToDateAmount:
          type: number
        employeeId:
          type: string
        employeeOriginalAmount:
          type: number
        employeeNumber:
          type: string
        employerAnnualCapCalculationRule:
          type: string
        employerCalculationRateOrPercent:
          type: number
        employerCalculationRule:
          type: string
        employerCurrentAmount:
          type: number
        employerPeriodCapCalculationRule:
          type: string
        excludeFromWorkersCompensation:
          type: string
        generalLedgerExpenseAccount:
          type: string
        generalLedgerPayAccount:
          type: string
        is401k:
          type: boolean
        is403b:
          type: boolean
        is408k:
          type: boolean
        is408p:
          type: boolean
        is457:
          type: boolean
        is457b:
          type: boolean
        is457F:
          type: boolean
        is501C:
          type: boolean
        isD125:
          type: boolean
        isDeductionOffSet:
          type: boolean
        isDeferredCompensation:
          type: boolean
        isDependentCare:
          type: boolean
        isHousing:
          type: boolean
        isNonQualifiedPlan:
          type: boolean
        isPublicEmployeeRetirement:
          type: boolean
        isProrated:
          type: boolean
        isSection125:
          type: boolean
        isVoided:
          type: boolean
        isVoidingRecord:
          type: string
        payDate:
          format: date-time
          type: string
        payeeID:
          type: string
        payGroup:
          type: string
        periodControl:
          type: string
        recordId:
          type: number
        taxCalculationGroupId:
          type: string
        taxCategory:
          type: string
        timeclockCode:
          type: string
        vendor:
          type: string
        wageGarnishmentAdditionalArrearageAmount:
          type: number
        wageGarnishmentAllocateAsArrears:
          type: string
        wageGarnishmentAmountExempt:
          type: number
        wageGarnishmentAmountExemptFromLevy:
          type: number
        wageGarnishmentAmountExemtFromGarn:
          type: number
        wageGarnishmentAmountSubjectToCS:
          type: number
        wageGarnishmentAmountSubjectToGarnishment:
          type: number
        wageGarnishmentDeductionTaxCategory:
          type: string
        wageGarnishmentDisposableIncome:
          type: number
        wageGarnishmentMinimumWageFactor:
          type: number
        wageGarnishmentWageCode:
          type: string
        yearToDateDeferredCompensationCombinedAmount:
          type: number
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.Models.PcData:
      type: object
      properties:
        fieldRows:
          type: array
          items:
            $ref: >-
              #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.Models.FieldData
        className:
          type: string
        keyName:
          type: string
        keyValue:
          type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.v2.Models.PcData:
      type: object
      properties:
        fieldRows:
          type: array
          items:
            $ref: >-
              #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.v2.Models.FieldData
        className:
          type: string
        keyName:
          type: string
        keyValue:
          type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.Models.FieldData:
      type: object
      properties:
        fieldName:
          type: string
        fieldValue:
          type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.v2.Models.FieldData:
      type: object
      properties:
        fieldName:
          type: string
        fieldValue:
          type: string
    EmpPersonDetails:
      type: object
      properties:
        additionalName1:
          type: string
        additionalName2:
          type: string
        addressId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        addressIsOnTaxBoundary:
          type: boolean
        addressLatitude:
          format: double
          type: number
        cobraExport:
          type: string
        cobraIsActive:
          type: boolean
        cobraReason:
          type: string
        cobraStatus:
          type: string
        cobraStatusDate:
          format: date-time
          type: string
        communityBroadcastSmsCode:
          type: string
        consentElectronicW2:
          type: boolean
        consentElectronicw2pr:
          type: boolean
        dateDeceased:
          format: date-time
          type: string
        dateOfCobraEvent:
          format: date-time
          type: string
        dateOfCobraExport:
          format: date-time
          type: string
        dateOfCobraLetter:
          format: date-time
          type: string
        dateOfI9Expiration:
          format: date-time
          type: string
        datetimeChanged:
          format: date-time
          type: string
        datetimeCreated:
          format: date-time
          type: string
        disabilityType:
          type: string
        ethnicDescription:
          type: string
        formerName:
          type: string
        healthBloodType:
          type: string
        healthEyes:
          type: string
        healthHair:
          type: string
        healthHeightFeet:
          type: string
        healthHeightInches:
          type: string
        healthLastDonateDate:
          format: date-time
          type: string
        healthWeight:
          format: float
          type: number
        i9AlienNumber:
          type: string
        i9DocA:
          type: string
        i9DocB:
          type: string
        i9DocC:
          type: string
        i9Verified:
          type: boolean
        i9VisaType:
          type: string
        i9WorkAuth:
          type: string
        isDisabled:
          type: boolean
        isMultiPayGroup:
          type: boolean
        isSmoker:
          type: boolean
        militaryService:
          type: boolean
        militaryBranchServed:
          type: string
        militaryEra:
          type: string
        militaryIsDisabledVet:
          type: string
        militaryIsOthEligVet:
          type: string
        militaryIsOthEligVetBasis:
          type: string
        militaryIsActiveWartimeVet:
          type: string
        nameFormer:
          type: string
        previousSSN:
          type: string
        originCountry:
          type: string
        originLocation:
          type: string
        w2IsDeceased:
          type: boolean
        cobraNotes:
          type: string
        addressSms:
          type: string
        militarySeparationDate:
          format: date-time
          type: string
        homePhoneIsPrivate:
          type: boolean
        smsApprovals:
          type: boolean
        smsPayNotification:
          type: boolean
        i9VisaExpirationDate:
          format: date-time
          type: string
        militaryIsMedalVet:
          type: string
        lastNameNotSameAsSSCard:
          type: string
        chkCashingInstCode:
          type: string
        nationality1:
          type: string
        nationality2:
          type: string
        nationality3:
          type: string
        personId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        employeeId:
          type: string
        companyId:
          type: string
        userName:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        preferredName:
          type: string
        namePrefixCode:
          type: string
        nameSufixCode:
          type: string
        emailAddress:
          type: string
        emailAddressAlternate:
          type: string
        homePhone:
          type: string
        homePhoneCountry:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressCity:
          type: string
        addressState:
          type: string
        addressZipCode:
          type: string
        addressCountry:
          type: string
        addressCounty:
          type: string
        nationalId:
          type: string
        nationalIdCountry:
          type: string
        dateOfBirth:
          format: date-time
          type: string
        gender:
          type: string
        ethnicIDCode:
          type: string
        maritalStatusCode:
          type: string
        ssn:
          type: string
        ssnIsSuppressed:
          type: boolean
    Earning:
      type: object
      required:
        - refId
        - companyCode
        - empNo
        - code
        - source
      properties:
        refId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
          description: Unique identifier for each earnings.
        companyCode:
          type: string
          maximum: 5
          description: Company code associated with employee.
        empNo:
          type: string
          maximum: 9
          description: Employee number associated with employee for time data.
        chargeDate:
          type: string
          format: date-time
          description: >-
            Used in the calculation of coefficient overtime and tips processing.
            Formatting must conform to ISO 8601 UTC Format
        code:
          type: string
          maximum: 5
          description: Earnings code for time data
        hours:
          type: string
          format: number
          description: >-
            Number of hours associated with earnings, if appropriate. Decimal
            value up to 4 decimal places. Positive and negative values allowed.
        amount:
          type: string
          format: number
          description: >-
            Amount associated with earnings, if appropriate. Positive and
            negative values allowed.
        pieceCount:
          type: string
          format: number
          description: >-
            Number of pieces associated with earnings, if appropriate. Positive
            and negative values allowed.
        shiftCode:
          type: string
          maximum: 2
          description: Shift code associated with time data.
        location:
          type: string
          maximum: 6
          description: Location associated with employee.
        job:
          type: string
          maximum: 8
          description: Job code associated with employee’s time data.
        project:
          type: string
          maximum: 15
          description: Project code or value associated with employee’s time data.
        orgLvl1:
          type: string
          maximum: 6
          description: Organization level 1 code associated with employee’s time data
        orgLvl2:
          type: string
          maximum: 6
          description: Organization level 2 code associated with employee’s time data.
        orgLvl3:
          type: string
          maximum: 6
          description: Organization level 3 code associated with employee’s time data.
        orgLvl4:
          type: string
          maximum: 6
          description: Organization level 4 code associated with employee’s time data.
        payRate:
          type: string
          format: number
          description: >-
            Pay rate associated with employee’s time data.  Value overrides pay
            rate in UKG Pro.
        pieceRate:
          type: string
          format: number
          description: >-
            Piece rate associated with employee’s time data.  Value overrides
            piece rate in UKG Pro.
        roePayDate:
          type: string
          format: date-time
          description: The Record of Employment pay date.  Must be a valid pay date.
        adjEarnPeriodStartDate:
          format: date-time
          type: string
          description: Used for co-efficient overtime period adjustment start date.
        adjEarnPeriodEndDate:
          format: date-time
          type: string
          description: Used for co-efficient overtime period adjustment end date.
        checkSequence:
          type: integer
          description: >-
            Sequence of multiple checks for a single employee. Specify the type
            of additional pay (check or DDA) being added to the employee(s) via
            Time Clock Import. A - Creates an additional direct deposit advice
            with deductions (for employees  with existing DD setups). D -
            Creates an additional direct deposit with No deductions (for
            employees with existing DD setups). B - Creates an additional pay
            with deductions; this will create a live check for the employees. J
            -  Creates an additional pay with No deductions; this will create a
            live check for the employees 
        createPayType:
          type: string
          maximum: 1
          minimum: 1
          description: R - Creates a Regular Pay check.
        forcePayCreation:
          type: string
          maximum: 1
          minimum: 1
          description: >-
            To force the creation of an additional pay via Time clock import,
            set this to Y.
        grossUp:
          type: string
          maximum: 1
          description: This identifies if an earning is to be grossed up.
        grossUpTarget:
          type: integer
          description: Specified net amount.
        grossUpTaxCalcMethod:
          format: int32
          type: integer
          description: >-
            The Gross Up Tax Calculation Method (E_Batch.
            EbtGrossUpTaxCalcMethod) Numeric value to identify which taxes to
            include in the gross up calculation.
        source:
          type: string
          minimum: 1
          description: >-
            Source of the data as appropriate. Usually an alias of the system
            sending the data.
    ErrorDetails:
      type: object
      properties:
        refId:
          type: string
          format: uuid
        type:
          type: string
        title:
          type: string
        detail:
          type: string
    ErrorStatusResponse:
      type: object
      properties:
        error_count:
          type: number
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
    EarningStatusResponse:
      type: object
      properties:
        refId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        companyCode:
          type: string
        empNo:
          type: string
        chargeDate:
          type: string
          format: date-time
        code:
          type: string
        hours:
          type: string
        amount:
          type: string
        pieceCount:
          type: string
          format: number
        shiftCode:
          type: string
        location:
          type: string
        job:
          type: string
        project:
          type: string
        orgLvl1:
          type: string
        orgLvl2:
          type: string
        orgLvl3:
          type: string
        orgLvl4:
          type: string
        payRate:
          type: string
          format: number
        pieceRate:
          type: string
          format: number
        roePayDate:
          type: string
          format: date-time
        source:
          type: string
        isImportedIntoPayroll:
          type: boolean
        AdjEarnPeriodStartDate:
          type: string
          format: date-time
        AdjEarnPeriodEndDate:
          type: string
          format: date-time
        CheckSequence:
          type: integer
        CreatePayType:
          type: string
        ForcePayCreation:
          type: string
        GrossUp:
          type: string
        GrossUpTarget:
          type: integer
        GrossUpTaxCalcMethod:
          type: integer
    UltimateSoftware.Foundation.Services.Api.UltiPro.Configuration.PlatformConfiguration.Models.PcSchemaFilter:
      type: object
      properties:
        className:
          type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Configuration.PlatformConfiguration.Models.PcFieldSchema:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        dataType:
          type: string
    PositionReport:
      type: object
      properties:
        dateTimeChanged:
          type: string
          format: date-time
        dateTimeCreated:
          type: string
          format: date-time
        effectiveStartDate:
          type: string
          format: date-time
        effectiveStopDate:
          type: string
          format: date-time
        positionCode:
          type: string
        reportsToPositionCode:
          type: string
    Positions:
      type: object
      properties:
        alternateTitle:
          type: string
        companyId:
          type: string
        dateTimeChanged:
          format: date-time
          type: string
        dateTimeCreated:
          format: date-time
          type: string
        employeeType:
          type: string
        effectiveStartDate:
          format: date-time
          type: string
        effectiveStopDate:
          format: date-time
          type: string
        fundID:
          type: string
        glSegment:
          type: string
        isApproved:
          type: boolean
        isEligibleForBenefits:
          type: boolean
        isProrated:
          type: boolean
        jobcode:
          type: string
        locationCode:
          type: string
        notes:
          type: string
        organizationLevelCode1:
          type: string
        organizationLevelCode2:
          type: string
        organizationLevelCode3:
          type: string
        organizationLevelCode4:
          type: string
        overstaffingAllowed:
          type: boolean
        payGroupCode:
          type: string
        positionCode:
          type: string
        projectCode:
          type: string
        shiftGroupCode:
          type: string
        statusCode:
          type: string
        statusAsOfDate:
          format: date-time
          type: string
        userDefinedField01:
          type: string
        userDefinedField02:
          format: date-time
          type: string
        userDefinedField03:
          type: number
        userDefinedField04:
          type: object
          properties:
            isNull:
              type: boolean
            Value:
              type: number
        integrationRecordId:
          type: string
    pto-plans:
      type: object
      required:
        - employeeId
        - companyId
        - ptoPlan
      properties:
        employeeId:
          type: string
          description: Employee Identifier
        companyId:
          type: string
          description: Company Identifier
        ptoPlan:
          type: string
          description: PTO Plan Identifier
        earned:
          type: number
          format: double
          description: Amount of hours earned for PTO
        taken:
          type: number
          format: double
          description: Amount of hours taken for PTO
        pendingBalance:
          type: number
          format: double
          description: Balance of PTO hours
        earnedThroughDate:
          type: string
          description: Date in which PTO is earned through, format should be YYYY-MM-DD
        reset:
          type: string
          description: Date in which the PTO reset's, format should be YYYY-MM-DD
        pendingMoveDate:
          type: string
          description: >-
            Date to be used if pending rules are relevant, format should be
            YYYY-MM-DD
    pto-plans-body:
      type: array
      items:
        type: object
        required:
          - employeeId
          - companyId
          - ptoPlan
        properties:
          employeeId:
            type: string
            description: Employee Identifier
          companyId:
            type: string
            description: Company Identifier
          ptoPlan:
            type: string
            description: PTO Plan Identifier
          earned:
            type: number
            format: double
            description: Amount of hours earned for PTO
          taken:
            type: number
            format: double
            description: Amount of hours taken for PTO
          pendingBalance:
            type: number
            format: double
            description: Balance of PTO hours
          earnedThroughDate:
            type: string
            description: Date in which PTO is earned through, format should be YYYY-MM-DD
          reset:
            type: string
            description: Date in which the PTO reset's, format should be YYYY-MM-DD
          pendingMoveDate:
            type: string
            description: >-
              Date to be used if pending rules are relevant, format should be
              YYYY-MM-DD
    Roles:
      type: object
      properties:
        rolDefaultRole:
          type: boolean
        rolDescription:
          type: string
        rolID:
          type: number
        rolName:
          type: string
        rolDefaultRoleTerminated:
          type: boolean
        rolBI:
          type: boolean
    ShiftCode_GetList:
      type: object
      properties:
        shiftCode:
          type: string
        shiftCodeDescription:
          type: string
    TaxGroupsDetails:
      type: object
      properties:
        taxCalcGroupIdCode:
          type: string
        taxCalcGroupDescription:
          type: string
        depositFrequencyCode:
          type: string
        depositFrequencyDescription:
          type: string
        taxCalcGroupTypeCode:
          type: string
        taxCalcGroupTypeDescription:
          type: string
        taxCalcGroupReportId:
          type: string
        taxGroupCountryCode:
          type: string
        dateFinalWagesPaid:
          format: date-time
          type: string
        dateMonthReset:
          format: date-time
          type: string
        dateQuarterReset:
          format: date-time
          type: string
        dateYearReset:
          format: date-time
          type: string
        taxGroupIsNotSubjectToSocMedTax:
          type: boolean
        taxGroupIsNotPayingWages:
          type: boolean
        taxGroupIsInactive:
          type: boolean
    translations:
      description: The translations in all available languages.
      properties:
        en_us:
          type: string
        en_gb:
          type: string
        es_es:
          type: string
        fr_ca:
          type: string
        de_de:
          type: string
        pr_br:
          type: string
    postings:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            description: The unique Job Posting Id (GUID).
          tenant:
            type: object
            properties:
              id:
                type: string
                description: Company Identifier
              alias:
                type: string
                description: Tenant name associated with customer account
          opportunity:
            type: object
            properties:
              id:
                type: string
                description: Opportunity Identifier
          updated_at:
            type: string
            description: Time stamp of last update to posting
          created_at:
            type: string
            description: Time stamp of posting creation
          requisition_number:
            type: string
            description: The customer-defined number associated with the Job Opportunity.
          default_locale:
            type: object
            properties:
              id:
                type: string
                description: The unique default locale Id (GUID).
              code:
                type: string
                description: Language Code e.g. en-US
          title:
            $ref: '#/components/schemas/translations'
          description:
            type: object
            properties:
              brief:
                $ref: '#/components/schemas/translations'
              detailed:
                $ref: '#/components/schemas/translations'
              full_html:
                $ref: '#/components/schemas/translations'
              eoe_text:
                type: string
                description: >-
                  The Equal Opportunity Employer text. Not empty for US Federal
                  Contractor companies
              pay_transparency_text:
                type: string
                description: >-
                  The Pay Transparency text. Not empty for US Federal Contractor
                  companies
          compensation:
            type: string
            description: Job Posting compensation details.
          job_family:
            type: object
            properties:
              id:
                type: string
                description: The unique job family id (GUID).
              name:
                $ref: '#/components/schemas/translations'
          locations:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: The unique location id (GUID).
                name:
                  type: string
                  description: >-
                    The location name. Even though it’s required, the “Not
                    Specified” value may be returned.
                city:
                  type: string
                  description: The location’s city.
                state:
                  type: object
                  properties:
                    code:
                      type: string
                      description: The location’s state code.
                    name:
                      $ref: '#/components/schemas/translations'
                country:
                  type: object
                  properties:
                    code:
                      type: string
                      description: The location’s country code.
                    name:
                      $ref: '#/components/schemas/translations'
                postal_code:
                  type: string
                  description: The location’s postal code.
          locations_summary:
            type: string
            description: >-
              The list of available locations delimited by semi-colon. The
              location fields within each location are delimited by comma. 
          company:
            type: object
            properties:
              id:
                type: string
                description: The unique company id (GUID).
              code:
                type: string
                description: The client-defined company reference code.
              name:
                $ref: '#/components/schemas/translations'
              doing_business_as:
                $ref: '#/components/schemas/translations'
          is_featured:
            type: boolean
            description: >-
              Indicates if the Job Posting is published as a featured job on an
              UltiPro Recruiting job board.
          skill_criteria:
            type: array
            items:
              type: object
              properties:
                is_required:
                  type: boolean
                  description: >-
                    Indicates if this skill is the required criterion for this
                    position.
                skill:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique skill id (GUID).
                    name:
                      $ref: '#/components/schemas/translations'
                    description:
                      $ref: '#/components/schemas/translations'
                    proficiency_level:
                      type: object
                      properties:
                        id:
                          type: string
                          description: >-
                            The unique id of a standard proficiency level
                            (GUID).
                        name:
                          $ref: '#/components/schemas/translations'
                        ordinal_value:
                          type: number
                          description: >-
                            A numerical equivalent of proficiency_level.name: 
                            1. Novice  2. Some Knowledge  3. Intermediate  4.
                            Advanced 5. Expert
          work_experience_criteria:
            type: array
            items:
              type: object
              properties:
                is_required:
                  type: boolean
                  description: Indicates if this work experience is required.
                minimum_years:
                  type: number
                  description: >-
                    Minimum years of experience requested for this work
                    experience.
                maximum_years:
                  type: number
                  description: >-
                    Maximum years of experience requested for this work
                    experience.
                description:
                  $ref: '#/components/schemas/translations'
          education_criteria:
            type: array
            items:
              type: object
              properties:
                is_required:
                  type: boolean
                  description: Indicates if this education is required for the job.
                allow_related:
                  type: boolean
                  description: >-
                    Indicates if similar educations will be considered for this
                    job.
                degree:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique degree id (GUID).
                    name:
                      $ref: '#/components/schemas/translations'
                major:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique major id (GUID).
                    name:
                      $ref: '#/components/schemas/translations'
          license_criteria:
            type: array
            items:
              type: object
              properties:
                is_required:
                  type: boolean
                  description: Indicates if this license is required for this job.
                license:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique license id (GUID).
                    name:
                      $ref: '#/components/schemas/translations'
          behavior_criteria:
            type: array
            items:
              type: object
              properties:
                is_required:
                  type: boolean
                  description: Indicates if this behavior is required for this job.
                behavior:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique behavior id (GUID).
                    name:
                      $ref: '#/components/schemas/translations'
                    description:
                      $ref: '#/components/schemas/translations'
          motivation_criteria:
            type: array
            items:
              type: object
              properties:
                is_required:
                  type: boolean
                  description: Indicates if this motivation is required for this job.
                motivation:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique motivation id (GUID).
                    name:
                      $ref: '#/components/schemas/translations'
                    description:
                      $ref: '#/components/schemas/translations'
          publish_date:
            type: string
            description: Date in which posting was published
          locales:
            type: array
            items:
              type: object
              properties:
                code:
                  type: string
                  description: >
                    Locale identifier, one of the following codes: en-US, en-GB,
                    es-ES, fr-CA, de-DE, or pr-BR.
          recruiting_apply_url:
            type: string
            description: >-
              The URL to the full job description on the UltiPro Recruiting job
              board. Should be mapped to the Job URL in the partner’s XML feed
          links:
            type: array
            items:
              type: object
              properties:
                href:
                  type: string
                  description: Not available. Use recruiting_apply_url instead.
                rel:
                  type: string
                  description: The relationship of the hyperlink to this object.
    UserDetails:
      type: object
      properties:
        employeeId:
          type: string
        userId:
          type: integer
        userName:
          type: string
        fullName:
          type: string
        userLastLogonDate:
          format: date-time
          type: string
        userLastPasswordChangeDate:
          format: date-time
          type: string
        userStatus:
          type: string
        integrationUserKey:
          type: string
    UserPreferencesDetails:
      type: object
      properties:
        userId:
          type: string
        languageCode:
          type: string
        dateTimeFormat:
          type: string
    ResultDtoWorkbrainTeamDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/WorkbrainTeamDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    ResultDtoActivityDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/ActivityDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    TimeCodeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tcodeName:
          type: string
        tcodeDesc:
          type: string
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    MultiStatusDtoScheduleModelStateDto:
      type: object
      properties:
        id:
          type: string
        sequenceId:
          type: integer
          format: int32
        status:
          type: string
        modelState:
          $ref: '#/components/schemas/ScheduleModelStateDto'
    TimeOffRequestDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        comment:
          type: string
        days:
          type: array
          items:
            $ref: '#/components/schemas/TimeOffRequestDayDto'
    ResultDtoHolidayDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/HolidayDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    TimeOffTypeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    TimeOffRequestDayDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        requestId:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        from:
          type: integer
          format: int32
        to:
          type: integer
          format: int32
        fullDay:
          type: boolean
          default: false
        status:
          type: string
        type:
          $ref: '#/components/schemas/TimeOffTypeDto'
        reason:
          $ref: '#/components/schemas/TimeOffReasonDto'
        empComment:
          type: string
        conclusionDate:
          type: string
          format: date-time
        conclusionComment:
          type: string
        payInAdv:
          type: boolean
          default: false
        submittedDate:
          type: string
          format: date-time
        empId:
          type: integer
          format: int64
    ScheduleDetailDto:
      type: object
      properties:
        operation:
          type: string
        empName:
          type: string
        skdDate:
          type: string
          format: date-time
        skdStartTime:
          type: string
          format: date-time
        skdEndTime:
          type: string
          format: date-time
        wbtName:
          type: string
        jobName:
          type: string
        tcodeName:
          type: string
        htypeName:
          type: string
        actName:
          type: string
    ResponseStatusDto:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
        errorCount:
          type: integer
          format: int32
        errors:
          $ref: '#/components/schemas/SingleStatusDtoObject'
        multiStatus:
          type: array
          items:
            $ref: '#/components/schemas/MultiStatusDtoObject'
    EmployeeJobDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        jobName:
          type: string
        jobDesc:
          type: string
        jobStartDate:
          type: string
          format: date-time
        jobEndDate:
          type: string
          format: date-time
        jobPreferred:
          type: boolean
          default: false
    TimeOffReasonDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    HourTypeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        htypeName:
          type: string
        htypeDesc:
          type: string
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    ActivityDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        actName:
          type: string
        actDesc:
          type: string
    WorkbrainTeamDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        wbtName:
          type: string
        wbtDesc:
          type: string
    ScheduleModelStateDto:
      type: object
      properties:
        operationType:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        empName:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        skdDate:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        skdStartTime:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        skdEndTime:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        skdTime:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        wbtName:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        tcodeName:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        jobName:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        htypeName:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        actName:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        noDetails:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
    ResultDtoHourTypeDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/HourTypeDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    ResultDtoEmployeeDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    ResultDtoTimeOffRequestDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/TimeOffRequestDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    MultiStatusDtoObject:
      type: object
      properties:
        id:
          type: string
        sequenceId:
          type: integer
          format: int32
        status:
          type: string
        modelState:
          type: object
    StateDto:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
    ResultDtoEmployeeJobDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeJobDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    HolidayDto:
      type: object
      properties:
        holidayName:
          type: string
        holidayLocName:
          type: string
        holidayDate:
          type: string
          format: date-time
    SingleStatusDtoObject:
      type: object
      properties:
        modelState:
          type: object
    PublishScheduleDetailDto:
      type: object
      properties:
        scheduleDetails:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleDetailDto'
        comment:
          type: string
    EmployeeDto:
      type: object
      properties:
        empId:
          type: integer
          format: int64
        empName:
          type: string
        teamName:
          type: string
        eeId:
          type: string
        coId:
          type: string
    ResultDtoTimeCodeDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/TimeCodeDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    codeObject:
      type: object
      required:
        - code
        - description
      properties:
        code:
          type: string
          description: Code.
        description:
          type: string
          description: Description.
    UserProfileDetails:
      type: object
      properties:
        employeeId:
          type: string
          pattern: ^[a-zA-Z0-9,]*$
        companyId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        personId:
          type: string
          example: 00000000-0000-0000-0000-000000000000
        email:
          type: string
        workPhone:
          type: string
        userStatus:
          type: string
        userId:
          type: integer
          format: int32
        userName:
          type: string
        roleId:
          type: integer
          format: int32
        roleName:
          type: string
        roleDescription:
          type: string
        integrationUserKey:
          type: string
          example: 00000000-0000-0000-0000-000000000000
        filterCompanyId:
          type: string
        filterDeductionGroupCode:
          type: string
        filterEmployeeType:
          type: string
        filterStatus:
          type: string
        filterFullTimeOrPartTime:
          type: string
        filterJobCode:
          type: string
        filterLocationCode:
          type: string
        filterOrganizationLevel1:
          type: string
        filterOrganizationLevel2:
          type: string
        filterOrganizationLevel3:
          type: string
        filterOrganizationLevel4:
          type: string
        filterPayGroupCode:
          type: string
        filterProjectCode:
          type: string
        filterSalaryOrHourly:
          type: string
        filterShiftCode:
          type: string
        filterSupervisorID:
          type: string
          pattern: ^[a-zA-Z0-9,]*$
        filterTaxCalculationGroupID:
          type: string
        masterCompany:
          type: string
        masterCompanyId:
          type: string
        homeCompany:
          type: string
        homeCompanyId:
          type: string
    WorkSummaryDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        empId:
          type: integer
          format: int64
        workDate:
          type: string
          format: date-time
        wrkMins:
          type: integer
          format: int64
        authorized:
          type: boolean
          default: false
        overtime:
          type: boolean
          default: false
          description: true if work summary contain details with an overtime hour type
        absent:
          type: boolean
          default: false
          description: true if LTA override exists on day
        absentTimeCode:
          type: string
          description: time code used in LTA override if present
        authorizedMessage:
          type: string
        comments:
          type: string
        clocks:
          $ref: '#/components/schemas/WorkSummaryClocksDto'
        workDetails:
          type: array
          items:
            $ref: '#/components/schemas/WorkDetailDto'
        exceptions:
          type: array
          items:
            type: string
        wrksMessages:
          type: string
        readOnly:
          type: boolean
          default: false
          description: true if timesheet has been locked
        readOnlyReason:
          type: string
        daily:
          type: boolean
          default: false
        flag1:
          type: string
        flag2:
          type: string
        flag3:
          type: string
        flag4:
          type: string
        flag5:
          type: string
        udf1:
          type: string
        udf2:
          type: string
        udf3:
          type: string
        udf4:
          type: string
        udf5:
          type: string
        udf6:
          type: string
        udf7:
          type: string
        udf8:
          type: string
        udf9:
          type: string
        udf10:
          type: string
        payGroup:
          $ref: '#/components/schemas/PayGroupDto'
        calcGroup:
          $ref: '#/components/schemas/CalcGroupDto'
    WorkSummaryClocksDto:
      type: object
      properties:
        workSummaryId:
          type: integer
          format: int64
        clocks:
          type: array
          items:
            $ref: '#/components/schemas/WorkSummaryClockDto'
    ProjectDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    WorkDetailDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        workSummaryId:
          type: integer
          format: int64
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        minutes:
          type: integer
          format: int64
        rate:
          type: number
          format: double
        timecode:
          $ref: '#/components/schemas/TimeCodeDto'
        hourType:
          $ref: '#/components/schemas/HourTypeDto'
        job:
          $ref: '#/components/schemas/JobDto'
        department:
          $ref: '#/components/schemas/DepartmentDto'
        project:
          $ref: '#/components/schemas/ProjectDto'
        docket:
          $ref: '#/components/schemas/DocketDto'
        team:
          $ref: '#/components/schemas/TeamDto'
        workType:
          type: string
        flag1:
          type: string
        flag2:
          type: string
        flag3:
          type: string
        flag4:
          type: string
        flag5:
          type: string
        flag6:
          type: string
        flag7:
          type: string
        flag8:
          type: string
        flag9:
          type: string
        flag10:
          type: string
        udf1:
          type: string
        udf2:
          type: string
        udf3:
          type: string
        udf4:
          type: string
        udf5:
          type: string
        udf6:
          type: string
        udf7:
          type: string
        udf8:
          type: string
        udf9:
          type: string
        udf10:
          type: string
    DepartmentDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    CalcGroupDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    ResultDtoClockTransactionDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/ClockTransactionDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    ClockTransactionDto:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClockTransactionTypeDto'
        time:
          type: string
          format: date-time
        data:
          type: string
        location:
          type: string
          description: GPS data
        extData:
          type: string
          description: Clock extra data
    TeamDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
        supervisor:
          type: boolean
          default: false
        supervisors:
          type: array
          items:
            type: string
    DocketDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    PayGroupDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    ClockTransactionTypeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        locName:
          type: string
    WorkSummaryClockDto:
      type: object
      properties:
        index:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/ClockTransactionTypeDto'
        time:
          type: string
          format: date-time
        data:
          type: string
        location:
          type: string
          description: GPS data
        extData:
          type: string
          description: Clock extra data
    JobDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    TimesheetDtoWorkSummaryDto:
      type: object
      properties:
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        workSummaries:
          type: array
          items:
            $ref: '#/components/schemas/WorkSummaryDto'
    UserDefinedFields:
      type: object
      properties:
        employeeId:
          type: string
        personnelUserDefinedFields:
          type: object
          properties:
            personnelUDField01:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            personnelUDField02:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            personnelUDField03:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            personnelUDField04:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            personnelUDField05:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            personnelUDField06:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            personnelUDField07:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            personnelUDField08:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            personnelUDField09:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            personnelUDField10:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            personnelUDField11:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            personnelUDField12:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            personnelUDField13:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            personnelUDField14:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
        internationalUserDefinedFields:
          type: object
          properties:
            internationalUDField01:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            internationalUDField02:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            internationalUDField03:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            internationalUDField04:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            internationalUDField05:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            internationalUDField06:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            internationalUDField07:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            internationalUDField08:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            internationalUDField09:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            internationalUDField10:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            internationalUDField11:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            internationalUDField12:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            internationalUDField13:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            internationalUDField14:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
  requestBodies:
    BusinessRuleImportRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BusinessRuleImportRequest'
        text/json:
          schema:
            $ref: '#/components/schemas/BusinessRuleImportRequest'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BusinessRuleImportRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/BusinessRuleImportRequest'
        text/xml:
          schema:
            $ref: '#/components/schemas/BusinessRuleImportRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/BusinessRuleImportRequest'
      required: true
    EmployeePayStatementRangeFilter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeePayStatementRangeFilter'
        text/json:
          schema:
            $ref: '#/components/schemas/EmployeePayStatementRangeFilter'
      required: true
    CompanyPayStatementFilter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompanyPayStatementFilter'
        text/json:
          schema:
            $ref: '#/components/schemas/CompanyPayStatementFilter'
      required: true
    org-levels:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/org-levels'
      description: The org-level to be written.
      required: true
  parameters:
    employeeIdParam:
      in: path
      name: employeeId
      required: true
      schema:
        type: string
    idParam:
      in: path
      name: timeId
      required: true
      schema:
        type: string
        format: uuid
    xCorrelationIdParam:
      description: This value MUST be supplied by the originator, used for tracing
      in: header
      name: X-Correlation-Id
      required: true
      schema:
        type: string
        format: uuid
    usTenantIdParam:
      in: header
      name: US-Tenant-Id
      required: true
      schema:
        type: string
        format: uuid
    usCustomerApiKeyParam:
      description: This is the API key value that is supplied to each time system
      in: header
      name: US-Customer-Api-Key
      required: true
      schema:
        type: string
    authParam:
      description: This should be in Bearer token format, the token is the shared key value
      in: header
      name: Authorization
      required: true
      schema:
        type: string
x-explorer-enabled: false
x-readme:
  proxy-enabled: true
  samples-enabled: true
_id: 6434630d47850d00118bc616
security:
  - OauthSecurity:
      - recruiting.domain.third-party-job-board-integrations.auto-feed
tags:
  - name: time
