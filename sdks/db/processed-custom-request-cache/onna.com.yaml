processed:
  securitySchemes:
    OAuth2:
      description: >-
        The API uses API keys to [authenticate
        requests](https://dev.onna.com/get-started/authentication).
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://api.onna.com/v1/oauth/token
      type: oauth2
  apiBaseUrl: https://api.onna.com/v1
  apiVersion: v1.1.0
  apiDescription: >-
    # Introduction


    ![Onna](https://onna.com/wp-content/uploads/2022/02/graphic-solutions-kip-kd.png
    "Diagram showing how Onna connects to various applications")


    The Onna Platform API enables you to programmatically upload your data into
    our Knowledge Integration Platform.

    This unlocks the possibility to have all your data in one place

    and turn it into knowledgeâ€”even data we don't support directly with one of
    [our connectors](https://onna.com/connectors/ "List of available
    connectors").


    ## Key concepts


    Before starting to use the API, we recommend to become familiar with some
    key concepts.

    For more information on the key concepts, see [API
    basics](https://dev.onna.com/fundamentals/api-basics "Documentation about
    API basics").


    ## Requirements


    To use this API, you must have an active account on an [Enterprise
    Plan](https://onna.com/pricing/ "Onna pricing page")

    and have the [Developer role
    assigned](https://dev.onna.com/get-started/authentication#assign-developer-role
    "Sections on how to assign a developer role").


    For more information, see
    [Requirements](https://dev.onna.com/fundamentals/api-basics#requirements
    "Section about requirements").


    ## Security


    This API requires that all requests are made using
    [HTTPS](https://en.wikipedia.org/wiki/HTTPS "Wikipedia entry for HTTPS")

    and must be [authenticated with a valid
    token](https://dev.onna.com/get-started/authentication "Article about
    authentication").


    ## Response codes


    A full list of the response codes returned by this API is available at
    [Response codes](https://dev.onna.com/fundamentals/response-codes "List of
    supported response codes").


    ## Versioning


    This API uses semantic versioning to ensure that your client doesn't break.

    The version is declared in the URL so that you can lock to a specific one by
    prefix the URL.


    When the version declared in the URL is not supported, you will receive a
    400 response.


    For more information, see
    [Versioning](https://dev.onna.com/fundamentals/api-basics#versioning
    "Section about versioning").


    ## Date and time format


    This API supports dates and times in [ISO
    8601](https://en.wikipedia.org/wiki/ISO_8601 "Wikipedia entry for the IS0
    8601 standard") format.


    ## Pagination


    This API uses cursoring to divide large sets of results in multiple pages.

    For more information, see
    [Pagination](https://dev.onna.com/fundamentals/api-basics/#pagination
    "Section about supported pagination").


    ## Parameters


    There are many ways to pass parameters when making requests to this API.

    For more information, see
    [Parameters](https://dev.onna.com/fundamentals/api-basics#parameters
    "Section about supported parameters").


    ## Resource types


    You can ingest various type of resources. For more information, see
    [Resource types](https://dev.onna.com/fundamentals/resource-types "Article
    about supported resource types").
  apiTitle: Onna Platform API
  endpoints: 15
  sdkMethods: 29
  schemas: 37
  parameters: 118
  contactUrl: https://dev.onna.com/help
  originalCustomRequest:
    type: GET
    url: >-
      https://raw.githubusercontent.com/onna/platform-api/main/spec/platform-api.yaml
  customRequestSpecFilename: onna.com.yaml
  difficultyScore: 77
