hash: 9864e02dac19a1960fc8ad83a20bd9d2754aac1db758ce4f2e160cb33c0543c0
methodObjects:
  - url: /v1/chat/completions
    method: performCompletionRequest
    httpMethod: post
    tag: chat
    typeScriptTag: chat
    description: Chat Completions
    parameters:
      - name: best_of
        schema: integer
        description: ''
        default: 1
      - name: 'false'
        schema: integer
        description: ''
        default: 1
      - name: frequency_penalty
        schema: number
        description: ''
        default: 0
      - name: logit_bias
        schema: object
        description: ''
      - name: logprobs
        schema: integer
        description: ''
      - name: max_tokens
        schema: integer
        description: ''
      - name: messages
        schema: array
        description: ''
        default: &ref_0 []
      - name: model
        schema: string
        description: ''
        default: pulze
      - name: presence_penalty
        schema: number
        description: ''
        default: 0
      - name: prompt
        schema: undefined
        description: ''
      - name: stop
        schema: undefined
        description: ''
        default: ''
      - name: stream
        schema: boolean
        description: ''
        default: false
      - name: suffix
        schema: string
        description: ''
        default: ''
      - name: temperature
        schema: number
        description: ''
        default: 1
      - name: tool_choice
        schema: undefined
        description: ''
        default: none
      - name: tools
        schema: array
        description: ''
      - name: top_p
        schema: number
        description: ''
        default: 1
    responses:
      - statusCode: '200'
        description: The response returned to the user by the Chat Completions endpoint
      - statusCode: '422'
        description: ''
  - url: /v1/models/rank
    method: getRankOfBest
    httpMethod: post
    tag: models
    typeScriptTag: models
    description: Get Rank Of Best Models For Payload
    parameters:
      - name: best_of
        schema: integer
        description: ''
        default: 1
      - name: 'false'
        schema: integer
        description: ''
        default: 1
      - name: frequency_penalty
        schema: number
        description: ''
        default: 0
      - name: logit_bias
        schema: object
        description: ''
      - name: logprobs
        schema: integer
        description: ''
      - name: max_tokens
        schema: integer
        description: ''
      - name: messages
        schema: array
        description: ''
        default: *ref_0
      - name: model
        schema: string
        description: ''
        default: pulze
      - name: presence_penalty
        schema: number
        description: ''
        default: 0
      - name: prompt
        schema: undefined
        description: ''
      - name: stop
        schema: undefined
        description: ''
        default: ''
      - name: stream
        schema: boolean
        description: ''
        default: false
      - name: suffix
        schema: string
        description: ''
        default: ''
      - name: temperature
        schema: number
        description: ''
        default: 1
      - name: tool_choice
        schema: undefined
        description: ''
        default: none
      - name: tools
        schema: array
        description: ''
      - name: top_p
        schema: number
        description: ''
        default: 1
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '422'
        description: ''
  - url: /v1/logs/{log_id}
    method: getById
    httpMethod: get
    tag: logs
    typeScriptTag: logs
    description: Get Log By Id
    parameters:
      - name: logId
        schema: string
        required: true
        description: ''
        example: LOG_ID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '422'
        description: ''
numberOfSchemas: 101
apiDescription: >-
  At Pulze it's our mission to supercharge today's workforce with AI to maximize
  the world's prosperity. We are doing so by enabling companies of any size to
  securely leverage Large Language Models (LLM) and easily build AI features
  into their apps. Our enterprise platform has access to all best in class LLMs
  and can route user requests to the most relevant model to get the highest
  quality response at the best price thanks to our smart meta model. End users
  can leverage pre-built applications, such as our Marketing AI product, or
  build custom apps on top of the Pulze Platform.


  We are a VC Funded, early stage startup based in San Francisco.
