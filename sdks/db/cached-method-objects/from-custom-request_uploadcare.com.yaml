hash: adec421fdf799c01bba109822fd34535d6c9dac04a80596012846cb5ca77c5b4
methodObjects:
  - url: /<presigned-url-x>
    method: individualFilePartsPut
    httpMethod: put
    tag: Upload
    typeScriptTag: upload
    description: Upload individual file parts
    parameters: []
    responses:
      - statusCode: 2XX
        description: A file part has been uploaded successfully
  - url: /base
    method: directUpload
    httpMethod: post
    tag: Upload
    typeScriptTag: upload
    description: Direct uploads
    parameters:
      - name: UPLOADCARE_PUB_KEY
        schema: string
        required: true
        description: ''
        example: caa9d29da887ee88ffe6
      - name: UPLOADCARE_STORE
        schema: string
        required: false
        description: ''
        example: '1'
        default: auto
      - name: '{filename}'
        schema: array
        required: true
        description: ''
      - name: metadata[{key}]
        schema: string
        required: false
        description: ''
        example: '#/components/examples/metadataValue/value'
      - name: signature
        schema: string
        required: false
        description: ''
        example: 04b29480233f4def5c875875b6bdc3b1
      - name: expire
        schema: number
        required: false
        description: ''
        example: 1454902434
    responses:
      - statusCode: '200'
        description: |
          JSON object where the key is the file name of the uploaded file and
          the value is the unique ID of the file on our systems.
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: ''
      - statusCode: '413'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /multipart/start
    method: startMultipart
    httpMethod: post
    tag: Upload
    typeScriptTag: upload
    description: Start multipart upload
    parameters:
      - name: UPLOADCARE_PUB_KEY
        schema: string
        required: true
        description: ''
        example: caa9d29da887ee88ffe6
      - name: UPLOADCARE_STORE
        schema: string
        required: false
        description: ''
        example: '1'
        default: auto
      - name: filename
        schema: string
        required: true
        description: ''
        example: myfile.mp4
      - name: size
        schema: integer
        required: true
        description: ''
        example: 27796904
      - name: part_size
        schema: integer
        required: false
        description: ''
        example: 10485760
        default: 5242880
      - name: content_type
        schema: string
        required: true
        description: ''
        example: video/mp4
      - name: metadata[{key}]
        schema: string
        required: false
        description: ''
        example: '#/components/examples/metadataValue/value'
      - name: signature
        schema: string
        required: false
        description: ''
        example: 04b29480233f4def5c875875b6bdc3b1
      - name: expire
        schema: number
        required: false
        description: ''
        example: 1454902434
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /multipart/complete
    method: completeMultipartUpload
    httpMethod: post
    tag: Upload
    typeScriptTag: upload
    description: Complete multipart upload
    parameters:
      - name: UPLOADCARE_PUB_KEY
        schema: string
        required: true
        description: ''
        example: caa9d29da887ee88ffe6
      - name: uuid
        schema: string
        required: true
        description: ''
        example: 67947755-1584-4e3f-902b-d4e2bf76a841
    responses:
      - statusCode: '200'
        description: Information about an uploaded file.
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /from_url
    method: fromUrlFiles
    httpMethod: post
    tag: Upload
    typeScriptTag: upload
    description: Upload files from URLs
    parameters:
      - name: pub_key
        schema: string
        required: true
        description: ''
        example: caa9d29da887ee88ffe6
      - name: source_url
        schema: string
        required: true
        description: ''
        example: https://source.unsplash.com/featured
      - name: store
        schema: string
        required: false
        description: ''
        example: '1'
        default: auto
      - name: filename
        schema: string
        required: false
        description: ''
        example: googlelogo_color_272x92dp.png
      - name: check_URL_duplicates
        schema: string
        required: false
        description: ''
        example: '1'
        default: '0'
      - name: save_URL_duplicates
        schema: string
        required: false
        description: ''
        example: '1'
      - name: metadata[{key}]
        schema: string
        required: false
        description: ''
        example: '#/components/examples/metadataValue/value'
      - name: signature
        schema: string
        required: false
        description: ''
        example: 04b29480233f4def5c875875b6bdc3b1
      - name: expire
        schema: number
        required: false
        description: ''
        example: 1454902434
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /from_url/status
    method: urlStatusGet
    httpMethod: get
    tag: Upload
    typeScriptTag: upload
    description: Check the status of a task to fetch/upload a file from a URL
    parameters:
      - name: token
        schema: string
        required: true
        description: >-
          Token returned by the `/from_url/` endpoint that identifies a request
          to fetch/upload a file from a URL.
        example: 945ebb27-1fd6-46c6-a859-b9893712d650
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
  - url: /info
    method: fileInfo
    httpMethod: get
    tag: Upload
    typeScriptTag: upload
    description: Get information about an uploaded file
    parameters:
      - name: pubKey
        schema: string
        required: true
        description: ''
        example: YOUR_PUBLIC_KEY
      - name: fileId
        schema: string
        required: true
        description: File's unique ID.
        example: 67947755-1584-4e3f-902b-d4e2bf76a841
    responses:
      - statusCode: '200'
        description: Information about an uploaded file.
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /group
    method: createFileGroup
    httpMethod: post
    tag: Groups
    typeScriptTag: groups
    description: Create a file group
    parameters:
      - name: pub_key
        schema: string
        required: true
        description: ''
        example: caa9d29da887ee88ffe6
      - name: files[]
        schema: array
        required: true
        description: ''
      - name: signature
        schema: string
        required: false
        description: ''
        example: 04b29480233f4def5c875875b6bdc3b1
      - name: expire
        schema: number
        required: false
        description: ''
        example: 1454902434
    responses:
      - statusCode: '200'
        description: File group information object.
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: ''
  - url: /group/info
    method: getInfo
    httpMethod: get
    tag: Groups
    typeScriptTag: groups
    description: Get information about a file group
    parameters:
      - name: pubKey
        schema: string
        required: true
        description: ''
        example: YOUR_PUBLIC_KEY
      - name: groupId
        schema: string
        required: true
        description: >
          Group's unique ID. Group IDs look like `UUID~N`, where the `~N` part
          reflects the number of the files in the group.
        example: d52d7136-a2e5-4338-9f45-affbf83b857d~2
    responses:
      - statusCode: '200'
        description: File group information object.
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: ''
      - statusCode: '404'
        description: ''
numberOfSchemas: 106
apiDescription: >
  ### Summary

  Upload API provides several ways of uploading files to Uploadcare servers in a

  secure and reliable way.


  ### API endpoints

  Upload API's root is located at `https://upload.uploadcare.com/`.

  **Note**: All API endpoints end with a forward slash `/`. Please do not forget
  to include it.


  ### API clients

  Please checkout [API clients](https://uploadcare.com/docs/integrations/) page
  for a

  list of official and third party Upload API clients.


  ### File storage

  Every uploaded file is **temporary** by nature and subject to be deleted
  within a

  24-hour period. **Mark the file as stored** to make it permanent:

  * On upload via the [`UPLOADCARE_STORE`
  flag](https://uploadcare.com/api-refs/upload-api/)

  * [Store](https://uploadcare.com/api-refs/upload-api/) or
    [copy](https://uploadcare.com/api-refs/upload-api/) an already uploaded
    file via [REST API](https://uploadcare.com/api-refs/upload-api/).

  **Note**: `UPLOADCARE_STORE=auto` parameter delegates the choice of the

  file storing behavior to a project

  [auto-store](https://app.uploadcare.com/projects/-/settings/#storage)

  setting (which is enabled by default). 


  ### File delivery

  Once uploaded, your files become available via our
  [CDN](https://uploadcare.com/docs/delivery/).

  The CDN includes on the fly image processing features and can work as a proxy.

  Please check the referenced page to learn more.
