hash: 00d9d0473b7c05016ae6c642bb74461c0bc8f9da2a85144d1e605c311fb2a1ef
methodObjects:
  - url: /account
    method: getDetails
    httpMethod: get
    tag: 1. Account and Users
    typeScriptTag: 1AccountAndUsers
    description: Fetch Account Details
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /users/{example_user_id}
    method: getUserById
    httpMethod: get
    tag: 1. Account and Users
    typeScriptTag: 1AccountAndUsers
    description: Fetch User by ID
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /users/search
    method: searchUsers
    httpMethod: post
    tag: 1. Account and Users
    typeScriptTag: 1AccountAndUsers
    description: List Users
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: page_size
        schema: number
        description: ''
        example: 200
    responses:
      - statusCode: '200'
        description: ''
  - url: /leads/{example_lead_id}
    method: removeLead
    httpMethod: delete
    tag: 2. Leads
    typeScriptTag: 2Leads
    description: Delete a Lead
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /leads/{example_lead_id}
    method: getLeadById
    httpMethod: get
    tag: 2. Leads
    typeScriptTag: 2Leads
    description: Fetch a Lead by ID
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /leads/{example_lead_id}
    method: updateLead
    httpMethod: put
    tag: 2. Leads
    typeScriptTag: 2Leads
    description: Update a Lead
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: custom_fields
        schema: array
        description: ''
        example:
          - custom_field_definition_id: 184997
            value:
              - 262644
              - 262645
      - name: details
        schema: string
        description: ''
        example: This is an update
    responses:
      - statusCode: '200'
        description: ''
  - url: /leads
    method: createNewLead
    httpMethod: post
    tag: 2. Leads
    typeScriptTag: 2Leads
    description: Create a New Lead
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: custom_fields
        schema: array
        description: ''
        example:
          - custom_field_definition_id: 100764
            value: Text fields are 255 chars or less!
          - custom_field_definition_id: 103481
            value: Text area fields can have long text content
      - name: customer_source_id
        schema: number
        description: ''
        example: 331242
      - name: email
        schema: object
        description: ''
      - name: name
        schema: string
        description: ''
        example: My Lead
      - name: phone_numbers
        schema: array
        description: ''
        example:
          - category: mobile
            number: 415-123-45678
    responses:
      - statusCode: '200'
        description: ''
  - url: /leads/upsert
    method: upsertLead
    httpMethod: put
    tag: 2. Leads
    typeScriptTag: 2Leads
    description: UPSERT a Lead
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: match
        schema: object
        description: ''
      - name: properties
        schema: object
        description: ''
    responses:
      - statusCode: '200'
        description: ''
  - url: /leads/{example_leadconvert_id}/convert
    method: convertLeadToPerson
    httpMethod: post
    tag: 2. Leads
    typeScriptTag: 2Leads
    description: CONVERT a Lead
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: details
        schema: object
        description: ''
    responses:
      - statusCode: '200'
        description: ''
  - url: /leads/search
    method: listLeadsSearch
    httpMethod: post
    tag: 2. Leads
    typeScriptTag: 2Leads
    description: List Leads (Search)
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: maximum_interaction_date
        schema: number
        description: ''
        example: 1515797000
      - name: minimum_interaction_date
        schema: number
        description: ''
        example: 1515796000
      - name: page_size
        schema: number
        description: ''
        example: 25
      - name: sort_by
        schema: string
        description: ''
        example: name
    responses:
      - statusCode: '200'
        description: ''
  - url: /leads/{example_lead_id}/activities
    method: getLeadActivities
    httpMethod: post
    tag: 2. Leads
    typeScriptTag: 2Leads
    description: See a Lead's Activities
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: activity_types
        schema: array
        description: ''
        example:
          - category: user
            id: 1
    responses:
      - statusCode: '200'
        description: ''
  - url: /customer_sources
    method: listCustomerSources
    httpMethod: get
    tag: 5. Opportunities
    typeScriptTag: 5Opportunities
    description: List Customer Sources
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /lead_statuses
    method: listLeadStatuses
    httpMethod: get
    tag: 2. Leads
    typeScriptTag: 2Leads
    description: List Lead Statuses
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /people/{example_person_id}
    method: removePerson
    httpMethod: delete
    tag: 3. People
    typeScriptTag: 3People
    description: Delete a Person
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /people/{example_person_id}
    method: getById
    httpMethod: get
    tag: 3. People
    typeScriptTag: 3People
    description: Fetch a Person by ID
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /people/{example_person_id}
    method: updatePersonById
    httpMethod: put
    tag: 3. People
    typeScriptTag: 3People
    description: Update a Person
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: details
        schema: string
        description: ''
        example: This is an update
    responses:
      - statusCode: '200'
        description: ''
  - url: /people/fetch_by_email
    method: getByEmail
    httpMethod: post
    tag: 3. People
    typeScriptTag: 3People
    description: Fetch a Person by Email
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: email
        schema: string
        description: ''
        example: mycontact_123@noemail.com
    responses:
      - statusCode: '200'
        description: ''
  - url: /people
    method: createNewPerson
    httpMethod: post
    tag: 3. People
    typeScriptTag: 3People
    description: Create a New Person
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: emails
        schema: array
        description: ''
        example:
          - category: work
            email: mycontact_1233@noemail.com
      - name: name
        schema: string
        description: ''
        example: My Contact
      - name: phone_numbers
        schema: array
        description: ''
        example:
          - category: mobile
            number: 415-123-45678
    responses:
      - statusCode: '200'
        description: ''
  - url: /people/search
    method: listPeopleSearch
    httpMethod: post
    tag: 3. People
    typeScriptTag: 3People
    description: List People (Search)
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: page_size
        schema: number
        description: ''
        example: 25
      - name: phone_number
        schema: string
        description: ''
        example: '4153554776'
      - name: sort_by
        schema: string
        description: ''
        example: name
    responses:
      - statusCode: '200'
        description: ''
  - url: /people/{example_person_id}/activities
    method: getPersonActivities
    httpMethod: post
    tag: 3. People
    typeScriptTag: 3People
    description: See a Person's Activities
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: activity_types
        schema: array
        description: ''
        example:
          - category: user
            id: 1
    responses:
      - statusCode: '200'
        description: ''
  - url: /contact_types
    method: listContactTypes
    httpMethod: get
    tag: 4. Companies
    typeScriptTag: 4Companies
    description: List Contact Types
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /companies/{example_company_id}
    method: getById
    httpMethod: get
    tag: 4. Companies
    typeScriptTag: 4Companies
    description: Fetch a Company by ID
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /companies/{example_company_id}
    method: updateCompany
    httpMethod: put
    tag: 4. Companies
    typeScriptTag: 4Companies
    description: Update a Company
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: details
        schema: string
        description: ''
        example: This is an update
    responses:
      - statusCode: '200'
        description: ''
  - url: /companies
    method: createNewCompany
    httpMethod: post
    tag: 4. Companies
    typeScriptTag: 4Companies
    description: 'Create a New Company '
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: address
        schema: object
        description: ''
      - name: details
        schema: string
        description: ''
        example: This is a demo company
      - name: email_domain
        schema: string
        description: ''
        example: democompany.com
      - name: name
        schema: string
        description: ''
        example: Demo Company
      - name: phone_numbers
        schema: array
        description: ''
        example:
          - category: work
            number: 415-123-45678
    responses:
      - statusCode: '200'
        description: ''
  - url: /companies/{delete_company_id}
    method: removeCompany
    httpMethod: delete
    tag: 4. Companies
    typeScriptTag: 4Companies
    description: Delete a Company
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /companies/search
    method: listCompanySearch
    httpMethod: post
    tag: 4. Companies
    typeScriptTag: 4Companies
    description: List Companies (Search)
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: contact_type_ids
        schema: array
        description: ''
        example:
          - 6
      - name: page_size
        schema: number
        description: ''
        example: 25
      - name: sort_by
        schema: string
        description: ''
        example: name
    responses:
      - statusCode: '200'
        description: ''
  - url: /companies/{example_company_id}/activities
    method: getCompanyActivities
    httpMethod: post
    tag: 4. Companies
    typeScriptTag: 4Companies
    description: See a Company's Activities
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: activity_types
        schema: array
        description: ''
        example:
          - category: user
            id: 1
    responses:
      - statusCode: '200'
        description: ''
  - url: /opportunities/{example_opportunity_id}
    method: getOpportunityById
    httpMethod: get
    tag: 5. Opportunities
    typeScriptTag: 5Opportunities
    description: Fetch an Opportunity by ID
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /opportunities/{example_opportunity_id}
    method: updateOpportunityFields
    httpMethod: put
    tag: 5. Opportunities
    typeScriptTag: 5Opportunities
    description: Update an Opportunity
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: details
        schema: string
        description: ''
        example: This is an update
    responses:
      - statusCode: '200'
        description: ''
  - url: /opportunities
    method: createNewOpportunity
    httpMethod: post
    tag: 5. Opportunities
    typeScriptTag: 5Opportunities
    description: Create a New Opportunity
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: customer_source_id
        schema: number
        description: ''
        example: 331242
      - name: name
        schema: string
        description: ''
        example: New Demo Opportunity
      - name: primary_contact_id
        schema: number
        description: ''
        example: 27140359
    responses:
      - statusCode: '200'
        description: ''
  - url: /opportunities/{delete_opportunity_id}
    method: removeOpportunityRecord
    httpMethod: delete
    tag: 5. Opportunities
    typeScriptTag: 5Opportunities
    description: Delete an Opportunity
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /opportunities/search
    method: listByCriteria
    httpMethod: post
    tag: 5. Opportunities
    typeScriptTag: 5Opportunities
    description: List Opportunities (Search)
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: name
        schema: string
        description: ''
        example: 500 Keyboards (sample)
    responses:
      - statusCode: '200'
        description: ''
  - url: /loss_reasons
    method: listLossReasons
    httpMethod: get
    tag: 5. Opportunities
    typeScriptTag: 5Opportunities
    description: List Loss Reasons
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /pipelines
    method: getPipelinesList
    httpMethod: get
    tag: 5. Opportunities
    typeScriptTag: 5Opportunities
    description: List Pipelines
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /pipeline_stages
    method: listPipelineStages
    httpMethod: get
    tag: 5. Opportunities
    typeScriptTag: 5Opportunities
    description: List Pipeline Stages
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /pipeline_stages/pipeline/{pipeline_id}
    method: listPipelineStages
    httpMethod: get
    tag: 5. Opportunities
    typeScriptTag: 5Opportunities
    description: List Stages in a Pipeline
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /projects/{example_project_id}
    method: getById
    httpMethod: get
    tag: 6. Projects
    typeScriptTag: 6Projects
    description: Fetch a Project by ID
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /projects/{example_project_id}
    method: updateProject
    httpMethod: put
    tag: 6. Projects
    typeScriptTag: 6Projects
    description: Update a Project
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: details
        schema: string
        description: ''
        example: This is an update
    responses:
      - statusCode: '200'
        description: ''
  - url: /projects
    method: createNewProject
    httpMethod: post
    tag: 6. Projects
    typeScriptTag: 6Projects
    description: Create a New Project
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: name
        schema: string
        description: ''
        example: New Demo Project
    responses:
      - statusCode: '200'
        description: ''
  - url: /projects/{delete_project_id}
    method: removeProjectRecord
    httpMethod: delete
    tag: 6. Projects
    typeScriptTag: 6Projects
    description: Delete a Project
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /projects/search
    method: listProjectsSearch
    httpMethod: post
    tag: 6. Projects
    typeScriptTag: 6Projects
    description: List Projects (Search)
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: custom_fields
        schema: array
        description: ''
        example:
          - custom_field_definition_id: 12
            option: ANY
            value:
              - 8
      - name: page_size
        schema: number
        description: ''
        example: 25
      - name: sort_by
        schema: string
        description: ''
        example: name
    responses:
      - statusCode: '200'
        description: ''
  - url: /tasks/{example_task_id}
    method: getTaskById
    httpMethod: get
    tag: 7. Tasks
    typeScriptTag: 7Tasks
    description: Fetch a Task by ID
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /tasks/{example_task_id}
    method: updateTaskRecord
    httpMethod: put
    tag: 7. Tasks
    typeScriptTag: 7Tasks
    description: Update a Task
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: details
        schema: string
        description: ''
        example: This is an update
    responses:
      - statusCode: '200'
        description: ''
  - url: /tasks
    method: createNewTask
    httpMethod: post
    tag: 7. Tasks
    typeScriptTag: 7Tasks
    description: Create a New Task
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: name
        schema: string
        description: ''
        example: Demo Task
    responses:
      - statusCode: '200'
        description: ''
  - url: /tasks/{delete_task_id}
    method: removeTaskRecord
    httpMethod: delete
    tag: 7. Tasks
    typeScriptTag: 7Tasks
    description: Delete a Task
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /tasks/search
    method: listTasksSearch
    httpMethod: post
    tag: 7. Tasks
    typeScriptTag: 7Tasks
    description: List Tasks (Search)
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: page_size
        schema: number
        description: ''
        example: 25
      - name: sort_by
        schema: string
        description: ''
        example: name
      - name: statuses
        schema: array
        description: ''
        example:
          - Completed
    responses:
      - statusCode: '200'
        description: ''
  - url: /activities/{example_activity_id}
    method: getActivityById
    httpMethod: get
    tag: 8. Activities
    typeScriptTag: 8Activities
    description: Fetch an Activity by ID
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /activities
    method: createNewActivity
    httpMethod: post
    tag: 8. Activities
    typeScriptTag: 8Activities
    description: Create a New Activity
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: details
        schema: string
        description: ''
        example: This is the description of this note
      - name: parent
        schema: object
        description: ''
      - name: type
        schema: object
        description: ''
    responses:
      - statusCode: '200'
        description: ''
  - url: /activities/{delete_activity_id}
    method: removeActivityRecord
    httpMethod: delete
    tag: 8. Activities
    typeScriptTag: 8Activities
    description: Delete an Activity
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /activities/search
    method: listSearch
    httpMethod: post
    tag: 8. Activities
    typeScriptTag: 8Activities
    description: List Activities (Search)
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: page_size
        schema: number
        description: ''
        example: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /activity_types
    method: listActivityTypes
    httpMethod: get
    tag: 8. Activities
    typeScriptTag: 8Activities
    description: List Activity Types
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /custom_field_definitions
    method: listDefinitions
    httpMethod: get
    tag: Custom Fields
    typeScriptTag: customFields
    description: List Custom Field Definitions
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /custom_field_definitions
    method: createFieldDefinition
    httpMethod: post
    tag: Custom Fields
    typeScriptTag: customFields
    description: Create a new custom field definition
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: available_on
        schema: array
        description: ''
        example:
          - lead
          - person
      - name: data_type
        schema: string
        description: ''
        example: String
      - name: name
        schema: string
        description: ''
        example: A String
    responses:
      - statusCode: '200'
        description: ''
  - url: /custom_field_definitions/{custom_field_definition_id}
    method: deleteCustomFieldDefinition
    httpMethod: delete
    tag: Custom Fields
    typeScriptTag: customFields
    description: Delete a Custom Field Definition
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /custom_field_definitions/{custom_field_definition_id}
    method: getDefinition
    httpMethod: get
    tag: Custom Fields
    typeScriptTag: customFields
    description: Fetch a Custom Field Definition
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /custom_field_definitions/{custom_field_definition_id}
    method: updateExistingDefinition
    httpMethod: put
    tag: Custom Fields
    typeScriptTag: customFields
    description: Update an existing custom field definition
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: name
        schema: string
        description: ''
        example: Renamed String
    responses:
      - statusCode: '200'
        description: ''
  - url: /{entity_name_in_plural}/search
    method: searchEntityByCustomField
    httpMethod: post
    tag: Custom Fields
    typeScriptTag: customFields
    description: Search Entity (Leads, People, etc) by Custom Field
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: custom_fields
        schema: array
        description: ''
        example:
          - allow_empty: true
            custom_field_definition_id: 3
    responses:
      - statusCode: '200'
        description: ''
  - url: /custom_activity_types
    method: listAllActivityTypes
    httpMethod: get
    tag: Custom Fields
    typeScriptTag: customFields
    description: List All Custom Activity Types
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /custom_activity_types
    method: createCustomActivityType
    httpMethod: post
    tag: Custom Fields
    typeScriptTag: customFields
    description: Create a New Custom Activity Type
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: icon_type
        schema: string
        description: ''
        example: Phone
      - name: name
        schema: string
        description: ''
        example: New Activity
    responses:
      - statusCode: '200'
        description: ''
  - url: /custom_activity_types/{custom_activity_type_id}
    method: getActivityType
    httpMethod: get
    tag: Custom Fields
    typeScriptTag: customFields
    description: Get Custom Activity Type
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /custom_activity_types/{custom_activity_type_id}
    method: updateExistingActivityType
    httpMethod: put
    tag: Custom Fields
    typeScriptTag: customFields
    description: Update an Existing Custom Activity Type
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: icon_type
        schema: string
        description: ''
        example: Todo
    responses:
      - statusCode: '200'
        description: ''
  - url: /related_links
    method: getConnections
    httpMethod: get
    tag: Custom Fields
    typeScriptTag: customFields
    description: List the connections on specified entity
    parameters:
      - name: customFieldDefinitionId
        schema: string
        description: >-
          The Id of the custom field definition. This can be fetched by the
          custom_field_definitions API.
        example: '{{custom_field_definition_id}}'
      - name: sourceType
        schema: string
        description: >-
          The entity type of the source. Supported sources: "people",
          "opportunity", "lead", "organization", "project", "user"
        example: '{{source_type}}'
      - name: sourceId
        schema: string
        description: The Copper record id for the specified entity type
        example: '{{source_id}}'
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /related_links
    method: createConnection
    httpMethod: post
    tag: Custom Fields
    typeScriptTag: customFields
    description: Create a connection
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: custom_field_definition_id
        schema: number
        description: ''
        example: 169
      - name: source
        schema: object
        description: ''
      - name: target
        schema: object
        description: ''
    responses:
      - statusCode: '200'
        description: ''
  - url: /related_links/{connection_id}
    method: deleteConnection
    httpMethod: delete
    tag: Custom Fields
    typeScriptTag: customFields
    description: Delete a connection
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /{entity}/{entity_id}/related/{related_entity_name}
    method: viewAllRelated
    httpMethod: get
    tag: Related Items
    typeScriptTag: relatedItems
    description: View all records of a given Entity Type related to an Entity
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /{entity}/{entity_id}/related
    method: getAllRelated
    httpMethod: get
    tag: Related Items
    typeScriptTag: relatedItems
    description: View all records related to an Entity
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /{entity_type}/{entity_id}/files
    method: listAttachedFiles
    httpMethod: get
    tag: File Upload
    typeScriptTag: fileUpload
    description: List attached files of an entity record
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /{entity_type}/{entity_id}/files
    method: relateToEntity
    httpMethod: post
    tag: File Upload
    typeScriptTag: fileUpload
    description: 'Upload 3: Relate the uploaded file to a specific entity'
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: file_name
        schema: string
        description: ''
        example: cat.jpeg
      - name: key
        schema: string
        description: ''
        example: >-
          temp_uploads/f0317718-9b56-4d28-bda4-985af6b75f56/b0c5afe5-3d87-495d-ae58-760fcafbadec
    responses:
      - statusCode: '200'
        description: ''
  - url: /{entity}/{entity_id}/files/{file_id}
    method: getFileMetadata
    httpMethod: get
    tag: File Upload
    typeScriptTag: fileUpload
    description: Get metadata of a specific attached file
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /{entity_type}/{entity_id}/files/s3_signed_url
    method: getSignedS3Url
    httpMethod: get
    tag: File Upload
    typeScriptTag: fileUpload
    description: 'Upload 1: Get signed S3 URL'
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /
    method: uploadFileToS3
    httpMethod: post
    tag: Webhooks
    typeScriptTag: webhooks
    description: 'Upload 2: Upload your file to S3'
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: AWSAccessKeyId
        schema: string
        description: ''
        example: AKIAJNSZAC7M6FS6F3KQ
      - name: acl
        schema: string
        description: ''
        example: private
      - name: file
        schema: string
        description: ''
        example: /Users/username/Desktop/cat.jpeg
      - name: key
        schema: string
        description: ''
        example: >-
          temp_uploads/f0317718-9b56-4d28-bda4-985af6b75f56/b0c5afe5-3d87-495d-ae58-760fcafbadec
      - name: policy
        schema: string
        description: ''
        example: >-
          eyJleHBpcmF0aW9uIjoiMjAxOS0wNi0xMFQyMjoyMTo1OC4wMDBaIiwiY29uZGl0aW9ucyI6W3siYnVja2V0IjoiYWxpLXVzZXJhc3NldHMtcHJvZHVjdGlvbiJ9LHsiYWNsIjoicHJpdmF0ZSJ9LHsia2V5IjoidGVtcF91cGxvYWRzL2YwMzE3NzE4LTliNTYtNGQyOC1iZGE0LTk4NWFmNmI3NWY1Ni9iMGM1YWZlNS0zZDg3LTQ5NWQtYWU1OC03NjBmY2FmYmFkZWMifSxbImNvbnRlbnQtbGVuZ3RoLXJhbmdlIiwwLDEwNzM3NDE4MjRdLHsic3VjY2Vzc19hY3Rpb25fc3RhdHVzIjoiMjAxIn1dfQ==
      - name: signature
        schema: string
        description: ''
        example: mxw/zFUbSmtKFWbxcfKQZRSmax4=
      - name: success_action_status
        schema: string
        description: ''
        example: '201'
    responses:
      - statusCode: '201'
        description: ''
  - url: /webhooks
    method: listSubscriptions
    httpMethod: get
    tag: Webhooks
    typeScriptTag: webhooks
    description: List all subscriptions
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /webhooks
    method: createSubscriptionEvent
    httpMethod: post
    tag: Webhooks
    typeScriptTag: webhooks
    description: Create new subscription
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
      - name: event
        schema: string
        description: ''
        example: update
      - name: secret
        schema: object
        description: ''
      - name: target
        schema: string
        description: ''
        example: https://your.endpoint.here
      - name: type
        schema: string
        description: ''
        example: lead
    responses:
      - statusCode: '200'
        description: ''
  - url: /webhooks/{example_webhook_id}
    method: unsubscribe
    httpMethod: delete
    tag: Webhooks
    typeScriptTag: webhooks
    description: Delete subscription (unsubscribe)
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
  - url: /webhooks{example_webhook_id}
    method: viewSubscriptionById
    httpMethod: get
    tag: Webhooks
    typeScriptTag: webhooks
    description: View subscription by ID
    parameters:
      - name: xPwAccesstoken
        schema: string
        description: ''
        example: '{{api_token}}'
      - name: xPwApplication
        schema: string
        description: ''
        example: developer_api
      - name: xPwUseremail
        schema: string
        description: ''
        example: '{{api_email}}'
    responses:
      - statusCode: '200'
        description: ''
numberOfSchemas: 109
apiDescription: >-
  The Copper Web API allows you to access and build your own applications that
  interact with Copper in more complex ways than the integrations we provide out
  of the box.


  The Copper Developer API ("Dev API") provides a RESTful interface with
  JSON-formatted responses to access most Copper resources. We are continuously
  working on expanding our API functionality, so stay tuned!


  Authentication

  ===================

  The Dev API uses a token based authentication. You have to include the token
  in the header of every request, along with the email address of the user who
  generated the token. Each Copper user can generate API keys and can have
  multiple valid tokens at the same time. Admins can see all user generated
  tokens.


  To generate an API token, in the Copper web app go to System settings > API
  Keys and click the 'CREATE A KEY' button. Copper allows you to label each key
  for its unique purpose. You'll need to generate an API key to make an API
  Request.


  Requests

  ========

  **Encryption**


  All requests must be sent using HTTPS with TLS 1.2 or higher. Please make sure
  your developer tools support this version of TLS as older versions or SSL are
  not supported for security reasons.


  **Headers**


  All Copper API calls must include the following headers to authenticate the
  request:


  |       Key        |            Value             |

  | ---------------- | ---------------------------- |

  | X-PW-AccessToken | _API Key_                    |

  | X-PW-Application | "developer_api"              |

  | X-PW-UserEmail   | _Email address of token owner_ |

  | Content-Type     | "application/json"           |


  **Body**


  For PUT or POST requests (e.g. create, update, search), the request parameters
  must be provided as JSON in the request body.


  **Rate limits**


  All API calls are limited to 180 requests every minute. Once either limit has
  been reached, calls will return and error with status code 429. This rate
  limit is evaluated on a rolling window basis.


  Responses

  =========


  Responses use the customary [HTTP status
  codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes), with the most
  typical ones being:


  |          Code          |        Meaning        |

  | ---------------------- | --------------------- |

  | *Successful Responses* |                       |

  | 200                    | OK                    |

  | *Error Responses*      |                       |

  | 400                    | Bad Request           |

  | 401                    | Unauthorized          |

  | 429                    | Too many requests     |

  | 500                    | Internal Server Error |


  Each of the entities in the Dev API (Leads, People, etc.) has a '/search'
  endpoint. For requests sent to '/search' endpoints, the response header
  contains a field called 'X-PW-TOTAL'. This value represents an upper bound of
  the total number of records returned in the search query. It allows the
  developer to estimate roughly how long it would take to extract the data when
  the results are paginated (See Paginating Search Results section).


  Search

  ======================


  **Search by Phone Number**


  There are two types of phone number search, fuzzy and partial. The difference
  is in the way the input is permuted prior to search. In general, fuzzy search
  returns more results, but partial search returns results that are closer to
  what the user entered. Let's illustrate from an example. Suppose the user
  enters "408-555-1234". In either search, non-numeric characters are stripped
  first.


  Partial Search: "4085551234" is searched in the database for all records that
  have phone numbers that end in "4085551234". This includes entities with phone
  numbers such as "4085551234", "1-4085551234", "123-4085551234", etc.


  Fuzzy Search: "4085551234" is permuted first by stripping 1-6 digits from the
  beginning of the sequence. If the resulting sequence is less than 6 digits
  long, it is dropped from the search. In this case, the search string set is
  "4085551234", "085551234", "85551234", "5551234", "551234". Any records in the
  database where the phone number ends in the string set is returned. The query
  results form fuzzy match includes results from the partial search and many
  more ambiguous results. For example, records with phone number such as
  "5105551234" would also be returned.


  To designate the type of phone number search, specify the "match" field when
  entering the phone number in the search request body. E.g.,


  { "phone_number": { "value": "5551234", "match": "partial" } }


  Match scheme is partial if the input string is 6 digits or fewer. For an input
  string 7 digits or more, the default behavior is fuzzy search if a match
  scheme is not specified.


  Paginating search results

  ======================


  Our /search endpoints return multiple records per response. How many records
  are included in a single response (=page size) is determined by an optional
  search parameter called "page_size". The default value for "page_size" is 20,
  and its value can be set to any integer between 1 and 200. When the search
  criteria match more records than what fits on a single page then you have to
  paginate the search results using one of the following strategies in order to
  get all the records that match your search.


  Strategy 1: Calculate the number of pages

  ---------------------------


  Every response from a /search endpoint has a field in the response header
  called 'X-PW-TOTAL'. It shows an upper bound of the total number of records
  that match the search criteria.



  To calculate the number of pages to cycle thru, divide the total number of
  records by the page size. For the sake of example, let's assume that the page
  size is 200 and the total number of records is 775. The number of pages is
  775/200 = 3.875 which rounded up to the nearest integer gives us 4 pages.



  Now, to cycle thru the pages we need to set the "page_number" parameter in the
  request to 1 initially, and then send additional requests for the subsequent
  pages.



  The request header will look like this:



  _For the first page_



  {


  ...


  "page_size": 200,


  "page_number": 1


  ...


  }



  _For the second page_


  {


  ...


  "page_size": 200,


  "page_number": 2


  ...


  }


  and so on.


  This strategy has one caveat; if records are added/modified in the system
  between the time when the header field is evaluated and when the actual pages
  are requested then those records may be included or omitted in/from the
  results incorrectly.


  Strategy 2: Count the records on each page

  ------------------

  In this scenario, we send a search request and specify the first page, by
  setting "page_number" to 1. Then use a logic that performs the following
  evaluation on the response.



  1. Count the number of records in the response

  2. Check if the record count equals the page_size

  3. a. If the record is less than the page size then we are on the last page
  and we can stop paginating

  3. b. If the record count equals the page size then increase "page_size" by
  one, send another request and start over with this evaluation logic.



  Using the same example as above, with a page size of 200 and 775 total records
  the evaluation would go down as follows


  _Page 1_


  {


  ...


  "page_size": 200,


  "page_number": 1


  ...


  }


  The response will have 200 records which equals the page size, so let's
  continue requesting.


  _Page 2_


  {


  ...


  "page_size": 200,


  "page_number": 2


  ...


  }


  The response will have 200 records which equals the page size, so let's
  continue requesting. The 3rd page will have identical results.


  _Page 4 (last page)_


  {


  ...


  "page_size": 200,


  "page_number": 4


  ...


  }


  The response will have 175 records, which is LESS than the page size, which
  tells us we are on the last page and we can stop paginating.


  Remember to sort you search results!

  -------------------

  It is highly recommended that you sort the results you get back from a /search
  endpoint. This ensures that records are returned in a consistent fashion
  across requests. One common sorting scenario is to sort records by the date
  they were last updated, in a descending order. For this sorting please add the
  following parameters to the search request:


  {


  ...


  "sort_by": "date_modified",


  "sort_direction": "desc"


  ...


  }



  Best practices

  ==============

  **Date formats**


  Date formats are in Unix Timestamp format and values are set and returned as
  10 digit long integers (For example {"date_created": 1483988828}). There are a
  few notable exceptions, however. The "close_date" on Opportunities, Task Due
  Dates and Reminder dates, and custom date fields use an ISO "mm/dd/yyyy"
  format for setting and returning date values.



  **The API respects Team Permissions**


  A user's access to records in Copper may be restricted by Team Permission
  settings. The Dev API respects team permissions. It is recommended to use the
  API credentials of an admin user when using the Dev API because Admins have
  unrestricted data access.


  **Create a Developer User**


  If you use the Dev API to create records in Copper, it is advisable to create
  a separate (non-personal) user just for integration purposes. Generate API
  credentials for this user and use those for integration. This way records
  created thru the Dev API will be owned by this integration user and can be
  filtered accordingly.


  **Entity ID scopes**


  Unique identifiers are unique within the scope of a single resource type. For
  example, a given identifier for a Lead will never be assigned to a different
  Lead, but a different resource such as a Person could use the same identifier.


  **File Upload**


  Currently, the Developer API does not allow for file uploads. There is a
  workaround available.


  1. Create a custom URL field.

  2. Upload your file to Google Drive.

  3. Push the created file link into your Copper custom URL field.


  Embedded Apps

  ===================

  Embedded Integrations lets you easily display an integration you've built in
  the Copper web app. [Working with our
  SDK](https://docs.copper.com/pw-app-sdk/), you can create and embed your own
  app in Copper in just a few clicks. To join the beta, click
  [here](https://docs.google.com/forms/d/1tEgGLqAeYQ2PFmkaiwGEBRNGcpDBrK7zKvd2XXtqoIw/viewform?edit_requested=true).


  For more info on embedded apps, please go
  [here](https://support.copper.com/hc/en-us/articles/360001624708-Working-with-Embedded-Integrations-BETA-).


  Appendix

  ============================

  **Categories**


  When creating or updating entities such as leads or people, there are fields
  where value and category can be specified. These fields include email, phone,
  social, and website. Below are the valid categories for each of these fields.


  |  Field    | 
  Categories                                                                                  
  |

  |-----------|-----------------------------------------------------------------------------------------------|

  |  Email    |  work, personal,
  other                                                                        |

  |  Phone    |  mobile, work, home,
  other                                                                    |

  |  Social   |  linkedin, twitter, googleplus, facebook, youtube, quora,
  foursquare, klout, gravatar, other  |

  |  Website  |  work, personal,
  other                                                                        |


  Getting Support

  ============================

  For code samples, please visit [Code
  Samples](https://support.copper.com/hc/en-us/articles/115000816826-Code-samples-and-tips).


  For API questions and support, please [Submit a
  request](https://support.prosperworks.com/hc/en-us/requests/new) or post your
  question in our [Developer
  Forum](https://support.prosperworks.com/hc/en-us/community/topics/201113143-ProsperWorks-API-Developer-Forum).
