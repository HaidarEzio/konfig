hash: 1d404803e3220495c39c60b34991c11274eb8b986bcf6c243a9a6f22cdd607d4
methodObjects:
  - url: /api/v3/users
    method: listExcludedFormer
    httpMethod: get
    tag: Users
    typeScriptTag: users
    description: List Users
    parameters:
      - name: dtContractEnd
        schema: string
        description: |
          `{comparator},{date-time}`.
      - name: dtContractStart
        schema: string
        description: '{comparator},{date-time}'
      - name: id
        schema: array
        description: User's identifier
      - name: modifiedAt
        schema: string
        description: '{comparator},{date-time}'
      - name: paging
        schema: string
        description: '{offset},{limit}. Defaults to 0,1000.'
      - name: fields
        schema: array
        description: ''
      - name: mail
        schema: string
        description: User's mail
      - name: login
        schema: string
        description: User's login
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '500'
        description: User Not Found
  - url: /api/v3/users
    method: createNewUser
    httpMethod: post
    tag: Users
    typeScriptTag: users
    description: Create a new User
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
      - statusCode: '500'
        description: Internal Server Error
  - url: /api/v3/users/{userId}
    method: getById
    httpMethod: get
    tag: Users
    typeScriptTag: users
    description: Get a User by Id
    parameters:
      - name: fields
        schema: array
        description: >
          Comma-separated list of fields of the user to include in responses.
          Extended data can be retrieved with `?fields=extendedData`.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '500'
        description: User Not Found
  - url: /api/v3/users/{userId}
    method: updateById
    httpMethod: put
    tag: Users
    typeScriptTag: users
    description: Update a User by id
    parameters:
      - name: fields
        schema: array
        description: Fields of the user, comma separated
      - name: firstName
        schema: string
        description: ''
      - name: lastName
        schema: string
        description: ''
      - name: mail
        schema: string
        description: ''
      - name: login
        schema: string
        description: ''
      - name: legalEntityId
        schema: integer
        description: ''
      - name: cspId
        schema: integer
        description: ''
      - name: calendarId
        schema: 'null'
        description: ''
      - name: employeeNumber
        schema: string
        description: ''
      - name: birthDate
        schema: string
        description: ''
      - name: userWorkCycles
        schema: array
        description: ''
      - name: departmentId
        schema: integer
        description: ''
      - name: managerId
        schema: integer
        description: ''
      - name: rolePrincipalId
        schema: integer
        description: ''
      - name: habilitedRoles
        schema: array
        description: ''
      - name: cultureId
        schema: integer
        description: ''
      - name: address
        schema: string
        description: ''
      - name: bankName
        schema: string
        description: ''
      - name: directLine
        schema: string
        description: ''
      - name: jobTitle
        schema: string
        description: ''
      - name: gender
        schema: string
        description: ''
      - name: nationality
        schema: string
        description: ''
      - name: personalEmail
        schema: string
        description: ''
      - name: personalMobile
        schema: string
        description: ''
      - name: professionalMobile
        schema: string
        description: ''
      - name: quote
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: Bad Request
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
numberOfSchemas: 7
apiDescription: |
  Welcome on the documentation for the Directory v3 API.
