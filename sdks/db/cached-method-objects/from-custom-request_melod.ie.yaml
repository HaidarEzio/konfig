hash: e50ee668a89b732632ee7e6332404f6c340a3e57bd002be8b2c0e967c8426d10
methodObjects:
  - url: /api/v1/collections
    method: getListAll
    httpMethod: get
    tag: Collections
    typeScriptTag: collections
    description: Get list of all available collections
    parameters:
      - name: authorization
        schema: string
        required: true
        description: Your API token.
        example: AUTHORIZATION
    responses:
      - statusCode: '200'
        description: ''
  - url: /api/v1/collections/{collection_safename}
    method: getTracks
    httpMethod: get
    tag: Collections
    typeScriptTag: collections
    description: Get tracks from a collection
    parameters:
      - name: authorization
        schema: string
        required: true
        description: Your API token.
        example: AUTHORIZATION
      - name: collectionSafename
        schema: undefined
        required: true
        description: ''
    responses:
      - statusCode: '200'
        description: ''
  - url: /api/v1/tracks/search
    method: tracks
    httpMethod: get
    tag: Search
    typeScriptTag: search
    description: Perform track search
    parameters:
      - name: authorization
        schema: string
        required: true
        description: Your API token.
        example: AUTHORIZATION
      - name: page
        schema: string
        required: false
        description: Page of the results you want to retrieve.
      - name: sort
        schema: string
        required: false
        description: >-
          Sorting of results, possible values are “latest”, “shuffle” and
          “featured” (used by default).
      - name: q
        schema: string
        required: false
        description: >-
          General string query to search for (mostly to use for track names,
          composers).
      - name: genreGroup[]
        schema: string
        required: false
        description: Array of genre groups to search for.
      - name: genreGroupOperator
        schema: string
        required: false
        description: >-
          Logic operator for genre groups, can be AND or OR (default, also
          selected if invalid value is provided). Operator is case sensitive!
      - name: notGenreGroup[]
        schema: string
        required: false
        description: Array of genre groups to exclude from the search.
      - name: genre[]
        schema: string
        required: false
        description: Array of genres to search for.
      - name: genreOperator
        schema: string
        required: false
        description: >-
          Logic operator for genres, can be AND or OR (default, also selected if
          invalid value is provided). Operator is case sensitive!
      - name: notGenre[]
        schema: string
        required: false
        description: Array of genres to exclude from the search.
      - name: mood[]
        schema: string
        required: false
        description: Array of moods to search for.
      - name: notMood[]
        schema: string
        required: false
        description: Array of moods to exclude from the search.
      - name: instrument[]
        schema: string
        required: false
        description: Array of instruments to search for.
      - name: notInstrument[]
        schema: string
        required: false
        description: Array of instruments to exclude from the search.
      - name: purpose[]
        schema: string
        required: false
        description: >-
          Array of purposes to search for. Purposes are like 'TV production
          genres'.
      - name: notPurpose[]
        schema: string
        required: false
        description: Array of purposes to exclude from the search.
      - name: variableTempo
        schema: string
        required: false
        description: True/false; Should return tracks with variable tempo or not.
      - name: minTempo
        schema: string
        required: false
        description: >-
          Minimal tempo in BPM for searched tracks (must be used together with
          max_tempo).
      - name: maxTempo
        schema: string
        required: false
        description: >-
          Maximal tempo in BPM for searched tracks (must be used together with
          min_tempo).
      - name: minDuration
        schema: string
        required: false
        description: >-
          Minimal duration in seconds for searched tracks (must be used together
          with max_duration).
      - name: maxDuration
        schema: string
        required: false
        description: >-
          Maximal duration in seconds for searched tracks (must be used together
          with min_duration).
      - name: key[]
        schema: string
        required: false
        description: Array of desired keys of the tracks.
      - name: perPage
        schema: integer
        required: false
        description: Amount of results per page (default is 15, max is 200)
    responses:
      - statusCode: '200'
        description: ''
  - url: /api/v1/tracks/simplified_search
    method: mainTracksInfoGet
    httpMethod: get
    tag: Search
    typeScriptTag: search
    description: Perform track search - with main tracks info only
    parameters:
      - name: authorization
        schema: string
        required: true
        description: Your API token.
        example: AUTHORIZATION
      - name: page
        schema: string
        required: false
        description: Page of the results you want to retrieve.
      - name: sort
        schema: string
        required: false
        description: >-
          Sorting of results, possible values are “latest”, “shuffle” and
          “featured” (used by default).
      - name: q
        schema: string
        required: false
        description: >-
          General string query to search for (mostly to use for track names,
          composers).
      - name: genreGroup[]
        schema: string
        required: false
        description: Array of genre groups to search for.
      - name: genreGroupOperator
        schema: string
        required: false
        description: >-
          Logic operator for genre groups, can be AND or OR (default, also
          selected if invalid value is provided). Operator is case sensitive!
      - name: notGenreGroup[]
        schema: string
        required: false
        description: Array of genre groups to exclude from the search.
      - name: genre[]
        schema: string
        required: false
        description: Array of genres to search for.
      - name: genreOperator
        schema: string
        required: false
        description: >-
          Logic operator for genres, can be AND or OR (default, also selected if
          invalid value is provided). Operator is case sensitive!
      - name: notGenre[]
        schema: string
        required: false
        description: Array of genres to exclude from the search.
      - name: mood[]
        schema: string
        required: false
        description: Array of moods to search for.
      - name: notMood[]
        schema: string
        required: false
        description: Array of moods to exclude from the search.
      - name: instrument[]
        schema: string
        required: false
        description: Array of instruments to search for.
      - name: notInstrument[]
        schema: string
        required: false
        description: Array of instruments to exclude from the search.
      - name: purpose[]
        schema: string
        required: false
        description: >-
          Array of purposes to search for. Purposes are like 'TV production
          genres'.
      - name: notPurpose[]
        schema: string
        required: false
        description: Array of purposes to exclude from the search.
      - name: variableTempo
        schema: string
        required: false
        description: True/false; Should return tracks with variable tempo or not.
      - name: minTempo
        schema: string
        required: false
        description: >-
          Minimal tempo in BPM for searched tracks (must be used together with
          max_tempo).
      - name: maxTempo
        schema: string
        required: false
        description: >-
          Maximal tempo in BPM for searched tracks (must be used together with
          min_tempo).
      - name: minDuration
        schema: string
        required: false
        description: >-
          Minimal duration in seconds for searched tracks (must be used together
          with max_duration).
      - name: maxDuration
        schema: string
        required: false
        description: >-
          Maximal duration in seconds for searched tracks (must be used together
          with min_duration).
      - name: key[]
        schema: string
        required: false
        description: Array of desired keys of the tracks.
      - name: perPage
        schema: integer
        required: false
        description: Amount of results per page (default is 15, max is 200)
    responses:
      - statusCode: '200'
        description: ''
  - url: /api/v1/tracks/genres
    method: getAllGenres
    httpMethod: get
    tag: Genres
    typeScriptTag: genres
    description: Get list of all current genres
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
  - url: /api/v1/tracks/genre_groups
    method: getAllGenreGroups
    httpMethod: get
    tag: Genre groups
    typeScriptTag: genreGroups
    description: Get list of all current genre groups
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
  - url: /api/v1/tracks/moods
    method: getAll
    httpMethod: get
    tag: Moods
    typeScriptTag: moods
    description: Get list of all current moods
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
  - url: /api/v1/tracks/instruments
    method: getAllInstruments
    httpMethod: get
    tag: Instruments
    typeScriptTag: instruments
    description: Get list of all current instruments
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
  - url: /api/v1/tracks/purposes
    method: getAll
    httpMethod: get
    tag: Purposes
    typeScriptTag: purposes
    description: Get list of all current purposes
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
  - url: /api/v1/tracks/trending
    method: getPopularTracks
    httpMethod: get
    tag: Trending
    typeScriptTag: trending
    description: Get 25 most popular tracks currently
    parameters:
      - name: authorization
        schema: string
        required: true
        description: Your API token.
        example: AUTHORIZATION
    responses:
      - statusCode: '200'
        description: ''
  - url: /api/v1/tracks/simplified_trending
    method: getPopularTracks
    httpMethod: get
    tag: Trending
    typeScriptTag: trending
    description: Get 25 most popular tracks currently - with main tracks info only
    parameters:
      - name: authorization
        schema: string
        required: true
        description: Your API token.
        example: AUTHORIZATION
    responses:
      - statusCode: '200'
        description: ''
  - url: /api/v1/tracks/{track_id}/info
    method: trackInfoGet
    httpMethod: get
    tag: Info
    typeScriptTag: info
    description: Get info about the specific track id
    parameters:
      - name: authorization
        schema: string
        required: true
        description: Your API token.
        example: AUTHORIZATION
      - name: trackId
        schema: undefined
        required: true
        description: ''
    responses:
      - statusCode: '200'
        description: ''
  - url: /api/v1/tracks/{track_id}/download
    method: trackFile
    httpMethod: get
    tag: Download
    typeScriptTag: download
    description: Download a track
    parameters:
      - name: authorization
        schema: string
        required: true
        description: Your API token.
        example: AUTHORIZATION
      - name: trackId
        schema: undefined
        required: true
        description: ''
      - name: version
        schema: string
        required: false
        description: >-
          Version of the track to be retrived, can be "wav" or "mp3" ("wav" is
          default)
    responses:
      - statusCode: '200'
        description: ''
  - url: /api/v1/tracks/{track_version_id}/download_version
    method: getVersionDownload
    httpMethod: get
    tag: Download track version
    typeScriptTag: downloadTrackVersion
    description: Download a track version
    parameters:
      - name: authorization
        schema: string
        required: true
        description: Your API token.
        example: AUTHORIZATION
      - name: trackVersionId
        schema: undefined
        required: true
        description: ''
      - name: version
        schema: string
        required: false
        description: >-
          Version of the track to be retrived, can be "wav" or "mp3" ("wav" is
          default)
    responses:
      - statusCode: '200'
        description: ''
numberOfSchemas: 16
apiDescription: Track API
