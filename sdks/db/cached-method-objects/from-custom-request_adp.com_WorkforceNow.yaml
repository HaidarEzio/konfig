hash: 7273993dd9b61ea157dcabaf6d08969d7eff4579dbfa56bbe02944c7cfe8082a
methodObjects:
  - url: /hr/v2/workers
    method: listTop5PreventCache
    httpMethod: get
    tag: HR
    typeScriptTag: hr
    description: Worker V2 (List with Top 5 and Prevent Cache)
    parameters:
      - name: $top
        schema: string
        description: ''
        example: '5'
      - name: preventCache
        schema: string
        description: ''
        example: TIMESTAMP
      - name: $filter
        schema: string
        description: ''
        example: >-
          workers/workAssignments/homeOrganizationalUnits/typeCode/codeValue eq
          'Department' and
          workers/workAssignments/homeOrganizationalUnits/nameCode/codeValue eq
          '001000'
    responses:
      - statusCode: '200'
        description: ''
  - url: /hr/v2/workers/{anthony-albright-aoid}
    method: getWorkerByAoid
    httpMethod: get
    tag: HR
    typeScriptTag: hr
    description: Worker V2 (Single by AOID)
    parameters:
      - name: preventCache
        schema: string
        description: ''
        example: TIMESTAMP
    responses:
      - statusCode: '200'
        description: ''
  - url: /core/v1/operations/workerInformationManagement/hr.v2.workers/{key}
    method: checkAsyncRequestStatus
    httpMethod: get
    tag: HR
    typeScriptTag: hr
    description: Worker V2 (Check Async Request Status)
    parameters:
      - name: $select
        schema: string
        description: ''
        example: processingStatus
    responses:
      - statusCode: '200'
        description: ''
  - url: /hr/v2/worker-demographics
    method: listTop5PreventCache
    httpMethod: get
    tag: HR
    typeScriptTag: hr
    description: Worker Demographics V2 (List with Top 5 and Prevent Cache)
    parameters:
      - name: $top
        schema: string
        description: ''
        example: '5'
      - name: preventCache
        schema: string
        description: ''
        example: TIMESTAMP
      - name: $filter
        schema: string
        description: ''
        example: >-
          workers/workAssignments/homeOrganizationalUnits/typeCode/codeValue eq
          'Department' and
          workers/workAssignments/homeOrganizationalUnits/nameCode/codeValue eq
          '001000'
    responses:
      - statusCode: '200'
        description: ''
  - url: /hr/v2/worker-demographics/{anthony-albright-aoid}
    method: getWorkerDemographicsByAoid
    httpMethod: get
    tag: HR
    typeScriptTag: hr
    description: Worker Demographics V2 (Single by AOID)
    parameters:
      - name: preventCache
        schema: string
        description: ''
        example: TIMESTAMP
    responses:
      - statusCode: '200'
        description: ''
  - url: /payroll/v1/payroll-output
    method: listPayrollOutputs
    httpMethod: get
    tag: Payroll
    typeScriptTag: payroll
    description: Payroll Outputs V1 (List for Region / Company Code / Year / Week)
    parameters:
      - name: $filter
        schema: string
        description: ''
        example: >-
          payrollScheduleReference/payrollYear eq 2018 and
          payrollScheduleReference/payrollWeekNumber eq 10 and
          payrollGroupCode/codeValue eq %26Y%26 and payrollRegionCode/codeValue
          eq BALT
      - name: $count
        schema: string
        description: ''
        example: 'true'
      - name: useCache
        schema: string
        description: ''
        example: 'false'
      - name: level
        schema: string
        description: ''
        example: details
      - name: $select
        schema: string
        description: ''
        example: >-
          earnings,reportableEarningsAndBenefits,reimbursements,statutoryDeductions,nonStatutoryDeductions,memos,configurationTags
    responses:
      - statusCode: '200'
        description: ''
  - url: /auth/oauth/v2/token
    method: createWithAuthorizationHeader
    httpMethod: post
    tag: Token Request
    typeScriptTag: tokenRequest
    description: Token Request (Authorization Header)
    parameters:
      - name: grantType
        schema: string
        description: ''
        example: client_credentials
      - name: clientId
        schema: string
        description: ''
        example: '{{client-id}}'
      - name: clientSecret
        schema: string
        description: ''
        example: '{{client-secret}}'
    responses:
      - statusCode: '200'
        description: ''
numberOfSchemas: 0
apiDescription: ADP API endpoints.
