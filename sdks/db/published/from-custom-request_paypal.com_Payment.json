{
  "securitySchemes": {
    "Oauth2": {
      "type": "oauth2",
      "description": "OAuth 2.0 authentication",
      "flows": {
        "clientCredentials": {
          "tokenUrl": "/v1/oauth2/token",
          "scopes": {
            "https://uri.paypal.com/services/payments/payment/authcapture": "Permission to do non-real time payments like capture on authorization",
            "https://uri.paypal.com/services/payments/refund": "Permission to initiate a refund on a capture transaction",
            "https://uri.paypal.com/services/payments/non-referenced-credit": "Permission to initiate non referenced credit",
            "https://uri.paypal.com/services/payments/realtimepayment": "Permission to do any real time payment, with support for sale/authorize/order intents",
            "https://uri.paypal.com/services/payments/reversepayment": "Permission to do any reverse payment"
          }
        }
      }
    }
  },
  "apiBaseUrl": "https://api-m.sandbox.paypal.com",
  "apiVersion": "2.5",
  "apiDescription": "Call the Payments API to authorize payments, capture authorized payments, refund payments that have already been captured, and show payment information. Use the Payments API in conjunction with the <a href=\"/docs/api/orders/v2/\">Orders API</a>. For more information, see the <a href=\"/docs/checkout/\">PayPal Checkout Overview</a>.",
  "apiTitle": "Payments",
  "endpoints": 7,
  "sdkMethods": 7,
  "schemas": 86,
  "parameters": 22,
  "originalCustomRequest": {
    "type": "GET",
    "url": "https://raw.githubusercontent.com/paypal/paypal-rest-api-specifications/main/openapi/payments_payment_v2.json"
  },
  "customRequestSpecFilename": "paypal.com_Payment.yaml",
  "difficultyScore": 42.5,
  "difficulty": "Easy",
  "company": "PayPal",
  "serviceName": "Payment",
  "sdkName": "pay-pal-payment-{language}-sdk",
  "clientName": "PayPalPayment",
  "metaDescription": "We're championing possibilities for all by making money fast, easy, and more enjoyable. Our hope is unlock opportunities for people in their everyday lives and empower the millions of people and businesses around the world who trust, rely, and use PayPal every day.\n\nFor support, visit the PayPal Help Center. https://payp.al/help\n\nFor employment opportunities, check out our job openings in the 'Jobs' tab. We're an equal opportunity employer that welcomes diversity, and offer generous benefits to help you thrive at work and in your free time.",
  "apiStatusUrls": "inherit",
  "homepage": "www.paypal.com/",
  "developerDocumentation": "developer.paypal.com/",
  "categories": [
    "payments",
    "financial_technology",
    "fintech",
    "online_payments",
    "financial_services"
  ],
  "category": "Payment Processing",
  "methods": [
    {
      "url": "/v2/payments/authorizations/{authorization_id}",
      "method": "showDetails",
      "httpMethod": "get",
      "tag": "authorizations",
      "typeScriptTag": "authorizations",
      "description": "Show details for authorized payment",
      "parameters": [
        {
          "name": "authorizationId",
          "schema": "string",
          "required": true,
          "description": "The PayPal-generated ID for the authorized payment to void.",
          "example": "AUTHORIZATION_ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The authorized payment transaction."
        },
        {
          "statusCode": "401",
          "description": "Authentication failed due to missing Authorization header, or invalid authentication credentials."
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": "The request failed because an internal server error occurred."
        },
        {
          "statusCode": "default",
          "description": "The default error response."
        }
      ]
    },
    {
      "url": "/v2/payments/authorizations/{authorization_id}/capture",
      "method": "capturePayment",
      "httpMethod": "post",
      "tag": "authorizations",
      "typeScriptTag": "authorizations",
      "description": "Capture authorized payment",
      "parameters": [
        {
          "name": "authorizationId",
          "schema": "string",
          "required": true,
          "description": "The PayPal-generated ID for the authorized payment to void.",
          "example": "AUTHORIZATION_ID"
        },
        {
          "name": "payPalRequestId",
          "schema": "string",
          "required": false,
          "description": "The server stores keys for 45 days."
        },
        {
          "name": "prefer",
          "schema": "string",
          "required": false,
          "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
          "default": "return=minimal"
        },
        {
          "name": "amount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoice_id",
          "schema": "string",
          "description": "",
          "example": "INVOICE-123"
        },
        {
          "name": "final_capture",
          "schema": "boolean",
          "description": "",
          "example": true
        },
        {
          "name": "note_to_payer",
          "schema": "string",
          "description": "",
          "example": "If the ordered color is not available, we will substitute with a different color free of charge."
        },
        {
          "name": "soft_descriptor",
          "schema": "string",
          "description": "",
          "example": "Bob's Custom Sweaters"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "A captured payment."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Authentication failed due to missing Authorization header, or invalid authentication credentials."
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": "The request failed because an internal server error occurred."
        },
        {
          "statusCode": "default",
          "description": "The default error response."
        }
      ]
    },
    {
      "url": "/v2/payments/authorizations/{authorization_id}/reauthorize",
      "method": "reauthorizePayment",
      "httpMethod": "post",
      "tag": "authorizations",
      "typeScriptTag": "authorizations",
      "description": "Reauthorize authorized payment",
      "parameters": [
        {
          "name": "authorizationId",
          "schema": "string",
          "required": true,
          "description": "The PayPal-generated ID for the authorized payment to void.",
          "example": "AUTHORIZATION_ID"
        },
        {
          "name": "payPalRequestId",
          "schema": "string",
          "required": false,
          "description": "The server stores keys for 45 days."
        },
        {
          "name": "prefer",
          "schema": "string",
          "required": false,
          "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
          "default": "return=minimal"
        },
        {
          "name": "amount",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The authorized payment transaction."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Authentication failed due to missing Authorization header, or invalid authentication credentials."
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": "The request failed because an internal server error occurred."
        },
        {
          "statusCode": "default",
          "description": "The default error response."
        }
      ]
    },
    {
      "url": "/v2/payments/authorizations/{authorization_id}/void",
      "method": "voidPayment",
      "httpMethod": "post",
      "tag": "authorizations",
      "typeScriptTag": "authorizations",
      "description": "Void authorized payment",
      "parameters": [
        {
          "name": "authorizationId",
          "schema": "string",
          "required": true,
          "description": "The PayPal-generated ID for the authorized payment to void.",
          "example": "AUTHORIZATION_ID"
        },
        {
          "name": "payPalAuthAssertion",
          "schema": "string",
          "required": false,
          "description": "An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see [PayPal-Auth-Assertion](/https://developer.paypal.com/.<blockquote><strong>Note:</strong>For three party transactions in which a partner is managing the API calls on behalf of a merchant, the partner must identify the merchant using either a PayPal-Auth-Assertion header or an access token with target_subject.</blockquote>"
        },
        {
          "name": "prefer",
          "schema": "string",
          "required": false,
          "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
          "default": "return=minimal"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The authorized payment transaction."
        },
        {
          "statusCode": "204",
          "description": "A successful request returns the HTTP <code>204 No Content</code> status code with no JSON response body. This response is returned when the Prefer header is set to return=minimal."
        },
        {
          "statusCode": "400",
          "description": "Request is not well-formed, syntactically incorrect, or violates schema."
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": "The request failed because an internal server error occurred."
        },
        {
          "statusCode": "default",
          "description": "The default error response."
        }
      ]
    },
    {
      "url": "/v2/payments/captures/{capture_id}",
      "method": "showDetails",
      "httpMethod": "get",
      "tag": "captures",
      "typeScriptTag": "captures",
      "description": "Show captured payment details",
      "parameters": [
        {
          "name": "captureId",
          "schema": "string",
          "required": true,
          "description": "The PayPal-generated ID for the captured payment to refund.",
          "example": "CAPTURE_ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A captured payment."
        },
        {
          "statusCode": "401",
          "description": "Authentication failed due to missing Authorization header, or invalid authentication credentials."
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": "The request failed because an internal server error occurred."
        },
        {
          "statusCode": "default",
          "description": "The default error response."
        }
      ]
    },
    {
      "url": "/v2/payments/captures/{capture_id}/refund",
      "method": "refundPayment",
      "httpMethod": "post",
      "tag": "captures",
      "typeScriptTag": "captures",
      "description": "Refund captured payment",
      "parameters": [
        {
          "name": "captureId",
          "schema": "string",
          "required": true,
          "description": "The PayPal-generated ID for the captured payment to refund.",
          "example": "CAPTURE_ID"
        },
        {
          "name": "payPalRequestId",
          "schema": "string",
          "required": false,
          "description": "The server stores keys for 45 days."
        },
        {
          "name": "prefer",
          "schema": "string",
          "required": false,
          "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
          "default": "return=minimal"
        },
        {
          "name": "payPalAuthAssertion",
          "schema": "string",
          "required": false,
          "description": "An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see [PayPal-Auth-Assertion](/https://developer.paypal.com/.<blockquote><strong>Note:</strong>For three party transactions in which a partner is managing the API calls on behalf of a merchant, the partner must identify the merchant using either a PayPal-Auth-Assertion header or an access token with target_subject.</blockquote>"
        },
        {
          "name": "amount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "custom_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "invoice_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "note_to_payer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "payment_instruction",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The refund information."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": "The request failed because an internal server error occurred."
        },
        {
          "statusCode": "default",
          "description": "The default error response."
        }
      ]
    },
    {
      "url": "/v2/payments/refunds/{refund_id}",
      "method": "details",
      "httpMethod": "get",
      "tag": "refunds",
      "typeScriptTag": "refunds",
      "description": "Show refund details",
      "parameters": [
        {
          "name": "refundId",
          "schema": "string",
          "required": true,
          "description": "The PayPal-generated ID for the refund for which to show details.",
          "example": "REFUND_ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The refund information."
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": "The request failed because an internal server error occurred."
        },
        {
          "statusCode": "default",
          "description": "The default error response."
        }
      ]
    }
  ],
  "repositoryDescription": "We empower individuals and businesses worldwide through fast, easy, and enjoyable financial solutions. Join us for diverse job opportunities and generous benefits. PayPal's {language} SDK for Payment API generated by Konfig (https://konfigthis.com/).",
  "logo": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/paypal/payment/logo.png",
  "openApiRaw": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/paypal/payment/openapi.yaml",
  "openApiGitHubUi": "https://github.com/konfig-sdks/openapi-examples/tree/HEAD/paypal/payment/openapi.yaml",
  "previewLinkImage": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/paypal/payment/imagePreview.jpg",
  "faviconUrl": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/paypal/payment/favicon.png",
  "clientNameCamelCase": "payPalPayment",
  "lastUpdated": "2024-03-27T17:31:49.635Z",
  "typescriptSdkUsageCode": "import { PayPalPayment } from 'pay-pal-payment-typescript-sdk';\n\nconst payPalPayment = new PayPalPayment({\n    // OAuth 2.0 authentication\n    clientId: \"CLIENT_ID\",\n    clientSecret: \"CLIENT_SECRET\"\n})",
  "typescriptSdkFirstRequestCode": "// Show details for authorized payment\nconst showDetailsResponse = payPalPayment.authorizations.showDetails({\n    authorizationId: \"AUTHORIZATION_ID\"\n})",
  "fixedSpecFileName": "pay-pal-payment-fixed-spec.yaml"
}