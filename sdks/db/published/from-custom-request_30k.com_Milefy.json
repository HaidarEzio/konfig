{
  "securitySchemes": {
    "apiKey": {
      "name": "apiKey",
      "description": "We use SSL to transmit data from client to our service. You must authenticate client with provided API key passed as parameter in query string. [Don't have API key?](mailto:support@30k.com)\n\n#### URL example\n\n```https://milefy-api.30k.com/travelers?apiKey=eW91cmxvZ2luOnlvd```\n",
      "type": "apiKey",
      "in": "query"
    }
  },
  "apiBaseUrl": "milefy-api.30k.com",
  "apiVersion": "3.0",
  "apiDescription": "## Introduction\n\nWelcome to the 30K Milefy API documentation!\n\n#### What does the Milefy API do?\n\nYou can use it to:\n1. Calculate **mileage earnings** for specific flights,\n2. Learn which flights are eligible for **upgrades to a higher cabin**, e.g. from Economy to Business,\n3. Get a list of all **status benefits** that apply for each flight based on the travelers’s frequent flyer program status tier.\n4. Get a full list of **fare attributes** including seat selection, checked baggage, changeability and others.\n5. Track traveler frequent flyer accounts.\n\nMilefy API is a REST service using HTTPS protocol and JSON format to encode both request and response data.\n\n#### Request headers\n\nTo enforce proper request encoding and its compression you should always set following headers:\n\n##### Data format\nWe use JSON format enchanced with <a href=\"http://stateless.co/hal_specification.html\" target=\"_blank\" title=\"Learn more about HAL and hypermedia\">HAL hypermedia type</a>.\n\nHeader: ```Accept: application/hal+json```\n\n##### Character encoding\n\nHeader: ```Content-Type: application/json;charset=UTF-8```\n\n##### API version\n\nSince version 2.5, we require the setting of an additional request header, which indicates which version of Milefy API you want to use. In case header is absent, version 2.4 will be used by default (not recommended).\n\nHeader: ```X-Api-Version: v3.0```\n\n## Performance\n\n#### Large flight result sets\n\nWhen working with large flight result sets processed by [Calculate attributes & benefits](http://milefy-api-docs.30k.com) method, it’s recommended to **divide them into smaller batches and send them in simultaneous requests**. When received, the multiple responses should then be remerged into a single result set. For example, instead of sending a single request containing a result set of 1,000 different flights, you can send 5 smaller requests simultaneously, each consisting of 200 flights.\n\nAll divided requests for the same result set are billed as only one request. In order to assure that, you only need to fulfill the following two conditions:\n\n1. All requests need to be send almost at the same time (we need to receive them within a frame of less than 30 seconds),\n2. The flights need to be split into chunks of 50-200 flights.\n\n## Used constants\n\nLists of constant values used in API and their definitions (click to expand):\n\n1. [Status tiers](http://milefy-api-docs.30k.com), used for example in [Get program](http://milefy-api-docs.30k.com) method.\n2. [Types of miles](http://milefy-api-docs.30k.com), used for example in [Get program](http://milefy-api-docs.30k.com) method.\n3. [Airline alliances](http://milefy-api-docs.30k.com), used for example in [Get program](http://milefy-api-docs.30k.com) method.\n4. [Cabin classes](http://milefy-api-docs.30k.com), used for example in [Calculate attributes & benefits](http://milefy-api-docs.30k.com) method.\n5. [Status benefits](http://milefy-api-docs.30k.com), used for example in [Get status benefit type](http://milefy-api-docs.30k.com) method.\n6. [Fare attributes](http://milefy-api-docs.30k.com), used for example in [Get fare attribute type](http://milefy-api-docs.30k.com) method.\n7. [Error codes](http://milefy-api-docs.30k.com), used across all methods.\n",
  "apiTitle": "Milefy API",
  "endpoints": 12,
  "sdkMethods": 18,
  "schemas": 41,
  "parameters": 36,
  "contactUrl": "http://www.30k.com/",
  "contactEmail": "support@30k.com",
  "originalCustomRequest": {
    "type": "GET",
    "url": "http://milefy-api-docs.30k.com/milefy.yaml"
  },
  "customRequestSpecFilename": "30k.com_Milefy.yaml",
  "difficultyScore": 39,
  "difficulty": "Very Easy",
  "company": "30K",
  "serviceName": "Milefy",
  "sdkName": "30-k-milefy-{language}-sdk",
  "clientName": "30KMilefy",
  "metaDescription": "30K is the only remaining independent provider of Fare Attribute and the only credible provider of Mileage Earning and Frequent Flyer Benefit data to help personalize flight search results for air travel shoppers. Proven increase in conversion for air travel retailers and happiness for travelers.\n\n- Reaching 2.3 M users per day, mainly in Europe, China and USA.\n- Voted \"Best Business Travel Innovation\" by GBTA in 2017.\n- One of top companies to watch in 2019 according to Amadeus.",
  "apiStatusUrls": "inherit",
  "homepage": "30k.com",
  "developerDocumentation": "milefy-api-docs.30k.com/",
  "categories": [
    "travel_expenses",
    "online_travel",
    "air_travel_loyalty_programs"
  ],
  "category": "Travel",
  "methods": [
    {
      "url": "/programs",
      "method": "getFrequentFlyerPrograms",
      "httpMethod": "get",
      "tag": "Static data",
      "typeScriptTag": "staticData",
      "description": "Get program collection",
      "parameters": [
        {
          "name": "authentication",
          "schema": "string",
          "required": false,
          "description": "Filter programs based on supported authentication method(https://milefy-api-docs.30k.com/",
          "example": "simple,none"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/programs/{code}",
      "method": "getFrequentFlyerProgram",
      "httpMethod": "get",
      "tag": "Static data",
      "typeScriptTag": "staticData",
      "description": "Get program",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Frequent flyer program code",
          "example": "BAC"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Frequent flyer program"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": "Not found"
        }
      ]
    },
    {
      "url": "/benefits",
      "method": "getStatusBenefitTypeCollection",
      "httpMethod": "get",
      "tag": "Static data",
      "typeScriptTag": "staticData",
      "description": "Get status benefit type collection",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/benefits/{code}",
      "method": "getStatusBenefitType",
      "httpMethod": "get",
      "tag": "Static data",
      "typeScriptTag": "staticData",
      "description": "Get status benefit type",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Status benefit type code",
          "example": "CMPCHG"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Invalid benefit type code"
        },
        {
          "statusCode": "404",
          "description": "Not found"
        }
      ]
    },
    {
      "url": "/attributes",
      "method": "getFareAttributeTypes",
      "httpMethod": "get",
      "tag": "Static data",
      "typeScriptTag": "staticData",
      "description": "Get fare attribute type collection",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/attributes/{code}",
      "method": "getFareAttributeType",
      "httpMethod": "get",
      "tag": "Static data",
      "typeScriptTag": "staticData",
      "description": "Get fare attribute type",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Fare attribute type code",
          "example": "XTRBGG"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Invalid fare attribute type code"
        },
        {
          "statusCode": "404",
          "description": "Not found"
        }
      ]
    },
    {
      "url": "/calculate",
      "method": "calculateAttributesBenefits",
      "httpMethod": "post",
      "tag": "Flights",
      "typeScriptTag": "flights",
      "description": "Calculate attributes & benefits",
      "parameters": [
        {
          "name": "fields",
          "schema": "string",
          "required": false,
          "description": "Used to select returned properties and optimize the processing time of the request. Based on XPath queries. [Learn more](http://milefy-api-docs.30k.com).\n",
          "example": "id,flights(id,programs(code,statusTiers(https://milefy-api-docs.30k.com/))"
        },
        {
          "name": "traveler",
          "schema": "string",
          "required": true,
          "description": "[Traveler](http://milefy-api-docs.30k.com) ID for the flight results personalization.\n",
          "example": "abc111"
        },
        {
          "name": "scope",
          "schema": "string",
          "required": false,
          "description": "If not specified, ```memberships``` is assumed as default value, which results in calculations returned for traveler's memberships. Alternatively you can use ```memberships_and_default_program``` value to get calculations for both: traveler's memberships and default program of marketing airline in case none of memberships apply for a particular flight.\n"
        },
        {
          "name": "sourceClientId",
          "schema": "string",
          "required": false,
          "description": "Client ID for statistical purposes",
          "example": "source-client-abc-111"
        },
        {
          "name": "flights",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/fare-attributes",
      "method": "calculateFareAttributes",
      "httpMethod": "post",
      "tag": "Flights",
      "typeScriptTag": "flights",
      "description": "Calculate fare attributes",
      "parameters": [
        {
          "name": "undefined",
          "schema": "string",
          "required": false,
          "description": "Scope of calculation: ```attributes``` to return only fare attributes and ```attributes_and_mileage``` to return both fare attributes and mileage earnings.\n",
          "default": "attributes"
        },
        {
          "name": "legs",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/travelers",
      "method": "listCollection",
      "httpMethod": "get",
      "tag": "Travelers",
      "typeScriptTag": "travelers",
      "description": "Get traveler collection",
      "parameters": [
        {
          "name": "offset",
          "schema": "integer",
          "description": "Number of items skipped from the beginning of the collection.",
          "example": 100
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Maximum number of items to return.",
          "default": 100
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/travelers",
      "method": "createProfile",
      "httpMethod": "post",
      "tag": "Travelers",
      "typeScriptTag": "travelers",
      "description": "Create traveler",
      "parameters": [
        {
          "name": "country",
          "schema": "string",
          "description": "",
          "example": "DE"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/travelers/{id}",
      "method": "removeProfile",
      "httpMethod": "delete",
      "tag": "Travelers",
      "typeScriptTag": "travelers",
      "description": "Delete traveler",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Traveler ID",
          "example": "abc111"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Traveler deleted"
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/travelers/{id}",
      "method": "getProfile",
      "httpMethod": "get",
      "tag": "Travelers",
      "typeScriptTag": "travelers",
      "description": "Get traveler",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Traveler ID",
          "example": "abc111"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/travelers/{id}",
      "method": "updateProfile",
      "httpMethod": "put",
      "tag": "Travelers",
      "typeScriptTag": "travelers",
      "description": "Edit traveler",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Traveler ID",
          "example": "abc111"
        },
        {
          "name": "country",
          "schema": "string",
          "description": "",
          "example": "DE"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/travelers/{id}/memberships",
      "method": "getList",
      "httpMethod": "get",
      "tag": "Memberships",
      "typeScriptTag": "memberships",
      "description": "Get membership collection",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Traveler ID",
          "example": "abc111"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/travelers/{id}/memberships",
      "method": "createFrequentFlyerProgramMembership",
      "httpMethod": "post",
      "tag": "Memberships",
      "typeScriptTag": "memberships",
      "description": "Create membership",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Traveler ID",
          "example": "abc111"
        },
        {
          "name": "program",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "BAC"
        },
        {
          "name": "memberNumber",
          "schema": "string",
          "required": false,
          "description": "",
          "example": "5345436"
        },
        {
          "name": "memberName",
          "schema": "string",
          "required": false,
          "description": "",
          "example": "Mr. Smith"
        },
        {
          "name": "mileageEarnings",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "statusTier",
          "schema": "integer",
          "required": false,
          "description": "",
          "example": 8
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": "Conflict (such membership already exists)"
        }
      ]
    },
    {
      "url": "/travelers/{id}/memberships/{code}",
      "method": "deleteMembership",
      "httpMethod": "delete",
      "tag": "Memberships",
      "typeScriptTag": "memberships",
      "description": "Delete membership",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Traveler ID",
          "example": "abc111"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Frequent flyer program code",
          "example": "BAC"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Membership deleted"
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/travelers/{id}/memberships/{code}",
      "method": "getMembershipByCode",
      "httpMethod": "get",
      "tag": "Memberships",
      "typeScriptTag": "memberships",
      "description": "Get membership",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Traveler ID",
          "example": "abc111"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Frequent flyer program code",
          "example": "BAC"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/travelers/{id}/memberships/{code}",
      "method": "editTravelerMembership",
      "httpMethod": "put",
      "tag": "Memberships",
      "typeScriptTag": "memberships",
      "description": "Edit membership",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Traveler ID",
          "example": "abc111"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Frequent flyer program code",
          "example": "BAC"
        },
        {
          "name": "program",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "BAC"
        },
        {
          "name": "memberNumber",
          "schema": "string",
          "required": false,
          "description": "",
          "example": "5345436"
        },
        {
          "name": "memberName",
          "schema": "string",
          "required": false,
          "description": "",
          "example": "Mr. Smith"
        },
        {
          "name": "mileageEarnings",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "statusTier",
          "schema": "integer",
          "required": false,
          "description": "",
          "example": 8
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "409",
          "description": ""
        }
      ]
    }
  ],
  "repositoryDescription": "30K: Independent provider of Fare Attribute data, Mileage Earning, and Frequent Flyer Benefits for personalized flight searches. Boosts retailer conversions and traveler satisfaction. Serving 2.3M daily users in Europe, China, and USA. Awarded 'Best Business Travel Innovation' in 2017. Recognized as a top company to watch in 2019 by Amadeus.",
  "logo": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/30-k/milefy/logo.png",
  "openApiRaw": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/30-k/milefy/openapi.yaml",
  "openApiGitHubUi": "https://github.com/konfig-sdks/openapi-examples/tree/HEAD/30-k/milefy/openapi.yaml",
  "previewLinkImage": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/30-k/milefy/imagePreview.jpg",
  "faviconUrl": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/30-k/milefy/favicon.png",
  "clientNameCamelCase": "30KMilefy",
  "lastUpdated": "2024-03-29T23:09:10.236Z",
  "typescriptSdkUsageCode": "import { 30KMilefy } from '30-k-milefy-typescript-sdk';\n\nconst 30KMilefy = new 30KMilefy({\n    /*\n     * We use SSL to transmit data from client to our service. You must authenticate client with provided API key passed as parameter in query string. [Don't have API key?](mailto:support@30k.com)\n     * \n     * #### URL example\n     * \n     * ```https://milefy-api.30k.com/travelers?apiKey=eW91cmxvZ2luOnlvd```\n     * \n     */\n    apiKey: \"API_KEY\"\n})",
  "typescriptSdkFirstRequestCode": "// Get program collection\nconst getFrequentFlyerProgramsResponse = 30KMilefy.staticData.getFrequentFlyerPrograms({\n    authentication: \"simple,none\"\n})",
  "fixedSpecFileName": "30-k-milefy-fixed-spec.yaml"
}