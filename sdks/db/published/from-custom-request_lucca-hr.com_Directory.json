{
  "securitySchemes": {
    "Authorization": {
      "name": "Authorization",
      "type": "apiKey",
      "in": "header"
    }
  },
  "apiBaseUrl": "https://example.ilucca.net",
  "apiVersion": "1.0",
  "apiDescription": "Welcome on the documentation for the Directory v3 API.\n",
  "apiTitle": "Directory-v3",
  "endpoints": 2,
  "sdkMethods": 6,
  "schemas": 7,
  "parameters": 35,
  "contactUrl": "https://www.lucca.fr",
  "contactEmail": "developers@lucca.fr",
  "originalCustomRequest": {
    "type": "GET",
    "url": "https://stoplight.io/api/v1/projects/lucca/lucca-legacyapi/nodes/reference/Directory-v3.yaml?fromExportButton=true&snapshotType=http_service&deref=optimizedBundle"
  },
  "customRequestSpecFilename": "lucca-hr.com_Directory.yaml",
  "difficultyScore": 15.25,
  "difficulty": "Very Easy",
  "company": "Lucca",
  "serviceName": "Directory",
  "sdkName": "lucca-directory-{language}-sdk",
  "clientName": "LuccaDirectory",
  "metaDescription": "Nereo est un éditeur de logiciels de gestion des ressources humaines, basé à Saint Etienne, qui propose à ses clients des solutions accessibles en ligne pour faciliter des tâches chronophages et sans réelle valeur ajoutée telles que la gestion des congés, des temps et activités ou encore des notes de frais.\n\nCréée en décembre 2011, Nereo propose déjà une solution complète de gestion de congés et absences en mode SaaS baptisée Nereo Congés.",
  "apiStatusUrls": "inherit",
  "homepage": "lucca-hr.com",
  "developerDocumentation": "developers.lucca.fr/",
  "categories": [
    "hr",
    "hr_management",
    "resource_management",
    "human_resources",
    "scheduling",
    "time_management",
    "attendance_management",
    "hr_automation"
  ],
  "category": "HR Talent & Recruitment",
  "methods": [
    {
      "url": "/api/v3/users",
      "method": "listExcludedFormer",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "List Users",
      "parameters": [
        {
          "name": "dtContractEnd",
          "schema": "string",
          "description": "`{comparator},{date-time}`.\n"
        },
        {
          "name": "dtContractStart",
          "schema": "string",
          "description": "{comparator},{date-time}"
        },
        {
          "name": "id",
          "schema": "array",
          "description": "User's identifier"
        },
        {
          "name": "modifiedAt",
          "schema": "string",
          "description": "{comparator},{date-time}"
        },
        {
          "name": "paging",
          "schema": "string",
          "description": "{offset},{limit}. Defaults to 0,1000."
        },
        {
          "name": "fields",
          "schema": "array",
          "description": ""
        },
        {
          "name": "mail",
          "schema": "string",
          "description": "User's mail"
        },
        {
          "name": "login",
          "schema": "string",
          "description": "User's login"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "500",
          "description": "User Not Found"
        }
      ]
    },
    {
      "url": "/api/v3/users",
      "method": "createNewUser",
      "httpMethod": "post",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Create a new User",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "500",
          "description": "Internal Server Error"
        }
      ]
    },
    {
      "url": "/api/v3/users/{userId}",
      "method": "getById",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Get a User by Id",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "description": "Comma-separated list of fields of the user to include in responses. Extended data can be retrieved with `?fields=extendedData`.\n"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "500",
          "description": "User Not Found"
        }
      ]
    },
    {
      "url": "/api/v3/users/{userId}",
      "method": "updateById",
      "httpMethod": "put",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "Update a User by id",
      "parameters": [
        {
          "name": "fields",
          "schema": "array",
          "description": "Fields of the user, comma separated"
        },
        {
          "name": "firstName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mail",
          "schema": "string",
          "description": ""
        },
        {
          "name": "login",
          "schema": "string",
          "description": ""
        },
        {
          "name": "legalEntityId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "cspId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "calendarId",
          "schema": "null",
          "description": ""
        },
        {
          "name": "employeeNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "birthDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userWorkCycles",
          "schema": "array",
          "description": ""
        },
        {
          "name": "departmentId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "managerId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "rolePrincipalId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "habilitedRoles",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cultureId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "address",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bankName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "directLine",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jobTitle",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nationality",
          "schema": "string",
          "description": ""
        },
        {
          "name": "personalEmail",
          "schema": "string",
          "description": ""
        },
        {
          "name": "personalMobile",
          "schema": "string",
          "description": ""
        },
        {
          "name": "professionalMobile",
          "schema": "string",
          "description": ""
        },
        {
          "name": "quote",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "OK"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "404",
          "description": "Not Found"
        },
        {
          "statusCode": "500",
          "description": "Internal Server Error"
        }
      ]
    }
  ],
  "repositoryDescription": "Nereo, éditeur de logiciels RH basé à Saint Etienne, offre des solutions en ligne pour simplifier la gestion des congés, temps, activités et frais. Fondée en décembre 2011, propose Nereo Congés en mode SaaS. Lucca's {language} SDK for Directory API generated by Konfig (https://konfigthis.com/).",
  "logo": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/lucca/directory/logo.svg",
  "openApiRaw": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/lucca/directory/openapi.yaml",
  "openApiGitHubUi": "https://github.com/konfig-sdks/openapi-examples/tree/HEAD/lucca/directory/openapi.yaml",
  "previewLinkImage": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/lucca/directory/imagePreview.jpg",
  "faviconUrl": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/lucca/directory/favicon.png",
  "clientNameCamelCase": "luccaDirectory",
  "lastUpdated": "2024-03-27T01:23:25.425Z",
  "typescriptSdkUsageCode": "import { LuccaDirectory } from 'lucca-directory-typescript-sdk';\n\nconst luccaDirectory = new LuccaDirectory({\n    authorization: \"AUTHORIZATION\"\n})",
  "typescriptSdkFirstRequestCode": "// List Users\nconst listExcludedFormerResponse = luccaDirectory.users.listExcludedFormer()",
  "fixedSpecFileName": "lucca-directory-fixed-spec.yaml"
}